{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "C:/Users/Mfon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/math/SafeMath.sol",
    "10": "interfaces/IV2ERC20.sol",
    "5": "contracts/V2ERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/V2ERC20.sol",
    "exportedSymbols": {
      "IV2ERC20": [
        4128
      ],
      "SafeMath": [
        3314
      ],
      "V2ERC20": [
        3688
      ]
    },
    "id": 3689,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3316,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:5"
      },
      {
        "absolutePath": "interfaces/IV2ERC20.sol",
        "file": "../interfaces/IV2ERC20.sol",
        "id": 3317,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3689,
        "sourceUnit": 4129,
        "src": "69:36:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Mfon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3318,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3689,
        "sourceUnit": 3315,
        "src": "107:57:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3319,
              "name": "IV2ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4128,
              "src": "188:8:5"
            },
            "id": 3320,
            "nodeType": "InheritanceSpecifier",
            "src": "188:8:5"
          }
        ],
        "canonicalName": "V2ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3688,
        "linearizedBaseContracts": [
          3688,
          4128
        ],
        "name": "V2ERC20",
        "nameLocation": "177:7:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 3323,
            "libraryName": {
              "id": 3321,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3314,
              "src": "210:8:5"
            },
            "nodeType": "UsingForDirective",
            "src": "204:24:5",
            "typeName": {
              "id": 3322,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "223:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "baseFunctions": [
              4033
            ],
            "constant": true,
            "functionSelector": "06fdde03",
            "id": 3326,
            "mutability": "constant",
            "name": "name",
            "nameLocation": "259:4:5",
            "nodeType": "VariableDeclaration",
            "scope": 3688,
            "src": "236:42:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 3324,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "236:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "556e6973776170205632",
              "id": 3325,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "266:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738",
                "typeString": "literal_string \"Uniswap V2\""
              },
              "value": "Uniswap V2"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4038
            ],
            "constant": true,
            "functionSelector": "95d89b41",
            "id": 3329,
            "mutability": "constant",
            "name": "symbol",
            "nameLocation": "308:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 3688,
            "src": "285:40:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 3327,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "285:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "554e492d5632",
              "id": 3328,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "317:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0c49a525f6758cfb27d0ada1467d2a2e99733995423d47ae30ae4ba2ba563255",
                "typeString": "literal_string \"UNI-V2\""
              },
              "value": "UNI-V2"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4043
            ],
            "constant": true,
            "functionSelector": "313ce567",
            "id": 3332,
            "mutability": "constant",
            "name": "decimals",
            "nameLocation": "354:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 3688,
            "src": "332:35:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 3330,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "332:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 3331,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "365:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4048
            ],
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 3334,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "387:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 3688,
            "src": "374:24:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3333,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "374:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4055
            ],
            "constant": false,
            "functionSelector": "70a08231",
            "id": 3338,
            "mutability": "mutable",
            "name": "balanceOf",
            "nameLocation": "437:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 3688,
            "src": "405:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3337,
              "keyType": {
                "id": 3335,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "413:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "405:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3336,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "424:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4064
            ],
            "constant": false,
            "functionSelector": "dd62ed3e",
            "id": 3344,
            "mutability": "mutable",
            "name": "allowance",
            "nameLocation": "505:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 3688,
            "src": "453:61:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 3343,
              "keyType": {
                "id": 3339,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "461:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "453:44:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 3342,
                "keyType": {
                  "id": 3340,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "480:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "472:24:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 3341,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "491:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4098
            ],
            "constant": false,
            "functionSelector": "3644e515",
            "id": 3346,
            "mutability": "mutable",
            "name": "DOMAIN_SEPARATOR",
            "nameLocation": "538:16:5",
            "nodeType": "VariableDeclaration",
            "scope": 3688,
            "src": "523:31:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3345,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "523:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4103
            ],
            "constant": true,
            "functionSelector": "30adf81f",
            "id": 3349,
            "mutability": "constant",
            "name": "PERMIT_TYPEHASH",
            "nameLocation": "690:15:5",
            "nodeType": "VariableDeclaration",
            "scope": 3688,
            "src": "666:108:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3347,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "666:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
              "id": 3348,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "708:66:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
                "typeString": "int_const 4995...(69 digits omitted)...3241"
              },
              "value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4110
            ],
            "constant": false,
            "functionSelector": "7ecebe00",
            "id": 3353,
            "mutability": "mutable",
            "name": "nonces",
            "nameLocation": "813:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 3688,
            "src": "781:38:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3352,
              "keyType": {
                "id": 3350,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "789:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "781:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3351,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "800:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3388,
              "nodeType": "Block",
              "src": "844:439:5",
              "statements": [
                {
                  "assignments": [
                    3357
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3357,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nameLocation": "860:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 3388,
                      "src": "855:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3356,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "855:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3358,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "855:12:5"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "887:46:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "902:20:5",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "913:7:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "913:9:5"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "902:7:5"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3357,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "902:7:5",
                      "valueSize": 1
                    }
                  ],
                  "id": 3359,
                  "nodeType": "InlineAssembly",
                  "src": "878:55:5"
                },
                {
                  "expression": {
                    "id": 3386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3360,
                      "name": "DOMAIN_SEPARATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3346,
                      "src": "943:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                  "id": 3365,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1025:84:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                  },
                                  "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                  }
                                ],
                                "id": 3364,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "1015:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 3366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1015:95:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 3370,
                                      "name": "name",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3326,
                                      "src": "1145:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "id": 3369,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1139:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 3368,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1139:5:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1139:11:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 3367,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "1129:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 3372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1129:22:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 3376,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1186:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                        "typeString": "literal_string \"1\""
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                        "typeString": "literal_string \"1\""
                                      }
                                    ],
                                    "id": 3375,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1180:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 3374,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1180:5:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3377,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1180:10:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 3373,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "1170:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 3378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1170:21:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 3379,
                              "name": "chainId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3357,
                              "src": "1210:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3382,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1244:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_V2ERC20_$3688",
                                    "typeString": "contract V2ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_V2ERC20_$3688",
                                    "typeString": "contract V2ERC20"
                                  }
                                ],
                                "id": 3381,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1236:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3380,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1236:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1236:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3362,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "986:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "986:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "986:278:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3361,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "962:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 3385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "962:313:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "943:332:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3387,
                  "nodeType": "ExpressionStatement",
                  "src": "943:332:5"
                }
              ]
            },
            "id": 3389,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "841:2:5"
            },
            "returnParameters": {
              "id": 3355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:0:5"
            },
            "scope": 3688,
            "src": "830:453:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3423,
              "nodeType": "Block",
              "src": "1339:153:5",
              "statements": [
                {
                  "expression": {
                    "id": 3401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3396,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3334,
                      "src": "1350:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3399,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3393,
                          "src": "1380:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 3397,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3334,
                          "src": "1364:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3178,
                        "src": "1364:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1364:22:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1350:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3402,
                  "nodeType": "ExpressionStatement",
                  "src": "1350:36:5"
                },
                {
                  "expression": {
                    "id": 3412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3403,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3338,
                        "src": "1397:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3405,
                      "indexExpression": {
                        "id": 3404,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3391,
                        "src": "1407:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1397:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3410,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3393,
                          "src": "1431:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3406,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3338,
                            "src": "1413:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3408,
                          "indexExpression": {
                            "id": 3407,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3391,
                            "src": "1423:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1413:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3178,
                        "src": "1413:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1413:24:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1397:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3413,
                  "nodeType": "ExpressionStatement",
                  "src": "1397:40:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1470:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1462:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3415,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1462:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1462:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3419,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3391,
                        "src": "1474:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3420,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3393,
                        "src": "1478:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3414,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4028,
                      "src": "1453:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1453:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3422,
                  "nodeType": "EmitStatement",
                  "src": "1448:36:5"
                }
              ]
            },
            "id": 3424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "1300:5:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3391,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1314:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3424,
                  "src": "1306:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1306:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3393,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1323:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3424,
                  "src": "1318:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3392,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1305:24:5"
            },
            "returnParameters": {
              "id": 3395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1339:0:5"
            },
            "scope": 3688,
            "src": "1291:201:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3458,
              "nodeType": "Block",
              "src": "1550:159:5",
              "statements": [
                {
                  "expression": {
                    "id": 3440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3431,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3338,
                        "src": "1561:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3433,
                      "indexExpression": {
                        "id": 3432,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3426,
                        "src": "1571:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1561:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3438,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3428,
                          "src": "1599:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3434,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3338,
                            "src": "1579:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3436,
                          "indexExpression": {
                            "id": 3435,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3426,
                            "src": "1589:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1579:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3193,
                        "src": "1579:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1579:26:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1561:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3441,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:44:5"
                },
                {
                  "expression": {
                    "id": 3447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3442,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3334,
                      "src": "1616:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3445,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3428,
                          "src": "1646:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 3443,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3334,
                          "src": "1630:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3193,
                        "src": "1630:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1630:22:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1616:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3448,
                  "nodeType": "ExpressionStatement",
                  "src": "1616:36:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3450,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3426,
                        "src": "1677:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1691:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1683:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3451,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1683:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1683:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3455,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3428,
                        "src": "1695:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3449,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4028,
                      "src": "1668:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1668:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3457,
                  "nodeType": "EmitStatement",
                  "src": "1663:38:5"
                }
              ]
            },
            "id": 3459,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "1509:5:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3426,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1523:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3459,
                  "src": "1515:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1515:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3428,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1534:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3459,
                  "src": "1529:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3427,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1514:26:5"
            },
            "returnParameters": {
              "id": 3430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1550:0:5"
            },
            "scope": 3688,
            "src": "1500:209:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3482,
              "nodeType": "Block",
              "src": "1787:99:5",
              "statements": [
                {
                  "expression": {
                    "id": 3474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3468,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3344,
                          "src": "1798:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 3471,
                        "indexExpression": {
                          "id": 3469,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3461,
                          "src": "1808:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1798:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3472,
                      "indexExpression": {
                        "id": 3470,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3463,
                        "src": "1815:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1798:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3473,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3465,
                      "src": "1826:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1798:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3475,
                  "nodeType": "ExpressionStatement",
                  "src": "1798:33:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3477,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3461,
                        "src": "1856:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3478,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3463,
                        "src": "1863:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3479,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3465,
                        "src": "1872:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3476,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4020,
                      "src": "1847:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3481,
                  "nodeType": "EmitStatement",
                  "src": "1842:36:5"
                }
              ]
            },
            "id": 3483,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "1726:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3461,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1743:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3483,
                  "src": "1735:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3463,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1758:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3483,
                  "src": "1750:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1750:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3465,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1772:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3483,
                  "src": "1767:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3464,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1734:44:5"
            },
            "returnParameters": {
              "id": 3467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1787:0:5"
            },
            "scope": 3688,
            "src": "1717:169:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3520,
              "nodeType": "Block",
              "src": "1959:155:5",
              "statements": [
                {
                  "expression": {
                    "id": 3501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3492,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3338,
                        "src": "1970:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3494,
                      "indexExpression": {
                        "id": 3493,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3485,
                        "src": "1980:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1970:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3499,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3489,
                          "src": "2008:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3495,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3338,
                            "src": "1988:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3497,
                          "indexExpression": {
                            "id": 3496,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3485,
                            "src": "1998:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1988:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3193,
                        "src": "1988:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1988:26:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1970:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3502,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:44:5"
                },
                {
                  "expression": {
                    "id": 3512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3503,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3338,
                        "src": "2025:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3505,
                      "indexExpression": {
                        "id": 3504,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3487,
                        "src": "2035:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2025:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3510,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3489,
                          "src": "2059:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 3506,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3338,
                            "src": "2041:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3508,
                          "indexExpression": {
                            "id": 3507,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3487,
                            "src": "2051:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2041:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3178,
                        "src": "2041:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2041:24:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2025:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3513,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:40:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3515,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3485,
                        "src": "2090:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3516,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3487,
                        "src": "2096:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3517,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3489,
                        "src": "2100:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3514,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4028,
                      "src": "2081:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2081:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3519,
                  "nodeType": "EmitStatement",
                  "src": "2076:30:5"
                }
              ]
            },
            "id": 3521,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "1903:9:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3485,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1921:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3521,
                  "src": "1913:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3487,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1935:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3521,
                  "src": "1927:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1927:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3489,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1944:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3521,
                  "src": "1939:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3488,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1912:38:5"
            },
            "returnParameters": {
              "id": 3491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1959:0:5"
            },
            "scope": 3688,
            "src": "1894:220:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              4073
            ],
            "body": {
              "id": 3539,
              "nodeType": "Block",
              "src": "2192:77:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3531,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2212:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2212:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3533,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3523,
                        "src": "2224:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3534,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3525,
                        "src": "2233:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3530,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3483,
                      "src": "2203:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2203:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3536,
                  "nodeType": "ExpressionStatement",
                  "src": "2203:36:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2257:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3529,
                  "id": 3538,
                  "nodeType": "Return",
                  "src": "2250:11:5"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 3540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "2131:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3523,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2147:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3540,
                  "src": "2139:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2139:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3525,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2161:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3540,
                  "src": "2156:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3524,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2156:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2138:29:5"
            },
            "returnParameters": {
              "id": 3529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3528,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3540,
                  "src": "2186:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3527,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2186:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2185:6:5"
            },
            "scope": 3688,
            "src": "2122:147:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4082
            ],
            "body": {
              "id": 3558,
              "nodeType": "Block",
              "src": "2343:73:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3550,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2364:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2364:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3552,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3542,
                        "src": "2376:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3553,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3544,
                        "src": "2380:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3549,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3521,
                      "src": "2354:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2354:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3555,
                  "nodeType": "ExpressionStatement",
                  "src": "2354:32:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2404:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3548,
                  "id": 3557,
                  "nodeType": "Return",
                  "src": "2397:11:5"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 3559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "2286:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3542,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2303:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3559,
                  "src": "2295:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3544,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2312:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3559,
                  "src": "2307:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3543,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2307:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2294:24:5"
            },
            "returnParameters": {
              "id": 3548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3547,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3559,
                  "src": "2337:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3546,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2337:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2336:6:5"
            },
            "scope": 3688,
            "src": "2277:139:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4093
            ],
            "body": {
              "id": 3607,
              "nodeType": "Block",
              "src": "2508:226:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 3571,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3344,
                              "src": "2527:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 3573,
                            "indexExpression": {
                              "id": 3572,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3561,
                              "src": "2537:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2527:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3576,
                          "indexExpression": {
                            "expression": {
                              "id": 3574,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2543:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2543:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2527:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 3577,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3565,
                          "src": "2557:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2527:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
                        "id": 3579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2563:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        },
                        "value": "Insufficient allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        }
                      ],
                      "id": 3570,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2519:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2519:69:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3581,
                  "nodeType": "ExpressionStatement",
                  "src": "2519:69:5"
                },
                {
                  "expression": {
                    "id": 3597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3582,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3344,
                          "src": "2599:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 3586,
                        "indexExpression": {
                          "id": 3583,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3561,
                          "src": "2609:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2599:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3587,
                      "indexExpression": {
                        "expression": {
                          "id": 3584,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2615:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2615:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2599:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3595,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3565,
                          "src": "2661:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 3588,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3344,
                              "src": "2629:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 3590,
                            "indexExpression": {
                              "id": 3589,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3561,
                              "src": "2639:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2629:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3593,
                          "indexExpression": {
                            "expression": {
                              "id": 3591,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2645:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2645:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2629:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3193,
                        "src": "2629:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2629:38:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2599:68:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3598,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:68:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3600,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3561,
                        "src": "2688:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3601,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3563,
                        "src": "2694:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3602,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3565,
                        "src": "2698:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3599,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3521,
                      "src": "2678:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2678:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3604,
                  "nodeType": "ExpressionStatement",
                  "src": "2678:26:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2722:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3569,
                  "id": 3606,
                  "nodeType": "Return",
                  "src": "2715:11:5"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 3608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "2433:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3561,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2454:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3608,
                  "src": "2446:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2446:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3563,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2468:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3608,
                  "src": "2460:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2460:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3565,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2477:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3608,
                  "src": "2472:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3564,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2472:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2445:38:5"
            },
            "returnParameters": {
              "id": 3569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3568,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3608,
                  "src": "2502:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3567,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2502:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2501:6:5"
            },
            "scope": 3688,
            "src": "2424:310:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4127
            ],
            "body": {
              "id": 3686,
              "nodeType": "Block",
              "src": "2865:559:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3626,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3616,
                          "src": "2884:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 3627,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2896:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 3628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2896:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2884:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a2045585049524544",
                        "id": 3630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2913:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
                          "typeString": "literal_string \"UniswapV2: EXPIRED\""
                        },
                        "value": "UniswapV2: EXPIRED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
                          "typeString": "literal_string \"UniswapV2: EXPIRED\""
                        }
                      ],
                      "id": 3625,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2876:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:58:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3632,
                  "nodeType": "ExpressionStatement",
                  "src": "2876:58:5"
                },
                {
                  "assignments": [
                    3634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3634,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "2953:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 3686,
                      "src": "2945:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3633,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2945:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3656,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 3638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3021:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 3639,
                            "name": "DOMAIN_SEPARATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3346,
                            "src": "3050:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3643,
                                    "name": "PERMIT_TYPEHASH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3349,
                                    "src": "3106:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 3644,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3610,
                                    "src": "3123:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3645,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3612,
                                    "src": "3130:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3646,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3614,
                                    "src": "3139:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3650,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "3146:15:5",
                                    "subExpression": {
                                      "baseExpression": {
                                        "id": 3647,
                                        "name": "nonces",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3353,
                                        "src": "3146:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 3649,
                                      "indexExpression": {
                                        "id": 3648,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3610,
                                        "src": "3153:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "3146:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3651,
                                    "name": "deadline",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3616,
                                    "src": "3163:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3641,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3095:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 3642,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "3095:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 3652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3095:77:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 3640,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3085:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 3653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3085:88:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 3636,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2986:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2986:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2986:202:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3635,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2962:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2962:237:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2945:254:5"
                },
                {
                  "assignments": [
                    3658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3658,
                      "mutability": "mutable",
                      "name": "recoveredAddress",
                      "nameLocation": "3218:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 3686,
                      "src": "3210:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3657,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3210:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3665,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3660,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3634,
                        "src": "3247:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3661,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3618,
                        "src": "3255:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 3662,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3620,
                        "src": "3258:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3663,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3622,
                        "src": "3261:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3659,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "3237:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 3664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3237:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3210:53:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3667,
                            "name": "recoveredAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3658,
                            "src": "3282:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3310:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3302:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3668,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3302:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3302:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3282:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3673,
                            "name": "recoveredAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3658,
                            "src": "3316:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3674,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3610,
                            "src": "3336:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3316:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3282:59:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a20494e56414c49445f5349474e4154555245",
                        "id": 3677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3343:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
                          "typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
                        },
                        "value": "UniswapV2: INVALID_SIGNATURE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
                          "typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
                        }
                      ],
                      "id": 3666,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3274:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3274:100:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3679,
                  "nodeType": "ExpressionStatement",
                  "src": "3274:100:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3681,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3610,
                        "src": "3394:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3682,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3612,
                        "src": "3401:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3683,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3614,
                        "src": "3410:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3680,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3483,
                      "src": "3385:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3385:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3685,
                  "nodeType": "ExpressionStatement",
                  "src": "3385:31:5"
                }
              ]
            },
            "functionSelector": "d505accf",
            "id": 3687,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permit",
            "nameLocation": "2751:6:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3610,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2766:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3687,
                  "src": "2758:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2758:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3612,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2781:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3687,
                  "src": "2773:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2773:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3614,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2795:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3687,
                  "src": "2790:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3613,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2790:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3616,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "2807:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3687,
                  "src": "2802:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3615,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2802:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3618,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "2823:1:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3687,
                  "src": "2817:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3617,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2817:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3620,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "2834:1:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3687,
                  "src": "2826:9:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3619,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2826:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3622,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "2845:1:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3687,
                  "src": "2837:9:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3621,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2837:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2757:90:5"
            },
            "returnParameters": {
              "id": 3624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2865:0:5"
            },
            "scope": 3688,
            "src": "2742:682:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 3689,
        "src": "168:3259:5",
        "usedErrors": []
      }
    ],
    "src": "42:3385:5"
  },
  "bytecode": "608060405234801561001057600080fd5b50604080518082018252600a8152692ab734b9bbb0b8102b1960b11b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fbfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c090910190925281519101206003556108c3806100f16000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b41146101ea578063a9059cbb1461020f578063d505accf14610222578063dd62ed3e1461023757600080fd5b80633644e515146101a157806370a08231146101aa5780637ecebe00146101ca57600080fd5b806306fdde03146100d4578063095ea7b31461011357806318160ddd1461013657806323b872dd1461014d57806330adf81f14610160578063313ce56714610187575b600080fd5b6100fd6040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b60405161010a9190610697565b60405180910390f35b610126610121366004610708565b610262565b604051901515815260200161010a565b61013f60005481565b60405190815260200161010a565b61012661015b366004610732565b610278565b61013f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61018f601281565b60405160ff909116815260200161010a565b61013f60035481565b61013f6101b836600461076e565b60016020526000908152604090205481565b61013f6101d836600461076e565b60046020526000908152604090205481565b6100fd604051806040016040528060068152602001652aa72496ab1960d11b81525081565b61012661021d366004610708565b61034f565b610235610230366004610789565b61035c565b005b61013f6102453660046107fc565b600260209081526000928352604080842090915290825290205481565b600061026f338484610570565b50600192915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205482106102e85760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064015b60405180910390fd5b6001600160a01b038416600090815260026020908152604080832033845290915290205461031690836105d2565b6001600160a01b03851660009081526002602090815260408083203384529091529020556103458484846105e5565b5060019392505050565b600061026f3384846105e5565b428410156103a15760405162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b60448201526064016102df565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876103f483610845565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161046d92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156104d8573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061050e5750886001600160a01b0316816001600160a01b0316145b61055a5760405162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e41545552450000000060448201526064016102df565b610565898989610570565b505050505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105de828461085e565b9392505050565b6001600160a01b03831660009081526001602052604090205461060890826105d2565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610637908261068b565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906105c59085815260200190565b60006105de8284610875565b600060208083528351808285015260005b818110156106c4578581018301518582016040015282016106a8565b818111156106d6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070357600080fd5b919050565b6000806040838503121561071b57600080fd5b610724836106ec565b946020939093013593505050565b60008060006060848603121561074757600080fd5b610750846106ec565b925061075e602085016106ec565b9150604084013590509250925092565b60006020828403121561078057600080fd5b6105de826106ec565b600080600080600080600060e0888a0312156107a457600080fd5b6107ad886106ec565b96506107bb602089016106ec565b95506040880135945060608801359350608088013560ff811681146107df57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561080f57600080fd5b610818836106ec565b9150610826602084016106ec565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b6000600182016108575761085761082f565b5060010190565b6000828210156108705761087061082f565b500390565b600082198211156108885761088861082f565b50019056fea2646970667358221220e1ae2792bcf22c38b51b3961e3fb2eddc894a01b356555808a783a78aaa3236b64736f6c634300080e0033",
  "bytecodeSha1": "b85b3b01ee55ab539486e117645f8ed50e35b7bf",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "V2ERC20",
  "coverageMap": {
    "branches": {
      "1": {},
      "10": {},
      "5": {
        "V2ERC20.permit": {
          "18": [
            2884,
            2911,
            true
          ],
          "19": [
            3282,
            3312,
            false
          ],
          "20": [
            3316,
            3341,
            true
          ]
        },
        "V2ERC20.transferFrom": {
          "17": [
            2527,
            2562,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {
        "SafeMath.add": {
          "16": [
            2818,
            2830
          ]
        },
        "SafeMath.sub": {
          "12": [
            3185,
            3197
          ]
        }
      },
      "10": {},
      "5": {
        "V2ERC20._approve": {
          "10": [
            1798,
            1831
          ],
          "11": [
            1842,
            1878
          ]
        },
        "V2ERC20._transfer": {
          "13": [
            1970,
            2014
          ],
          "14": [
            2025,
            2065
          ],
          "15": [
            2076,
            2106
          ]
        },
        "V2ERC20.approve": {
          "0": [
            2203,
            2239
          ],
          "1": [
            2250,
            2261
          ]
        },
        "V2ERC20.permit": {
          "7": [
            2876,
            2934
          ],
          "8": [
            3274,
            3374
          ],
          "9": [
            3385,
            3416
          ]
        },
        "V2ERC20.transfer": {
          "6": [
            2354,
            2386
          ]
        },
        "V2ERC20.transferFrom": {
          "2": [
            2519,
            2588
          ],
          "3": [
            2599,
            2667
          ],
          "4": [
            2678,
            2704
          ],
          "5": [
            2715,
            2726
          ]
        }
      }
    }
  },
  "dependencies": [
    "IV2ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b41146101ea578063a9059cbb1461020f578063d505accf14610222578063dd62ed3e1461023757600080fd5b80633644e515146101a157806370a08231146101aa5780637ecebe00146101ca57600080fd5b806306fdde03146100d4578063095ea7b31461011357806318160ddd1461013657806323b872dd1461014d57806330adf81f14610160578063313ce56714610187575b600080fd5b6100fd6040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b60405161010a9190610697565b60405180910390f35b610126610121366004610708565b610262565b604051901515815260200161010a565b61013f60005481565b60405190815260200161010a565b61012661015b366004610732565b610278565b61013f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61018f601281565b60405160ff909116815260200161010a565b61013f60035481565b61013f6101b836600461076e565b60016020526000908152604090205481565b61013f6101d836600461076e565b60046020526000908152604090205481565b6100fd604051806040016040528060068152602001652aa72496ab1960d11b81525081565b61012661021d366004610708565b61034f565b610235610230366004610789565b61035c565b005b61013f6102453660046107fc565b600260209081526000928352604080842090915290825290205481565b600061026f338484610570565b50600192915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205482106102e85760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064015b60405180910390fd5b6001600160a01b038416600090815260026020908152604080832033845290915290205461031690836105d2565b6001600160a01b03851660009081526002602090815260408083203384529091529020556103458484846105e5565b5060019392505050565b600061026f3384846105e5565b428410156103a15760405162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b60448201526064016102df565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876103f483610845565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161046d92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156104d8573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061050e5750886001600160a01b0316816001600160a01b0316145b61055a5760405162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e41545552450000000060448201526064016102df565b610565898989610570565b505050505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105de828461085e565b9392505050565b6001600160a01b03831660009081526001602052604090205461060890826105d2565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610637908261068b565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906105c59085815260200190565b60006105de8284610875565b600060208083528351808285015260005b818110156106c4578581018301518582016040015282016106a8565b818111156106d6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070357600080fd5b919050565b6000806040838503121561071b57600080fd5b610724836106ec565b946020939093013593505050565b60008060006060848603121561074757600080fd5b610750846106ec565b925061075e602085016106ec565b9150604084013590509250925092565b60006020828403121561078057600080fd5b6105de826106ec565b600080600080600080600060e0888a0312156107a457600080fd5b6107ad886106ec565b96506107bb602089016106ec565b95506040880135945060608801359350608088013560ff811681146107df57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561080f57600080fd5b610818836106ec565b9150610826602084016106ec565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b6000600182016108575761085761082f565b5060010190565b6000828210156108705761087061082f565b500390565b600082198211156108885761088861082f565b50019056fea2646970667358221220e1ae2792bcf22c38b51b3961e3fb2eddc894a01b356555808a783a78aaa3236b64736f6c634300080e0033",
  "deployedSourceMap": "168:3259:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;236:42;;;;;;;;;;;;;;;-1:-1:-1;;;236:42:5;;;;;;;;;;;;:::i;:::-;;;;;;;;2122:147;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:11;;1211:22;1193:41;;1181:2;1166:18;2122:147:5;1053:187:11;374:24:5;;;;;;;;;1391:25:11;;;1379:2;1364:18;374:24:5;1245:177:11;2424:310:5;;;;;;:::i;:::-;;:::i;666:108::-;;708:66;666:108;;332:35;;365:2;332:35;;;;;2114:4:11;2102:17;;;2084:36;;2072:2;2057:18;332:35:5;1942:184:11;523:31:5;;;;;;405:41;;;;;;:::i;:::-;;;;;;;;;;;;;;781:38;;;;;;:::i;:::-;;;;;;;;;;;;;;285:40;;;;;;;;;;;;;;;-1:-1:-1;;;285:40:5;;;;;2277:139;;;;;;:::i;:::-;;:::i;2742:682::-;;;;;;:::i;:::-;;:::i;:::-;;453:61;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2122:147;2186:4;2203:36;2212:10;2224:7;2233:5;2203:8;:36::i;:::-;-1:-1:-1;2257:4:5;2122:147;;;;:::o;2424:310::-;-1:-1:-1;;;;;2527:15:5;;2502:4;2527:15;;;:9;:15;;;;;;;;2543:10;2527:27;;;;;;;;:35;-1:-1:-1;2519:69:5;;;;-1:-1:-1;;;2519:69:5;;3487:2:11;2519:69:5;;;3469:21:11;3526:2;3506:18;;;3499:30;-1:-1:-1;;;3545:18:11;;;3538:52;3607:18;;2519:69:5;;;;;;;;;-1:-1:-1;;;;;2629:15:5;;;;;;:9;:15;;;;;;;;2645:10;2629:27;;;;;;;;:38;;2661:5;2629:31;:38::i;:::-;-1:-1:-1;;;;;2599:15:5;;;;;;:9;:15;;;;;;;;2615:10;2599:27;;;;;;;:68;2678:26;2609:4;2694:2;2698:5;2678:9;:26::i;:::-;-1:-1:-1;2722:4:5;2424:310;;;;;:::o;2277:139::-;2337:4;2354:32;2364:10;2376:2;2380:5;2354:9;:32::i;2742:682::-;2896:15;2884:8;:27;;2876:58;;;;-1:-1:-1;;;2876:58:5;;3838:2:11;2876:58:5;;;3820:21:11;3877:2;3857:18;;;3850:30;-1:-1:-1;;;3896:18:11;;;3889:48;3954:18;;2876:58:5;3636:342:11;2876:58:5;3050:16;;-1:-1:-1;;;;;3146:13:5;;2945:14;3146:13;;;:6;:13;;;;;:15;;2945:14;;3050:16;708:66;;3123:5;;3130:7;;3139:5;;3146:15;2945:14;3146:15;;;:::i;:::-;;;;-1:-1:-1;3095:77:5;;;;;;4542:25:11;;;;-1:-1:-1;;;;;4641:15:11;;;4621:18;;;4614:43;4693:15;;;;4673:18;;;4666:43;4725:18;;;4718:34;4768:19;;;4761:35;4812:19;;;4805:35;;;4514:19;;3095:77:5;;;;;;;;;;;;3085:88;;;;;;2986:202;;;;;;;;-1:-1:-1;;;5109:27:11;;5161:1;5152:11;;5145:27;;;;5197:2;5188:12;;5181:28;5234:2;5225:12;;4851:392;2986:202:5;;;;-1:-1:-1;;2986:202:5;;;;;;;;;2962:237;;2986:202;2962:237;;;;3210:24;3237:26;;;;;;;;;5475:25:11;;;5548:4;5536:17;;5516:18;;;5509:45;;;;5570:18;;;5563:34;;;5613:18;;;5606:34;;;2962:237:5;;-1:-1:-1;3210:24:5;3237:26;;5447:19:11;;3237:26:5;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3237:26:5;;-1:-1:-1;;3237:26:5;;;-1:-1:-1;;;;;;;3282:30:5;;;;;;:59;;;3336:5;-1:-1:-1;;;;;3316:25:5;:16;-1:-1:-1;;;;;3316:25:5;;3282:59;3274:100;;;;-1:-1:-1;;;3274:100:5;;5853:2:11;3274:100:5;;;5835:21:11;5892:2;5872:18;;;5865:30;5931;5911:18;;;5904:58;5979:18;;3274:100:5;5651:352:11;3274:100:5;3385:31;3394:5;3401:7;3410:5;3385:8;:31::i;:::-;2865:559;;2742:682;;;;;;;:::o;1717:169::-;-1:-1:-1;;;;;1798:16:5;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;1847:31;;1391:25:11;;;1847:31:5;;1364:18:11;1847:31:5;;;;;;;;1717:169;;;:::o;3108:96:1:-;3166:7;3192:5;3196:1;3192;:5;:::i;:::-;3185:12;3108:96;-1:-1:-1;;;3108:96:1:o;1894:220:5:-;-1:-1:-1;;;;;1988:15:5;;;;;;:9;:15;;;;;;:26;;2008:5;1988:19;:26::i;:::-;-1:-1:-1;;;;;1970:15:5;;;;;;;:9;:15;;;;;;:44;;;;2041:13;;;;;;;:24;;2059:5;2041:17;:24::i;:::-;-1:-1:-1;;;;;2025:13:5;;;;;;;:9;:13;;;;;;;:40;;;;2081:25;;;;;;;;;;2100:5;1391:25:11;;1379:2;1364:18;;1245:177;2741:96:1;2799:7;2825:5;2829:1;2825;:5;:::i;14:597:11:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:11;574:15;-1:-1:-1;;570:29:11;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:11:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:11;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:11:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;2131:186::-;2190:6;2243:2;2231:9;2222:7;2218:23;2214:32;2211:52;;;2259:1;2256;2249:12;2211:52;2282:29;2301:9;2282:29;:::i;2322:693::-;2433:6;2441;2449;2457;2465;2473;2481;2534:3;2522:9;2513:7;2509:23;2505:33;2502:53;;;2551:1;2548;2541:12;2502:53;2574:29;2593:9;2574:29;:::i;:::-;2564:39;;2622:38;2656:2;2645:9;2641:18;2622:38;:::i;:::-;2612:48;;2707:2;2696:9;2692:18;2679:32;2669:42;;2758:2;2747:9;2743:18;2730:32;2720:42;;2812:3;2801:9;2797:19;2784:33;2857:4;2850:5;2846:16;2839:5;2836:27;2826:55;;2877:1;2874;2867:12;2826:55;2322:693;;;;-1:-1:-1;2322:693:11;;;;2900:5;2952:3;2937:19;;2924:33;;-1:-1:-1;3004:3:11;2989:19;;;2976:33;;2322:693;-1:-1:-1;;2322:693:11:o;3020:260::-;3088:6;3096;3149:2;3137:9;3128:7;3124:23;3120:32;3117:52;;;3165:1;3162;3155:12;3117:52;3188:29;3207:9;3188:29;:::i;:::-;3178:39;;3236:38;3270:2;3259:9;3255:18;3236:38;:::i;:::-;3226:48;;3020:260;;;;;:::o;3983:127::-;4044:10;4039:3;4035:20;4032:1;4025:31;4075:4;4072:1;4065:15;4099:4;4096:1;4089:15;4115:135;4154:3;4175:17;;;4172:43;;4195:18;;:::i;:::-;-1:-1:-1;4242:1:11;4231:13;;4115:135::o;6008:125::-;6048:4;6076:1;6073;6070:8;6067:34;;;6081:18;;:::i;:::-;-1:-1:-1;6118:9:11;;6008:125::o;6138:128::-;6178:3;6209:1;6205:6;6202:1;6199:13;6196:39;;;6215:18;;:::i;:::-;-1:-1:-1;6251:9:11;;6138:128::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    168,
    3427
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x2AB734B9BBB0B8102B19 PUSH1 0xB1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST PUSH2 0x13F PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST PUSH2 0x126 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x732 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST PUSH2 0x13F PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH2 0x18F PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST PUSH2 0x13F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x2AA72496AB19 PUSH1 0xD1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x34F JUMP JUMPDEST PUSH2 0x235 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x789 JUMP JUMPDEST PUSH2 0x35C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F CALLER DUP5 DUP5 PUSH2 0x570 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 LT PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x316 SWAP1 DUP4 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0x345 DUP5 DUP5 DUP5 PUSH2 0x5E5 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F CALLER DUP5 DUP5 PUSH2 0x5E5 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x155B9A5CDDD85C158C8E8811561412549151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP2 DUP12 SWAP2 DUP12 SWAP2 DUP12 SWAP2 SWAP1 DUP8 PUSH2 0x3F4 DUP4 PUSH2 0x845 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x46D SWAP3 SWAP2 SWAP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x50E JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DF JUMP JUMPDEST PUSH2 0x565 DUP10 DUP10 DUP10 PUSH2 0x570 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DE DUP3 DUP5 PUSH2 0x85E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x608 SWAP1 DUP3 PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x637 SWAP1 DUP3 PUSH2 0x68B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x5C5 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DE DUP3 DUP5 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6A8 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x724 DUP4 PUSH2 0x6EC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x750 DUP5 PUSH2 0x6EC JUMP JUMPDEST SWAP3 POP PUSH2 0x75E PUSH1 0x20 DUP6 ADD PUSH2 0x6EC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DE DUP3 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AD DUP9 PUSH2 0x6EC JUMP JUMPDEST SWAP7 POP PUSH2 0x7BB PUSH1 0x20 DUP10 ADD PUSH2 0x6EC JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x7DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x818 DUP4 PUSH2 0x6EC JUMP JUMPDEST SWAP2 POP PUSH2 0x826 PUSH1 0x20 DUP5 ADD PUSH2 0x6EC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x857 JUMPI PUSH2 0x857 PUSH2 0x82F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x870 JUMPI PUSH2 0x870 PUSH2 0x82F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x888 JUMPI PUSH2 0x888 PUSH2 0x82F JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xAE 0x27 SWAP3 0xBC CALLCODE 0x2C CODESIZE 0xB5 SHL CODECOPY PUSH2 0xE3FB 0x2E 0xDD 0xC8 SWAP5 LOG0 SHL CALLDATALOAD PUSH6 0x55808A783A78 0xAA LOG3 0x23 PUSH12 0x64736F6C634300080E003300 ",
  "pcMap": {
    "0": {
      "offset": [
        168,
        3427
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3644E515"
    },
    "38": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95D89B41"
    },
    "49": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "GT",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95D89B41"
    },
    "60": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1EA"
    },
    "64": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA9059CBB"
    },
    "71": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20F"
    },
    "75": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD505ACCF"
    },
    "82": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x222"
    },
    "86": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x237"
    },
    "97": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "101": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "REVERT",
      "path": "5"
    },
    "102": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "103": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "104": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3644E515"
    },
    "109": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "EQ",
      "path": "5"
    },
    "110": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A1"
    },
    "113": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AA"
    },
    "124": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x7ECEBE00"
    },
    "131": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "EQ",
      "path": "5"
    },
    "132": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CA"
    },
    "135": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "136": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "139": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "REVERT",
      "path": "5"
    },
    "140": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "141": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "142": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6FDDE03"
    },
    "147": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "EQ",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "152": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "153": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95EA7B3"
    },
    "158": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "EQ",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x113"
    },
    "162": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "163": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "164": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x18160DDD"
    },
    "169": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "EQ",
      "path": "5"
    },
    "170": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x136"
    },
    "173": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "174": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "175": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "180": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "EQ",
      "path": "5"
    },
    "181": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14D"
    },
    "184": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "185": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "186": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x30ADF81F"
    },
    "191": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "EQ",
      "path": "5"
    },
    "192": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x160"
    },
    "195": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "196": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "197": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x313CE567"
    },
    "202": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "EQ",
      "path": "5"
    },
    "203": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x187"
    },
    "206": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "207": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "208": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "DUP1",
      "path": "5"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        168,
        3427
      ],
      "op": "REVERT",
      "path": "5"
    },
    "212": {
      "offset": [
        236,
        278
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "213": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFD"
    },
    "216": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "218": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "219": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "220": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "222": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "ADD",
      "path": "5"
    },
    "223": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "225": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "226": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "227": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "229": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "DUP2",
      "path": "5"
    },
    "230": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "231": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "233": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "ADD",
      "path": "5"
    },
    "234": {
      "op": "PUSH10",
      "value": "0x2AB734B9BBB0B8102B19"
    },
    "245": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "247": {
      "op": "SHL"
    },
    "248": {
      "offset": [
        236,
        278
      ],
      "op": "DUP2",
      "path": "5"
    },
    "249": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "250": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "POP",
      "path": "5"
    },
    "251": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "DUP2",
      "path": "5"
    },
    "252": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "JUMP",
      "path": "5"
    },
    "253": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "254": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "256": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "257": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10A"
    },
    "260": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "261": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "262": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x697"
    },
    "265": {
      "fn": null,
      "jump": "i",
      "offset": [
        236,
        278
      ],
      "op": "JUMP",
      "path": "5"
    },
    "266": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "267": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "269": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "270": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "271": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "272": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "SUB",
      "path": "5"
    },
    "273": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "274": {
      "fn": null,
      "offset": [
        236,
        278
      ],
      "op": "RETURN",
      "path": "5"
    },
    "275": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "276": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x126"
    },
    "279": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x121"
    },
    "282": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "283": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "285": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x708"
    },
    "288": {
      "fn": "V2ERC20.approve",
      "jump": "i",
      "offset": [
        2122,
        2269
      ],
      "op": "JUMP",
      "path": "5"
    },
    "289": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "290": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x262"
    },
    "293": {
      "fn": "V2ERC20.approve",
      "jump": "i",
      "offset": [
        2122,
        2269
      ],
      "op": "JUMP",
      "path": "5"
    },
    "294": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "295": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "297": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "298": {
      "op": "SWAP1"
    },
    "299": {
      "op": "ISZERO"
    },
    "300": {
      "op": "ISZERO"
    },
    "301": {
      "op": "DUP2"
    },
    "302": {
      "op": "MSTORE"
    },
    "303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "305": {
      "op": "ADD"
    },
    "306": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10A"
    },
    "309": {
      "op": "JUMP"
    },
    "310": {
      "offset": [
        374,
        398
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "311": {
      "fn": "V2ERC20.approve",
      "offset": [
        374,
        398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13F"
    },
    "314": {
      "fn": "V2ERC20.approve",
      "offset": [
        374,
        398
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "316": {
      "fn": "V2ERC20.approve",
      "offset": [
        374,
        398
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "317": {
      "fn": "V2ERC20.approve",
      "offset": [
        374,
        398
      ],
      "op": "DUP2",
      "path": "5"
    },
    "318": {
      "fn": "V2ERC20.approve",
      "offset": [
        374,
        398
      ],
      "op": "JUMP",
      "path": "5"
    },
    "319": {
      "fn": "V2ERC20.approve",
      "offset": [
        374,
        398
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "320": {
      "fn": "V2ERC20.approve",
      "offset": [
        374,
        398
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "322": {
      "fn": "V2ERC20.approve",
      "offset": [
        374,
        398
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "323": {
      "op": "SWAP1"
    },
    "324": {
      "op": "DUP2"
    },
    "325": {
      "op": "MSTORE"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "328": {
      "op": "ADD"
    },
    "329": {
      "offset": [
        374,
        398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10A"
    },
    "332": {
      "op": "JUMP"
    },
    "333": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2424,
        2734
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "334": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2424,
        2734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x126"
    },
    "337": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2424,
        2734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15B"
    },
    "340": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2424,
        2734
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "341": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2424,
        2734
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "343": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2424,
        2734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x732"
    },
    "346": {
      "fn": "V2ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2424,
        2734
      ],
      "op": "JUMP",
      "path": "5"
    },
    "347": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2424,
        2734
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "348": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2424,
        2734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x278"
    },
    "351": {
      "fn": "V2ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2424,
        2734
      ],
      "op": "JUMP",
      "path": "5"
    },
    "352": {
      "offset": [
        666,
        774
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "353": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        666,
        774
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13F"
    },
    "356": {
      "offset": [
        708,
        774
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
    },
    "389": {
      "offset": [
        666,
        774
      ],
      "op": "DUP2",
      "path": "5"
    },
    "390": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        666,
        774
      ],
      "op": "JUMP",
      "path": "5"
    },
    "391": {
      "offset": [
        332,
        367
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "392": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        332,
        367
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18F"
    },
    "395": {
      "offset": [
        365,
        367
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x12"
    },
    "397": {
      "offset": [
        332,
        367
      ],
      "op": "DUP2",
      "path": "5"
    },
    "398": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        332,
        367
      ],
      "op": "JUMP",
      "path": "5"
    },
    "399": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        332,
        367
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "400": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        332,
        367
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "402": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        332,
        367
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "405": {
      "op": "SWAP1"
    },
    "406": {
      "op": "SWAP2"
    },
    "407": {
      "op": "AND"
    },
    "408": {
      "op": "DUP2"
    },
    "409": {
      "op": "MSTORE"
    },
    "410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "412": {
      "op": "ADD"
    },
    "413": {
      "offset": [
        332,
        367
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10A"
    },
    "416": {
      "op": "JUMP"
    },
    "417": {
      "offset": [
        523,
        554
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "418": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        523,
        554
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13F"
    },
    "421": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        523,
        554
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "423": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        523,
        554
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "424": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        523,
        554
      ],
      "op": "DUP2",
      "path": "5"
    },
    "425": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        523,
        554
      ],
      "op": "JUMP",
      "path": "5"
    },
    "426": {
      "offset": [
        405,
        446
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "427": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13F"
    },
    "430": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B8"
    },
    "433": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "434": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "436": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x76E"
    },
    "439": {
      "fn": "V2ERC20.transferFrom",
      "jump": "i",
      "offset": [
        405,
        446
      ],
      "op": "JUMP",
      "path": "5"
    },
    "440": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "441": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "443": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "445": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "446": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "448": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "449": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "DUP2",
      "path": "5"
    },
    "450": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "451": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "453": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "454": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "455": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "456": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "DUP2",
      "path": "5"
    },
    "457": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        405,
        446
      ],
      "op": "JUMP",
      "path": "5"
    },
    "458": {
      "offset": [
        781,
        819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "459": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13F"
    },
    "462": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D8"
    },
    "465": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "466": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "468": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x76E"
    },
    "471": {
      "fn": "V2ERC20.transferFrom",
      "jump": "i",
      "offset": [
        781,
        819
      ],
      "op": "JUMP",
      "path": "5"
    },
    "472": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "473": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "475": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "477": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "478": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "480": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "481": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "482": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "483": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "485": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "486": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "487": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "488": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "489": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        781,
        819
      ],
      "op": "JUMP",
      "path": "5"
    },
    "490": {
      "offset": [
        285,
        325
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "491": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFD"
    },
    "494": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "496": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "497": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "DUP1",
      "path": "5"
    },
    "498": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "500": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "ADD",
      "path": "5"
    },
    "501": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "503": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "504": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "DUP1",
      "path": "5"
    },
    "505": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "507": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "DUP2",
      "path": "5"
    },
    "508": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "509": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "511": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "ADD",
      "path": "5"
    },
    "512": {
      "op": "PUSH6",
      "value": "0x2AA72496AB19"
    },
    "519": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "521": {
      "op": "SHL"
    },
    "522": {
      "offset": [
        285,
        325
      ],
      "op": "DUP2",
      "path": "5"
    },
    "523": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "524": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "POP",
      "path": "5"
    },
    "525": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "DUP2",
      "path": "5"
    },
    "526": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        285,
        325
      ],
      "op": "JUMP",
      "path": "5"
    },
    "527": {
      "fn": "V2ERC20.transfer",
      "offset": [
        2277,
        2416
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "528": {
      "fn": "V2ERC20.transfer",
      "offset": [
        2277,
        2416
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x126"
    },
    "531": {
      "fn": "V2ERC20.transfer",
      "offset": [
        2277,
        2416
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21D"
    },
    "534": {
      "fn": "V2ERC20.transfer",
      "offset": [
        2277,
        2416
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "535": {
      "fn": "V2ERC20.transfer",
      "offset": [
        2277,
        2416
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "537": {
      "fn": "V2ERC20.transfer",
      "offset": [
        2277,
        2416
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x708"
    },
    "540": {
      "fn": "V2ERC20.transfer",
      "jump": "i",
      "offset": [
        2277,
        2416
      ],
      "op": "JUMP",
      "path": "5"
    },
    "541": {
      "fn": "V2ERC20.transfer",
      "offset": [
        2277,
        2416
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "542": {
      "fn": "V2ERC20.transfer",
      "offset": [
        2277,
        2416
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34F"
    },
    "545": {
      "fn": "V2ERC20.transfer",
      "jump": "i",
      "offset": [
        2277,
        2416
      ],
      "op": "JUMP",
      "path": "5"
    },
    "546": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "547": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x235"
    },
    "550": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x230"
    },
    "553": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "554": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "556": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x789"
    },
    "559": {
      "fn": "V2ERC20.permit",
      "jump": "i",
      "offset": [
        2742,
        3424
      ],
      "op": "JUMP",
      "path": "5"
    },
    "560": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "561": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35C"
    },
    "564": {
      "fn": "V2ERC20.permit",
      "jump": "i",
      "offset": [
        2742,
        3424
      ],
      "op": "JUMP",
      "path": "5"
    },
    "565": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "566": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "STOP",
      "path": "5"
    },
    "567": {
      "offset": [
        453,
        514
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "568": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13F"
    },
    "571": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x245"
    },
    "574": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "575": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "577": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7FC"
    },
    "580": {
      "fn": "V2ERC20.permit",
      "jump": "i",
      "offset": [
        453,
        514
      ],
      "op": "JUMP",
      "path": "5"
    },
    "581": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "582": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "584": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "586": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "587": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "DUP2",
      "path": "5"
    },
    "588": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "589": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "591": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "592": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "DUP4",
      "path": "5"
    },
    "593": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "594": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "596": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "DUP1",
      "path": "5"
    },
    "597": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "DUP5",
      "path": "5"
    },
    "598": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "599": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "600": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "601": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "602": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "603": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "DUP3",
      "path": "5"
    },
    "604": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "605": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "606": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "607": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "608": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "DUP2",
      "path": "5"
    },
    "609": {
      "fn": "V2ERC20.permit",
      "offset": [
        453,
        514
      ],
      "op": "JUMP",
      "path": "5"
    },
    "610": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "611": {
      "fn": "V2ERC20.approve",
      "offset": [
        2186,
        2190
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "613": {
      "fn": "V2ERC20.approve",
      "offset": [
        2203,
        2239
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 0,
      "value": "0x26F"
    },
    "616": {
      "fn": "V2ERC20.approve",
      "offset": [
        2212,
        2222
      ],
      "op": "CALLER",
      "path": "5"
    },
    "617": {
      "fn": "V2ERC20.approve",
      "offset": [
        2224,
        2231
      ],
      "op": "DUP5",
      "path": "5"
    },
    "618": {
      "fn": "V2ERC20.approve",
      "offset": [
        2233,
        2238
      ],
      "op": "DUP5",
      "path": "5"
    },
    "619": {
      "fn": "V2ERC20.approve",
      "offset": [
        2203,
        2211
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x570"
    },
    "622": {
      "fn": "V2ERC20.approve",
      "jump": "i",
      "offset": [
        2203,
        2239
      ],
      "op": "JUMP",
      "path": "5"
    },
    "623": {
      "fn": "V2ERC20.approve",
      "offset": [
        2203,
        2239
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "624": {
      "op": "POP"
    },
    "625": {
      "fn": "V2ERC20.approve",
      "offset": [
        2257,
        2261
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0x1"
    },
    "627": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "628": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "629": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "POP",
      "path": "5"
    },
    "630": {
      "fn": "V2ERC20.approve",
      "offset": [
        2122,
        2269
      ],
      "op": "POP",
      "path": "5"
    },
    "631": {
      "fn": "V2ERC20.approve",
      "jump": "o",
      "offset": [
        2122,
        2269
      ],
      "op": "JUMP",
      "path": "5"
    },
    "632": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2424,
        2734
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "639": {
      "op": "SHL"
    },
    "640": {
      "op": "SUB"
    },
    "641": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2542
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 2
    },
    "642": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2542
      ],
      "op": "AND",
      "path": "5"
    },
    "643": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2502,
        2506
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "645": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2542
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "646": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2542
      ],
      "op": "DUP2",
      "path": "5"
    },
    "647": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2542
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "648": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "650": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2542
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "652": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2542
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "653": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2542
      ],
      "op": "DUP2",
      "path": "5"
    },
    "654": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2542
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "655": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2542
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "657": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2542
      ],
      "op": "DUP1",
      "path": "5"
    },
    "658": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2542
      ],
      "op": "DUP4",
      "path": "5"
    },
    "659": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2542
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "660": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2543,
        2553
      ],
      "op": "CALLER",
      "path": "5"
    },
    "661": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2554
      ],
      "op": "DUP5",
      "path": "5"
    },
    "662": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2554
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "663": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2554
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "664": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2554
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "665": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2554
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "666": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2554
      ],
      "op": "DUP2",
      "path": "5"
    },
    "667": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2554
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "668": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2554
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "669": {
      "branch": 17,
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2527,
        2562
      ],
      "op": "DUP3",
      "path": "5"
    },
    "670": {
      "op": "LT"
    },
    "671": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E8"
    },
    "674": {
      "branch": 17,
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "675": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "677": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "678": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "682": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "684": {
      "op": "SHL"
    },
    "685": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "DUP2",
      "path": "5"
    },
    "686": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "689": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "691": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "DUP3",
      "path": "5"
    },
    "692": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "ADD",
      "path": "5"
    },
    "693": {
      "op": "MSTORE"
    },
    "694": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "698": {
      "op": "DUP3"
    },
    "699": {
      "op": "ADD"
    },
    "700": {
      "op": "MSTORE"
    },
    "701": {
      "op": "PUSH22",
      "value": "0x496E73756666696369656E7420616C6C6F77616E6365"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "726": {
      "op": "SHL"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "729": {
      "op": "DUP3"
    },
    "730": {
      "op": "ADD"
    },
    "731": {
      "op": "MSTORE"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "734": {
      "op": "ADD"
    },
    "735": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "736": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "738": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "739": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "DUP1",
      "path": "5"
    },
    "740": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "741": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "SUB",
      "path": "5"
    },
    "742": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "743": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "744": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2519,
        2588
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "751": {
      "op": "SHL"
    },
    "752": {
      "op": "SUB"
    },
    "753": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2644
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 3
    },
    "754": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2644
      ],
      "op": "AND",
      "path": "5"
    },
    "755": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2644
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "757": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2644
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "758": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2644
      ],
      "op": "DUP2",
      "path": "5"
    },
    "759": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2644
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "760": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2638
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "762": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2644
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "764": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2644
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "765": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2644
      ],
      "op": "DUP2",
      "path": "5"
    },
    "766": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2644
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "767": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2644
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "769": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2644
      ],
      "op": "DUP1",
      "path": "5"
    },
    "770": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2644
      ],
      "op": "DUP4",
      "path": "5"
    },
    "771": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2644
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "772": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2645,
        2655
      ],
      "op": "CALLER",
      "path": "5"
    },
    "773": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2656
      ],
      "op": "DUP5",
      "path": "5"
    },
    "774": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2656
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "775": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2656
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "776": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2656
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "777": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2656
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "778": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2656
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "779": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2656
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "780": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2656
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "781": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2667
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x316"
    },
    "784": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2667
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "785": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2661,
        2666
      ],
      "op": "DUP4",
      "path": "5"
    },
    "786": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2660
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5D2"
    },
    "789": {
      "fn": "V2ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2629,
        2667
      ],
      "op": "JUMP",
      "path": "5"
    },
    "790": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2629,
        2667
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "797": {
      "op": "SHL"
    },
    "798": {
      "op": "SUB"
    },
    "799": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2614
      ],
      "op": "DUP6",
      "path": "5"
    },
    "800": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2614
      ],
      "op": "AND",
      "path": "5"
    },
    "801": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2614
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "803": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2614
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "804": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2614
      ],
      "op": "DUP2",
      "path": "5"
    },
    "805": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2614
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "806": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2608
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "808": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2614
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "810": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2614
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "811": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2614
      ],
      "op": "DUP2",
      "path": "5"
    },
    "812": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2614
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "813": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2614
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "815": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2614
      ],
      "op": "DUP1",
      "path": "5"
    },
    "816": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2614
      ],
      "op": "DUP4",
      "path": "5"
    },
    "817": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2614
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "818": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2615,
        2625
      ],
      "op": "CALLER",
      "path": "5"
    },
    "819": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2626
      ],
      "op": "DUP5",
      "path": "5"
    },
    "820": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2626
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "821": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2626
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "822": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2626
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "823": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2626
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "824": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2626
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "825": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2626
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "826": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2599,
        2667
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "827": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2678,
        2704
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 4,
      "value": "0x345"
    },
    "830": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2609,
        2613
      ],
      "op": "DUP5",
      "path": "5"
    },
    "831": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2694,
        2696
      ],
      "op": "DUP5",
      "path": "5"
    },
    "832": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2698,
        2703
      ],
      "op": "DUP5",
      "path": "5"
    },
    "833": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2678,
        2687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5E5"
    },
    "836": {
      "fn": "V2ERC20.transferFrom",
      "jump": "i",
      "offset": [
        2678,
        2704
      ],
      "op": "JUMP",
      "path": "5"
    },
    "837": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2678,
        2704
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "838": {
      "op": "POP"
    },
    "839": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2722,
        2726
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 5,
      "value": "0x1"
    },
    "841": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2424,
        2734
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "842": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2424,
        2734
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "843": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2424,
        2734
      ],
      "op": "POP",
      "path": "5"
    },
    "844": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2424,
        2734
      ],
      "op": "POP",
      "path": "5"
    },
    "845": {
      "fn": "V2ERC20.transferFrom",
      "offset": [
        2424,
        2734
      ],
      "op": "POP",
      "path": "5"
    },
    "846": {
      "fn": "V2ERC20.transferFrom",
      "jump": "o",
      "offset": [
        2424,
        2734
      ],
      "op": "JUMP",
      "path": "5"
    },
    "847": {
      "fn": "V2ERC20.transfer",
      "offset": [
        2277,
        2416
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "848": {
      "fn": "V2ERC20.transfer",
      "offset": [
        2337,
        2341
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "850": {
      "fn": "V2ERC20.transfer",
      "offset": [
        2354,
        2386
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 6,
      "value": "0x26F"
    },
    "853": {
      "fn": "V2ERC20.transfer",
      "offset": [
        2364,
        2374
      ],
      "op": "CALLER",
      "path": "5"
    },
    "854": {
      "fn": "V2ERC20.transfer",
      "offset": [
        2376,
        2378
      ],
      "op": "DUP5",
      "path": "5"
    },
    "855": {
      "fn": "V2ERC20.transfer",
      "offset": [
        2380,
        2385
      ],
      "op": "DUP5",
      "path": "5"
    },
    "856": {
      "fn": "V2ERC20.transfer",
      "offset": [
        2354,
        2363
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5E5"
    },
    "859": {
      "fn": "V2ERC20.transfer",
      "jump": "i",
      "offset": [
        2354,
        2386
      ],
      "op": "JUMP",
      "path": "5"
    },
    "860": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "861": {
      "fn": "V2ERC20.permit",
      "offset": [
        2896,
        2911
      ],
      "op": "TIMESTAMP",
      "path": "5",
      "statement": 7
    },
    "862": {
      "fn": "V2ERC20.permit",
      "offset": [
        2884,
        2892
      ],
      "op": "DUP5",
      "path": "5"
    },
    "863": {
      "fn": "V2ERC20.permit",
      "offset": [
        2884,
        2911
      ],
      "op": "LT",
      "path": "5"
    },
    "864": {
      "branch": 18,
      "fn": "V2ERC20.permit",
      "offset": [
        2884,
        2911
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "865": {
      "fn": "V2ERC20.permit",
      "offset": [
        2876,
        2934
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A1"
    },
    "868": {
      "branch": 18,
      "fn": "V2ERC20.permit",
      "offset": [
        2876,
        2934
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "869": {
      "fn": "V2ERC20.permit",
      "offset": [
        2876,
        2934
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "871": {
      "fn": "V2ERC20.permit",
      "offset": [
        2876,
        2934
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "872": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "876": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "878": {
      "op": "SHL"
    },
    "879": {
      "fn": "V2ERC20.permit",
      "offset": [
        2876,
        2934
      ],
      "op": "DUP2",
      "path": "5"
    },
    "880": {
      "fn": "V2ERC20.permit",
      "offset": [
        2876,
        2934
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "883": {
      "fn": "V2ERC20.permit",
      "offset": [
        2876,
        2934
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "885": {
      "fn": "V2ERC20.permit",
      "offset": [
        2876,
        2934
      ],
      "op": "DUP3",
      "path": "5"
    },
    "886": {
      "fn": "V2ERC20.permit",
      "offset": [
        2876,
        2934
      ],
      "op": "ADD",
      "path": "5"
    },
    "887": {
      "op": "MSTORE"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "892": {
      "op": "DUP3"
    },
    "893": {
      "op": "ADD"
    },
    "894": {
      "op": "MSTORE"
    },
    "895": {
      "op": "PUSH18",
      "value": "0x155B9A5CDDD85C158C8E8811561412549151"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "916": {
      "op": "SHL"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "919": {
      "op": "DUP3"
    },
    "920": {
      "op": "ADD"
    },
    "921": {
      "op": "MSTORE"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "924": {
      "op": "ADD"
    },
    "925": {
      "fn": "V2ERC20.permit",
      "offset": [
        2876,
        2934
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DF"
    },
    "928": {
      "op": "JUMP"
    },
    "929": {
      "fn": "V2ERC20.permit",
      "offset": [
        2876,
        2934
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "930": {
      "fn": "V2ERC20.permit",
      "offset": [
        3050,
        3066
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "932": {
      "fn": "V2ERC20.permit",
      "offset": [
        3050,
        3066
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "939": {
      "op": "SHL"
    },
    "940": {
      "op": "SUB"
    },
    "941": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3159
      ],
      "op": "DUP9",
      "path": "5"
    },
    "942": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3159
      ],
      "op": "AND",
      "path": "5"
    },
    "943": {
      "fn": "V2ERC20.permit",
      "offset": [
        2945,
        2959
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "945": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3159
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "946": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3159
      ],
      "op": "DUP2",
      "path": "5"
    },
    "947": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3159
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "948": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3152
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "950": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3159
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "952": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3159
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "953": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3159
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "955": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3159
      ],
      "op": "DUP2",
      "path": "5"
    },
    "956": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3159
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "957": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3161
      ],
      "op": "DUP1",
      "path": "5"
    },
    "958": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3161
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "959": {
      "fn": "V2ERC20.permit",
      "offset": [
        2945,
        2959
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "960": {
      "fn": "V2ERC20.permit",
      "offset": [
        2945,
        2959
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "961": {
      "fn": "V2ERC20.permit",
      "offset": [
        3050,
        3066
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "962": {
      "offset": [
        708,
        774
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
    },
    "995": {
      "fn": "V2ERC20.permit",
      "offset": [
        708,
        774
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "996": {
      "fn": "V2ERC20.permit",
      "offset": [
        3123,
        3128
      ],
      "op": "DUP12",
      "path": "5"
    },
    "997": {
      "fn": "V2ERC20.permit",
      "offset": [
        3123,
        3128
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "998": {
      "fn": "V2ERC20.permit",
      "offset": [
        3130,
        3137
      ],
      "op": "DUP12",
      "path": "5"
    },
    "999": {
      "fn": "V2ERC20.permit",
      "offset": [
        3130,
        3137
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1000": {
      "fn": "V2ERC20.permit",
      "offset": [
        3139,
        3144
      ],
      "op": "DUP12",
      "path": "5"
    },
    "1001": {
      "fn": "V2ERC20.permit",
      "offset": [
        3139,
        3144
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1002": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3161
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1003": {
      "fn": "V2ERC20.permit",
      "offset": [
        2945,
        2959
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1004": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3161
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F4"
    },
    "1007": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3161
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1008": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3161
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x845"
    },
    "1011": {
      "fn": "V2ERC20.permit",
      "jump": "i",
      "offset": [
        3146,
        3161
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1012": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3161
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1013": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3161
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1014": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3161
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1015": {
      "fn": "V2ERC20.permit",
      "offset": [
        3146,
        3161
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1016": {
      "op": "POP"
    },
    "1017": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1019": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1020": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1021": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1023": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1024": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "ADD",
      "path": "5"
    },
    "1025": {
      "op": "SWAP7"
    },
    "1026": {
      "op": "SWAP1"
    },
    "1027": {
      "op": "SWAP7"
    },
    "1028": {
      "op": "MSTORE"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1035": {
      "op": "SHL"
    },
    "1036": {
      "op": "SUB"
    },
    "1037": {
      "op": "SWAP5"
    },
    "1038": {
      "op": "DUP6"
    },
    "1039": {
      "op": "AND"
    },
    "1040": {
      "op": "SWAP1"
    },
    "1041": {
      "op": "DUP7"
    },
    "1042": {
      "op": "ADD"
    },
    "1043": {
      "op": "MSTORE"
    },
    "1044": {
      "op": "SWAP3"
    },
    "1045": {
      "op": "SWAP1"
    },
    "1046": {
      "op": "SWAP2"
    },
    "1047": {
      "op": "AND"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1050": {
      "op": "DUP5"
    },
    "1051": {
      "op": "ADD"
    },
    "1052": {
      "op": "MSTORE"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1055": {
      "op": "DUP4"
    },
    "1056": {
      "op": "ADD"
    },
    "1057": {
      "op": "MSTORE"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1060": {
      "op": "DUP3"
    },
    "1061": {
      "op": "ADD"
    },
    "1062": {
      "op": "MSTORE"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1065": {
      "op": "DUP2"
    },
    "1066": {
      "op": "ADD"
    },
    "1067": {
      "op": "DUP8"
    },
    "1068": {
      "op": "SWAP1"
    },
    "1069": {
      "op": "MSTORE"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1072": {
      "op": "ADD"
    },
    "1073": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1075": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1076": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1078": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1079": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1080": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "SUB",
      "path": "5"
    },
    "1081": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "SUB",
      "path": "5"
    },
    "1082": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1083": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1084": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1085": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1087": {
      "fn": "V2ERC20.permit",
      "offset": [
        3095,
        3172
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1088": {
      "fn": "V2ERC20.permit",
      "offset": [
        3085,
        3173
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1089": {
      "fn": "V2ERC20.permit",
      "offset": [
        3085,
        3173
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1090": {
      "fn": "V2ERC20.permit",
      "offset": [
        3085,
        3173
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1091": {
      "fn": "V2ERC20.permit",
      "offset": [
        3085,
        3173
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1093": {
      "fn": "V2ERC20.permit",
      "offset": [
        3085,
        3173
      ],
      "op": "ADD",
      "path": "5"
    },
    "1094": {
      "fn": "V2ERC20.permit",
      "offset": [
        3085,
        3173
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1095": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1097": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1098": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1100": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "ADD",
      "path": "5"
    },
    "1101": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46D"
    },
    "1104": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1105": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1106": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1107": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1112": {
      "op": "SHL"
    },
    "1113": {
      "op": "DUP2"
    },
    "1114": {
      "op": "MSTORE"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1117": {
      "op": "DUP2"
    },
    "1118": {
      "op": "ADD"
    },
    "1119": {
      "op": "SWAP3"
    },
    "1120": {
      "op": "SWAP1"
    },
    "1121": {
      "op": "SWAP3"
    },
    "1122": {
      "op": "MSTORE"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1125": {
      "op": "DUP3"
    },
    "1126": {
      "op": "ADD"
    },
    "1127": {
      "op": "MSTORE"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1130": {
      "op": "ADD"
    },
    "1131": {
      "op": "SWAP1"
    },
    "1132": {
      "op": "JUMP"
    },
    "1133": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1134": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1136": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1137": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1140": {
      "op": "NOT"
    },
    "1141": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1142": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1143": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "SUB",
      "path": "5"
    },
    "1144": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "ADD",
      "path": "5"
    },
    "1145": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1146": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1147": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1148": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1149": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1150": {
      "fn": "V2ERC20.permit",
      "offset": [
        2962,
        3199
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1151": {
      "fn": "V2ERC20.permit",
      "offset": [
        2962,
        3199
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1152": {
      "fn": "V2ERC20.permit",
      "offset": [
        2986,
        3188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1154": {
      "fn": "V2ERC20.permit",
      "offset": [
        2962,
        3199
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1155": {
      "fn": "V2ERC20.permit",
      "offset": [
        2962,
        3199
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1156": {
      "fn": "V2ERC20.permit",
      "offset": [
        2962,
        3199
      ],
      "op": "ADD",
      "path": "5"
    },
    "1157": {
      "fn": "V2ERC20.permit",
      "offset": [
        2962,
        3199
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1158": {
      "fn": "V2ERC20.permit",
      "offset": [
        3210,
        3234
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1160": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1161": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1162": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1163": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1164": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1165": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "ADD",
      "path": "5"
    },
    "1166": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1167": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1168": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1169": {
      "op": "DUP2"
    },
    "1170": {
      "op": "SWAP1"
    },
    "1171": {
      "op": "MSTORE"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1174": {
      "op": "DUP9"
    },
    "1175": {
      "op": "AND"
    },
    "1176": {
      "op": "SWAP3"
    },
    "1177": {
      "op": "DUP5"
    },
    "1178": {
      "op": "ADD"
    },
    "1179": {
      "op": "SWAP3"
    },
    "1180": {
      "op": "SWAP1"
    },
    "1181": {
      "op": "SWAP3"
    },
    "1182": {
      "op": "MSTORE"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1185": {
      "op": "DUP4"
    },
    "1186": {
      "op": "ADD"
    },
    "1187": {
      "op": "DUP7"
    },
    "1188": {
      "op": "SWAP1"
    },
    "1189": {
      "op": "MSTORE"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1192": {
      "op": "DUP4"
    },
    "1193": {
      "op": "ADD"
    },
    "1194": {
      "op": "DUP6"
    },
    "1195": {
      "op": "SWAP1"
    },
    "1196": {
      "op": "MSTORE"
    },
    "1197": {
      "fn": "V2ERC20.permit",
      "offset": [
        2962,
        3199
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1198": {
      "fn": "V2ERC20.permit",
      "offset": [
        2962,
        3199
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1199": {
      "op": "POP"
    },
    "1200": {
      "fn": "V2ERC20.permit",
      "offset": [
        3210,
        3234
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1201": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1203": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1206": {
      "op": "ADD"
    },
    "1207": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1209": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1211": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1212": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1214": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1215": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "SUB",
      "path": "5"
    },
    "1216": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1217": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1218": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1219": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "SUB",
      "path": "5"
    },
    "1220": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1221": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1222": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "GAS",
      "path": "5"
    },
    "1223": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "1224": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1225": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1226": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1227": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4D8"
    },
    "1230": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1231": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1232": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1234": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1235": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1236": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1237": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1239": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1240": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1241": {
      "op": "POP"
    },
    "1242": {
      "op": "POP"
    },
    "1243": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1245": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1248": {
      "op": "NOT"
    },
    "1249": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "ADD",
      "path": "5"
    },
    "1250": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1251": {
      "fn": "V2ERC20.permit",
      "offset": [
        3237,
        3263
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1252": {
      "op": "POP"
    },
    "1253": {
      "op": "POP"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "op": "SUB"
    },
    "1262": {
      "fn": "V2ERC20.permit",
      "offset": [
        3282,
        3312
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 8
    },
    "1263": {
      "fn": "V2ERC20.permit",
      "offset": [
        3282,
        3312
      ],
      "op": "AND",
      "path": "5"
    },
    "1264": {
      "fn": "V2ERC20.permit",
      "offset": [
        3282,
        3312
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1265": {
      "fn": "V2ERC20.permit",
      "offset": [
        3282,
        3312
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1266": {
      "fn": "V2ERC20.permit",
      "offset": [
        3282,
        3312
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1267": {
      "branch": 19,
      "fn": "V2ERC20.permit",
      "offset": [
        3282,
        3312
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1268": {
      "fn": "V2ERC20.permit",
      "offset": [
        3282,
        3341
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x50E"
    },
    "1271": {
      "branch": 19,
      "fn": "V2ERC20.permit",
      "offset": [
        3282,
        3341
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1272": {
      "fn": "V2ERC20.permit",
      "offset": [
        3282,
        3341
      ],
      "op": "POP",
      "path": "5"
    },
    "1273": {
      "fn": "V2ERC20.permit",
      "offset": [
        3336,
        3341
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1280": {
      "op": "SHL"
    },
    "1281": {
      "op": "SUB"
    },
    "1282": {
      "fn": "V2ERC20.permit",
      "offset": [
        3316,
        3341
      ],
      "op": "AND",
      "path": "5"
    },
    "1283": {
      "fn": "V2ERC20.permit",
      "offset": [
        3316,
        3332
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1290": {
      "op": "SHL"
    },
    "1291": {
      "op": "SUB"
    },
    "1292": {
      "fn": "V2ERC20.permit",
      "offset": [
        3316,
        3341
      ],
      "op": "AND",
      "path": "5"
    },
    "1293": {
      "branch": 20,
      "fn": "V2ERC20.permit",
      "offset": [
        3316,
        3341
      ],
      "op": "EQ",
      "path": "5"
    },
    "1294": {
      "fn": "V2ERC20.permit",
      "offset": [
        3282,
        3341
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1295": {
      "fn": "V2ERC20.permit",
      "offset": [
        3274,
        3374
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x55A"
    },
    "1298": {
      "branch": 20,
      "fn": "V2ERC20.permit",
      "offset": [
        3274,
        3374
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1299": {
      "fn": "V2ERC20.permit",
      "offset": [
        3274,
        3374
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1301": {
      "fn": "V2ERC20.permit",
      "offset": [
        3274,
        3374
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1302": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1308": {
      "op": "SHL"
    },
    "1309": {
      "fn": "V2ERC20.permit",
      "offset": [
        3274,
        3374
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1310": {
      "fn": "V2ERC20.permit",
      "offset": [
        3274,
        3374
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1313": {
      "fn": "V2ERC20.permit",
      "offset": [
        3274,
        3374
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1315": {
      "fn": "V2ERC20.permit",
      "offset": [
        3274,
        3374
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1316": {
      "fn": "V2ERC20.permit",
      "offset": [
        3274,
        3374
      ],
      "op": "ADD",
      "path": "5"
    },
    "1317": {
      "op": "MSTORE"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1322": {
      "op": "DUP3"
    },
    "1323": {
      "op": "ADD"
    },
    "1324": {
      "op": "MSTORE"
    },
    "1325": {
      "op": "PUSH32",
      "value": "0x556E697377617056323A20494E56414C49445F5349474E415455524500000000"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1360": {
      "op": "DUP3"
    },
    "1361": {
      "op": "ADD"
    },
    "1362": {
      "op": "MSTORE"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1365": {
      "op": "ADD"
    },
    "1366": {
      "fn": "V2ERC20.permit",
      "offset": [
        3274,
        3374
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DF"
    },
    "1369": {
      "op": "JUMP"
    },
    "1370": {
      "fn": "V2ERC20.permit",
      "offset": [
        3274,
        3374
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1371": {
      "fn": "V2ERC20.permit",
      "offset": [
        3385,
        3416
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 9,
      "value": "0x565"
    },
    "1374": {
      "fn": "V2ERC20.permit",
      "offset": [
        3394,
        3399
      ],
      "op": "DUP10",
      "path": "5"
    },
    "1375": {
      "fn": "V2ERC20.permit",
      "offset": [
        3401,
        3408
      ],
      "op": "DUP10",
      "path": "5"
    },
    "1376": {
      "fn": "V2ERC20.permit",
      "offset": [
        3410,
        3415
      ],
      "op": "DUP10",
      "path": "5"
    },
    "1377": {
      "fn": "V2ERC20.permit",
      "offset": [
        3385,
        3393
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x570"
    },
    "1380": {
      "fn": "V2ERC20.permit",
      "jump": "i",
      "offset": [
        3385,
        3416
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1381": {
      "fn": "V2ERC20.permit",
      "offset": [
        3385,
        3416
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1382": {
      "fn": "V2ERC20.permit",
      "offset": [
        2865,
        3424
      ],
      "op": "POP",
      "path": "5"
    },
    "1383": {
      "fn": "V2ERC20.permit",
      "offset": [
        2865,
        3424
      ],
      "op": "POP",
      "path": "5"
    },
    "1384": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "POP",
      "path": "5"
    },
    "1385": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "POP",
      "path": "5"
    },
    "1386": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "POP",
      "path": "5"
    },
    "1387": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "POP",
      "path": "5"
    },
    "1388": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "POP",
      "path": "5"
    },
    "1389": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "POP",
      "path": "5"
    },
    "1390": {
      "fn": "V2ERC20.permit",
      "offset": [
        2742,
        3424
      ],
      "op": "POP",
      "path": "5"
    },
    "1391": {
      "fn": "V2ERC20.permit",
      "jump": "o",
      "offset": [
        2742,
        3424
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1392": {
      "fn": "V2ERC20._approve",
      "offset": [
        1717,
        1886
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1399": {
      "op": "SHL"
    },
    "1400": {
      "op": "SUB"
    },
    "1401": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1814
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 10
    },
    "1402": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1814
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1403": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1814
      ],
      "op": "AND",
      "path": "5"
    },
    "1404": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1406": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1814
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1407": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1814
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1408": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1814
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1409": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1807
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1411": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1413": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1814
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1414": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1814
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1415": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1814
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1416": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1418": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1814
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1419": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1814
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1420": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1814
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1421": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1823
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1422": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1823
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1423": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1823
      ],
      "op": "AND",
      "path": "5"
    },
    "1424": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1823
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1425": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1823
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1426": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1823
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1427": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1823
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1428": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1823
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1429": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1823
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1430": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1823
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1431": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1823
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1432": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1823
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1433": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1823
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1434": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1831
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1435": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1831
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1436": {
      "fn": "V2ERC20._approve",
      "offset": [
        1798,
        1831
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1437": {
      "fn": "V2ERC20._approve",
      "offset": [
        1847,
        1878
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 11
    },
    "1438": {
      "fn": "V2ERC20._approve",
      "offset": [
        1847,
        1878
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1439": {
      "op": "DUP5"
    },
    "1440": {
      "op": "DUP2"
    },
    "1441": {
      "op": "MSTORE"
    },
    "1442": {
      "fn": "V2ERC20._approve",
      "offset": [
        1847,
        1878
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1475": {
      "fn": "V2ERC20._approve",
      "offset": [
        1847,
        1878
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1476": {
      "op": "ADD"
    },
    "1477": {
      "fn": "V2ERC20._approve",
      "offset": [
        1847,
        1878
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1478": {
      "fn": "V2ERC20._approve",
      "offset": [
        1847,
        1878
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1480": {
      "fn": "V2ERC20._approve",
      "offset": [
        1847,
        1878
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1481": {
      "fn": "V2ERC20._approve",
      "offset": [
        1847,
        1878
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1482": {
      "fn": "V2ERC20._approve",
      "offset": [
        1847,
        1878
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1483": {
      "fn": "V2ERC20._approve",
      "offset": [
        1847,
        1878
      ],
      "op": "SUB",
      "path": "5"
    },
    "1484": {
      "fn": "V2ERC20._approve",
      "offset": [
        1847,
        1878
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1485": {
      "fn": "V2ERC20._approve",
      "offset": [
        1847,
        1878
      ],
      "op": "LOG3",
      "path": "5"
    },
    "1486": {
      "fn": "V2ERC20._approve",
      "offset": [
        1717,
        1886
      ],
      "op": "POP",
      "path": "5"
    },
    "1487": {
      "fn": "V2ERC20._approve",
      "offset": [
        1717,
        1886
      ],
      "op": "POP",
      "path": "5"
    },
    "1488": {
      "fn": "V2ERC20._approve",
      "offset": [
        1717,
        1886
      ],
      "op": "POP",
      "path": "5"
    },
    "1489": {
      "fn": "V2ERC20._approve",
      "jump": "o",
      "offset": [
        1717,
        1886
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1490": {
      "fn": "SafeMath.sub",
      "offset": [
        3108,
        3204
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1491": {
      "fn": "SafeMath.sub",
      "offset": [
        3166,
        3173
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1493": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 12,
      "value": "0x5DE"
    },
    "1496": {
      "fn": "SafeMath.sub",
      "offset": [
        3196,
        3197
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1497": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1498": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x85E"
    },
    "1501": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3192,
        3197
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1502": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1503": {
      "fn": "SafeMath.sub",
      "offset": [
        3185,
        3197
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1504": {
      "fn": "SafeMath.sub",
      "offset": [
        3108,
        3204
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1505": {
      "op": "POP"
    },
    "1506": {
      "op": "POP"
    },
    "1507": {
      "op": "POP"
    },
    "1508": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3108,
        3204
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1509": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1894,
        2114
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1516": {
      "op": "SHL"
    },
    "1517": {
      "op": "SUB"
    },
    "1518": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2003
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 13
    },
    "1519": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2003
      ],
      "op": "AND",
      "path": "5"
    },
    "1520": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2003
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1522": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2003
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1523": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2003
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1524": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2003
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1525": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        1997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1527": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2003
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1529": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2003
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1530": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2003
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1532": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2003
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1533": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2003
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1534": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2003
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1535": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2014
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x608"
    },
    "1538": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2014
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1539": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2008,
        2013
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1540": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2007
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5D2"
    },
    "1543": {
      "fn": "V2ERC20._transfer",
      "jump": "i",
      "offset": [
        1988,
        2014
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1544": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1988,
        2014
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1551": {
      "op": "SHL"
    },
    "1552": {
      "op": "SUB"
    },
    "1553": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        1985
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1554": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        1985
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1555": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        1985
      ],
      "op": "AND",
      "path": "5"
    },
    "1556": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        1985
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1558": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        1985
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1559": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        1985
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1560": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        1985
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1561": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        1979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1563": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        1985
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1565": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        1985
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1566": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        1985
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1568": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        1985
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1569": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        1985
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1570": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        1985
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1571": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        2014
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1572": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        2014
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1573": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        2014
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1574": {
      "fn": "V2ERC20._transfer",
      "offset": [
        1970,
        2014
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1575": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2041,
        2054
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 14
    },
    "1576": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2041,
        2054
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1577": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2041,
        2054
      ],
      "op": "AND",
      "path": "5"
    },
    "1578": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2041,
        2054
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1579": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2041,
        2054
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1580": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2041,
        2054
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1581": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2041,
        2054
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1582": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2041,
        2065
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x637"
    },
    "1585": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2041,
        2065
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1586": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2059,
        2064
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1587": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2041,
        2058
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x68B"
    },
    "1590": {
      "fn": "V2ERC20._transfer",
      "jump": "i",
      "offset": [
        2041,
        2065
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1591": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2041,
        2065
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1598": {
      "op": "SHL"
    },
    "1599": {
      "op": "SUB"
    },
    "1600": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2038
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1601": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2038
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1602": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2038
      ],
      "op": "AND",
      "path": "5"
    },
    "1603": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2038
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1605": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2038
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1606": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2038
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1607": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2038
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1608": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2034
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1610": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2038
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1612": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2038
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1613": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2038
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1615": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2038
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1616": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2038
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1617": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2038
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1618": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2038
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1619": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2065
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1620": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2065
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1621": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2065
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1622": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2025,
        2065
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1623": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2081,
        2106
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 15
    },
    "1624": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2081,
        2106
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1625": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2081,
        2106
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1626": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2081,
        2106
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1627": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2081,
        2106
      ],
      "op": "AND",
      "path": "5"
    },
    "1628": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2081,
        2106
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1629": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2081,
        2106
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1662": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2081,
        2106
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1663": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2081,
        2106
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5C5"
    },
    "1666": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2081,
        2106
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1667": {
      "fn": "V2ERC20._transfer",
      "offset": [
        2100,
        2105
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1668": {
      "op": "DUP2"
    },
    "1669": {
      "op": "MSTORE"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1672": {
      "op": "ADD"
    },
    "1673": {
      "op": "SWAP1"
    },
    "1674": {
      "op": "JUMP"
    },
    "1675": {
      "fn": "SafeMath.add",
      "offset": [
        2741,
        2837
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1676": {
      "fn": "SafeMath.add",
      "offset": [
        2799,
        2806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1678": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 16,
      "value": "0x5DE"
    },
    "1681": {
      "fn": "SafeMath.add",
      "offset": [
        2829,
        2830
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1682": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2826
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1683": {
      "fn": "SafeMath.add",
      "offset": [
        2825,
        2830
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x875"
    },
    "1686": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2825,
        2830
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1687": {
      "op": "JUMPDEST"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1692": {
      "op": "DUP1"
    },
    "1693": {
      "op": "DUP4"
    },
    "1694": {
      "op": "MSTORE"
    },
    "1695": {
      "op": "DUP4"
    },
    "1696": {
      "op": "MLOAD"
    },
    "1697": {
      "op": "DUP1"
    },
    "1698": {
      "op": "DUP3"
    },
    "1699": {
      "op": "DUP6"
    },
    "1700": {
      "op": "ADD"
    },
    "1701": {
      "op": "MSTORE"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1704": {
      "op": "JUMPDEST"
    },
    "1705": {
      "op": "DUP2"
    },
    "1706": {
      "op": "DUP2"
    },
    "1707": {
      "op": "LT"
    },
    "1708": {
      "op": "ISZERO"
    },
    "1709": {
      "op": "PUSH2",
      "value": "0x6C4"
    },
    "1712": {
      "op": "JUMPI"
    },
    "1713": {
      "op": "DUP6"
    },
    "1714": {
      "op": "DUP2"
    },
    "1715": {
      "op": "ADD"
    },
    "1716": {
      "op": "DUP4"
    },
    "1717": {
      "op": "ADD"
    },
    "1718": {
      "op": "MLOAD"
    },
    "1719": {
      "op": "DUP6"
    },
    "1720": {
      "op": "DUP3"
    },
    "1721": {
      "op": "ADD"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1724": {
      "op": "ADD"
    },
    "1725": {
      "op": "MSTORE"
    },
    "1726": {
      "op": "DUP3"
    },
    "1727": {
      "op": "ADD"
    },
    "1728": {
      "op": "PUSH2",
      "value": "0x6A8"
    },
    "1731": {
      "op": "JUMP"
    },
    "1732": {
      "op": "JUMPDEST"
    },
    "1733": {
      "op": "DUP2"
    },
    "1734": {
      "op": "DUP2"
    },
    "1735": {
      "op": "GT"
    },
    "1736": {
      "op": "ISZERO"
    },
    "1737": {
      "op": "PUSH2",
      "value": "0x6D6"
    },
    "1740": {
      "op": "JUMPI"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1745": {
      "op": "DUP4"
    },
    "1746": {
      "op": "DUP8"
    },
    "1747": {
      "op": "ADD"
    },
    "1748": {
      "op": "ADD"
    },
    "1749": {
      "op": "MSTORE"
    },
    "1750": {
      "op": "JUMPDEST"
    },
    "1751": {
      "op": "POP"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1754": {
      "op": "ADD"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1757": {
      "op": "NOT"
    },
    "1758": {
      "op": "AND"
    },
    "1759": {
      "op": "SWAP3"
    },
    "1760": {
      "op": "SWAP1"
    },
    "1761": {
      "op": "SWAP3"
    },
    "1762": {
      "op": "ADD"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1765": {
      "op": "ADD"
    },
    "1766": {
      "op": "SWAP4"
    },
    "1767": {
      "op": "SWAP3"
    },
    "1768": {
      "op": "POP"
    },
    "1769": {
      "op": "POP"
    },
    "1770": {
      "op": "POP"
    },
    "1771": {
      "jump": "o",
      "op": "JUMP"
    },
    "1772": {
      "op": "JUMPDEST"
    },
    "1773": {
      "op": "DUP1"
    },
    "1774": {
      "op": "CALLDATALOAD"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1781": {
      "op": "SHL"
    },
    "1782": {
      "op": "SUB"
    },
    "1783": {
      "op": "DUP2"
    },
    "1784": {
      "op": "AND"
    },
    "1785": {
      "op": "DUP2"
    },
    "1786": {
      "op": "EQ"
    },
    "1787": {
      "op": "PUSH2",
      "value": "0x703"
    },
    "1790": {
      "op": "JUMPI"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1793": {
      "op": "DUP1"
    },
    "1794": {
      "op": "REVERT"
    },
    "1795": {
      "op": "JUMPDEST"
    },
    "1796": {
      "op": "SWAP2"
    },
    "1797": {
      "op": "SWAP1"
    },
    "1798": {
      "op": "POP"
    },
    "1799": {
      "jump": "o",
      "op": "JUMP"
    },
    "1800": {
      "op": "JUMPDEST"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1803": {
      "op": "DUP1"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1806": {
      "op": "DUP4"
    },
    "1807": {
      "op": "DUP6"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "op": "SLT"
    },
    "1810": {
      "op": "ISZERO"
    },
    "1811": {
      "op": "PUSH2",
      "value": "0x71B"
    },
    "1814": {
      "op": "JUMPI"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1817": {
      "op": "DUP1"
    },
    "1818": {
      "op": "REVERT"
    },
    "1819": {
      "op": "JUMPDEST"
    },
    "1820": {
      "op": "PUSH2",
      "value": "0x724"
    },
    "1823": {
      "op": "DUP4"
    },
    "1824": {
      "op": "PUSH2",
      "value": "0x6EC"
    },
    "1827": {
      "jump": "i",
      "op": "JUMP"
    },
    "1828": {
      "op": "JUMPDEST"
    },
    "1829": {
      "op": "SWAP5"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1832": {
      "op": "SWAP4"
    },
    "1833": {
      "op": "SWAP1"
    },
    "1834": {
      "op": "SWAP4"
    },
    "1835": {
      "op": "ADD"
    },
    "1836": {
      "op": "CALLDATALOAD"
    },
    "1837": {
      "op": "SWAP4"
    },
    "1838": {
      "op": "POP"
    },
    "1839": {
      "op": "POP"
    },
    "1840": {
      "op": "POP"
    },
    "1841": {
      "jump": "o",
      "op": "JUMP"
    },
    "1842": {
      "op": "JUMPDEST"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1845": {
      "op": "DUP1"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1850": {
      "op": "DUP5"
    },
    "1851": {
      "op": "DUP7"
    },
    "1852": {
      "op": "SUB"
    },
    "1853": {
      "op": "SLT"
    },
    "1854": {
      "op": "ISZERO"
    },
    "1855": {
      "op": "PUSH2",
      "value": "0x747"
    },
    "1858": {
      "op": "JUMPI"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1861": {
      "op": "DUP1"
    },
    "1862": {
      "op": "REVERT"
    },
    "1863": {
      "op": "JUMPDEST"
    },
    "1864": {
      "op": "PUSH2",
      "value": "0x750"
    },
    "1867": {
      "op": "DUP5"
    },
    "1868": {
      "op": "PUSH2",
      "value": "0x6EC"
    },
    "1871": {
      "jump": "i",
      "op": "JUMP"
    },
    "1872": {
      "op": "JUMPDEST"
    },
    "1873": {
      "op": "SWAP3"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "op": "PUSH2",
      "value": "0x75E"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1880": {
      "op": "DUP6"
    },
    "1881": {
      "op": "ADD"
    },
    "1882": {
      "op": "PUSH2",
      "value": "0x6EC"
    },
    "1885": {
      "jump": "i",
      "op": "JUMP"
    },
    "1886": {
      "op": "JUMPDEST"
    },
    "1887": {
      "op": "SWAP2"
    },
    "1888": {
      "op": "POP"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1891": {
      "op": "DUP5"
    },
    "1892": {
      "op": "ADD"
    },
    "1893": {
      "op": "CALLDATALOAD"
    },
    "1894": {
      "op": "SWAP1"
    },
    "1895": {
      "op": "POP"
    },
    "1896": {
      "op": "SWAP3"
    },
    "1897": {
      "op": "POP"
    },
    "1898": {
      "op": "SWAP3"
    },
    "1899": {
      "op": "POP"
    },
    "1900": {
      "op": "SWAP3"
    },
    "1901": {
      "jump": "o",
      "op": "JUMP"
    },
    "1902": {
      "op": "JUMPDEST"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1907": {
      "op": "DUP3"
    },
    "1908": {
      "op": "DUP5"
    },
    "1909": {
      "op": "SUB"
    },
    "1910": {
      "op": "SLT"
    },
    "1911": {
      "op": "ISZERO"
    },
    "1912": {
      "op": "PUSH2",
      "value": "0x780"
    },
    "1915": {
      "op": "JUMPI"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1918": {
      "op": "DUP1"
    },
    "1919": {
      "op": "REVERT"
    },
    "1920": {
      "op": "JUMPDEST"
    },
    "1921": {
      "op": "PUSH2",
      "value": "0x5DE"
    },
    "1924": {
      "op": "DUP3"
    },
    "1925": {
      "op": "PUSH2",
      "value": "0x6EC"
    },
    "1928": {
      "jump": "i",
      "op": "JUMP"
    },
    "1929": {
      "op": "JUMPDEST"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1932": {
      "op": "DUP1"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1935": {
      "op": "DUP1"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1938": {
      "op": "DUP1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1943": {
      "op": "DUP9"
    },
    "1944": {
      "op": "DUP11"
    },
    "1945": {
      "op": "SUB"
    },
    "1946": {
      "op": "SLT"
    },
    "1947": {
      "op": "ISZERO"
    },
    "1948": {
      "op": "PUSH2",
      "value": "0x7A4"
    },
    "1951": {
      "op": "JUMPI"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1954": {
      "op": "DUP1"
    },
    "1955": {
      "op": "REVERT"
    },
    "1956": {
      "op": "JUMPDEST"
    },
    "1957": {
      "op": "PUSH2",
      "value": "0x7AD"
    },
    "1960": {
      "op": "DUP9"
    },
    "1961": {
      "op": "PUSH2",
      "value": "0x6EC"
    },
    "1964": {
      "jump": "i",
      "op": "JUMP"
    },
    "1965": {
      "op": "JUMPDEST"
    },
    "1966": {
      "op": "SWAP7"
    },
    "1967": {
      "op": "POP"
    },
    "1968": {
      "op": "PUSH2",
      "value": "0x7BB"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1973": {
      "op": "DUP10"
    },
    "1974": {
      "op": "ADD"
    },
    "1975": {
      "op": "PUSH2",
      "value": "0x6EC"
    },
    "1978": {
      "jump": "i",
      "op": "JUMP"
    },
    "1979": {
      "op": "JUMPDEST"
    },
    "1980": {
      "op": "SWAP6"
    },
    "1981": {
      "op": "POP"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1984": {
      "op": "DUP9"
    },
    "1985": {
      "op": "ADD"
    },
    "1986": {
      "op": "CALLDATALOAD"
    },
    "1987": {
      "op": "SWAP5"
    },
    "1988": {
      "op": "POP"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1991": {
      "op": "DUP9"
    },
    "1992": {
      "op": "ADD"
    },
    "1993": {
      "op": "CALLDATALOAD"
    },
    "1994": {
      "op": "SWAP4"
    },
    "1995": {
      "op": "POP"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1998": {
      "op": "DUP9"
    },
    "1999": {
      "op": "ADD"
    },
    "2000": {
      "op": "CALLDATALOAD"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2003": {
      "op": "DUP2"
    },
    "2004": {
      "op": "AND"
    },
    "2005": {
      "op": "DUP2"
    },
    "2006": {
      "op": "EQ"
    },
    "2007": {
      "op": "PUSH2",
      "value": "0x7DF"
    },
    "2010": {
      "op": "JUMPI"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2013": {
      "op": "DUP1"
    },
    "2014": {
      "op": "REVERT"
    },
    "2015": {
      "op": "JUMPDEST"
    },
    "2016": {
      "op": "SWAP7"
    },
    "2017": {
      "op": "SWAP10"
    },
    "2018": {
      "op": "SWAP6"
    },
    "2019": {
      "op": "SWAP9"
    },
    "2020": {
      "op": "POP"
    },
    "2021": {
      "op": "SWAP4"
    },
    "2022": {
      "op": "SWAP7"
    },
    "2023": {
      "op": "SWAP3"
    },
    "2024": {
      "op": "SWAP6"
    },
    "2025": {
      "op": "SWAP5"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2028": {
      "op": "DUP5"
    },
    "2029": {
      "op": "ADD"
    },
    "2030": {
      "op": "CALLDATALOAD"
    },
    "2031": {
      "op": "SWAP5"
    },
    "2032": {
      "op": "POP"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2035": {
      "op": "SWAP1"
    },
    "2036": {
      "op": "SWAP4"
    },
    "2037": {
      "op": "ADD"
    },
    "2038": {
      "op": "CALLDATALOAD"
    },
    "2039": {
      "op": "SWAP3"
    },
    "2040": {
      "op": "SWAP2"
    },
    "2041": {
      "op": "POP"
    },
    "2042": {
      "op": "POP"
    },
    "2043": {
      "jump": "o",
      "op": "JUMP"
    },
    "2044": {
      "op": "JUMPDEST"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2047": {
      "op": "DUP1"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2050": {
      "op": "DUP4"
    },
    "2051": {
      "op": "DUP6"
    },
    "2052": {
      "op": "SUB"
    },
    "2053": {
      "op": "SLT"
    },
    "2054": {
      "op": "ISZERO"
    },
    "2055": {
      "op": "PUSH2",
      "value": "0x80F"
    },
    "2058": {
      "op": "JUMPI"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2061": {
      "op": "DUP1"
    },
    "2062": {
      "op": "REVERT"
    },
    "2063": {
      "op": "JUMPDEST"
    },
    "2064": {
      "op": "PUSH2",
      "value": "0x818"
    },
    "2067": {
      "op": "DUP4"
    },
    "2068": {
      "op": "PUSH2",
      "value": "0x6EC"
    },
    "2071": {
      "jump": "i",
      "op": "JUMP"
    },
    "2072": {
      "op": "JUMPDEST"
    },
    "2073": {
      "op": "SWAP2"
    },
    "2074": {
      "op": "POP"
    },
    "2075": {
      "op": "PUSH2",
      "value": "0x826"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2080": {
      "op": "DUP5"
    },
    "2081": {
      "op": "ADD"
    },
    "2082": {
      "op": "PUSH2",
      "value": "0x6EC"
    },
    "2085": {
      "jump": "i",
      "op": "JUMP"
    },
    "2086": {
      "op": "JUMPDEST"
    },
    "2087": {
      "op": "SWAP1"
    },
    "2088": {
      "op": "POP"
    },
    "2089": {
      "op": "SWAP3"
    },
    "2090": {
      "op": "POP"
    },
    "2091": {
      "op": "SWAP3"
    },
    "2092": {
      "op": "SWAP1"
    },
    "2093": {
      "op": "POP"
    },
    "2094": {
      "jump": "o",
      "op": "JUMP"
    },
    "2095": {
      "op": "JUMPDEST"
    },
    "2096": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2103": {
      "op": "SHL"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2106": {
      "op": "MSTORE"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2111": {
      "op": "MSTORE"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2116": {
      "op": "REVERT"
    },
    "2117": {
      "op": "JUMPDEST"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2122": {
      "op": "DUP3"
    },
    "2123": {
      "op": "ADD"
    },
    "2124": {
      "op": "PUSH2",
      "value": "0x857"
    },
    "2127": {
      "op": "JUMPI"
    },
    "2128": {
      "op": "PUSH2",
      "value": "0x857"
    },
    "2131": {
      "op": "PUSH2",
      "value": "0x82F"
    },
    "2134": {
      "jump": "i",
      "op": "JUMP"
    },
    "2135": {
      "op": "JUMPDEST"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2139": {
      "op": "ADD"
    },
    "2140": {
      "op": "SWAP1"
    },
    "2141": {
      "jump": "o",
      "op": "JUMP"
    },
    "2142": {
      "op": "JUMPDEST"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2145": {
      "op": "DUP3"
    },
    "2146": {
      "op": "DUP3"
    },
    "2147": {
      "op": "LT"
    },
    "2148": {
      "op": "ISZERO"
    },
    "2149": {
      "op": "PUSH2",
      "value": "0x870"
    },
    "2152": {
      "op": "JUMPI"
    },
    "2153": {
      "op": "PUSH2",
      "value": "0x870"
    },
    "2156": {
      "op": "PUSH2",
      "value": "0x82F"
    },
    "2159": {
      "jump": "i",
      "op": "JUMP"
    },
    "2160": {
      "op": "JUMPDEST"
    },
    "2161": {
      "op": "POP"
    },
    "2162": {
      "op": "SUB"
    },
    "2163": {
      "op": "SWAP1"
    },
    "2164": {
      "jump": "o",
      "op": "JUMP"
    },
    "2165": {
      "op": "JUMPDEST"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2168": {
      "op": "DUP3"
    },
    "2169": {
      "op": "NOT"
    },
    "2170": {
      "op": "DUP3"
    },
    "2171": {
      "op": "GT"
    },
    "2172": {
      "op": "ISZERO"
    },
    "2173": {
      "op": "PUSH2",
      "value": "0x888"
    },
    "2176": {
      "op": "JUMPI"
    },
    "2177": {
      "op": "PUSH2",
      "value": "0x888"
    },
    "2180": {
      "op": "PUSH2",
      "value": "0x82F"
    },
    "2183": {
      "jump": "i",
      "op": "JUMP"
    },
    "2184": {
      "op": "JUMPDEST"
    },
    "2185": {
      "op": "POP"
    },
    "2186": {
      "op": "ADD"
    },
    "2187": {
      "op": "SWAP1"
    },
    "2188": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "0e19ce5b60f511b79511d4a25fe091fa3d194f8d",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\n\nimport '../interfaces/IV2ERC20.sol';\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract V2ERC20 is IV2ERC20 {\n    using SafeMath for uint;\n\n    string public constant name = 'Uniswap V2';\n    string public constant symbol = 'UNI-V2';\n    uint8 public constant decimals = 18;\n    uint  public totalSupply;\n    mapping(address => uint) public balanceOf;\n    mapping(address => mapping(address => uint)) public allowance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n    mapping(address => uint) public nonces;\n\n\n    constructor() {\n        uint chainId;\n        assembly {\n            chainId := chainid()\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\n                keccak256(bytes(name)),\n                keccak256(bytes('1')),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    function _mint(address to, uint value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function _burn(address from, uint value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(address owner, address spender, uint value) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(address from, address to, uint value) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint value) external returns (bool) {\n        require(allowance[from][msg.sender] > value,\"Insufficient allowance\");\n        allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external virtual {\n        require(deadline >= block.timestamp, 'UniswapV2: EXPIRED');\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                '\\x19\\x01',\n                DOMAIN_SEPARATOR,\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE');\n        _approve(owner, spender, value);\n    }\n}",
  "sourceMap": "168:3259:5:-:0;;;830:453;;;;;;;;;-1:-1:-1;1145:4:5;;;;;;;;;;;-1:-1:-1;;;1145:4:5;;;;;1180:10;;;;;;;;;;-1:-1:-1;;;1180:10:5;;;;986:278;;1015:95;986:278;;;273:25:11;1129:22:5;314:18:11;;;307:34;1170:21:5;357:18:11;;;350:34;913:9:5;400:18:11;;;393:34;1244:4:5;443:19:11;;;;436:61;;;;986:278:5;;;;;;;;;;245:19:11;;;;986:278:5;;;962:313;;;;;943:16;:332;168:3259;;;-1:-1:-1;168:3259:5;;",
  "sourcePath": "contracts/V2ERC20.sol",
  "type": "contract"
}