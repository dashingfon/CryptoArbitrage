{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INIT_CODE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INIT_CODE_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Pairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pairsList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Mfon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol",
    "1": "C:/Users/Mfon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/math/SafeMath.sol",
    "2": "contracts/Factory.sol",
    "3": "contracts/Pair.sol",
    "6": "interfaces/ICallee.sol",
    "7": "interfaces/IFactory.sol",
    "8": "interfaces/IPair.sol"
  },
  "ast": {
    "absolutePath": "contracts/Factory.sol",
    "exportedSymbols": {
      "Factory": [
        238
      ],
      "ICallee": [
        3702
      ],
      "IERC20": [
        3002
      ],
      "IFactory": [
        2841
      ],
      "IPair": [
        2924
      ],
      "IV2ERC20": [
        4128
      ],
      "Math": [
        319
      ],
      "Pair": [
        1437
      ],
      "SafeMath": [
        3314
      ],
      "UQ112x112": [
        361
      ],
      "V2ERC20": [
        3688
      ]
    },
    "id": 239,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:2"
      },
      {
        "absolutePath": "interfaces/IFactory.sol",
        "file": "../interfaces/IFactory.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 239,
        "sourceUnit": 2842,
        "src": "67:36:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IPair.sol",
        "file": "../interfaces/IPair.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 239,
        "sourceUnit": 2925,
        "src": "104:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Pair.sol",
        "file": "./Pair.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 239,
        "sourceUnit": 1438,
        "src": "138:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "IFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2841,
              "src": "181:8:2"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "181:8:2"
          }
        ],
        "canonicalName": "Factory",
        "contractDependencies": [
          1437
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 238,
        "linearizedBaseContracts": [
          238,
          2841
        ],
        "name": "Factory",
        "nameLocation": "170:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2795
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 8,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "211:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 238,
            "src": "196:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "196:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2800
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 10,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "237:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 238,
            "src": "222:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "222:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "d0185347",
            "id": 21,
            "mutability": "constant",
            "name": "INIT_CODE",
            "nameLocation": "278:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 238,
            "src": "254:88:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 11,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "254:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 16,
                            "name": "Pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1437,
                            "src": "322:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Pair_$1437_$",
                              "typeString": "type(contract Pair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_Pair_$1437_$",
                              "typeString": "type(contract Pair)"
                            }
                          ],
                          "id": 15,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "317:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 17,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "317:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_Pair_$1437",
                          "typeString": "type(contract Pair)"
                        }
                      },
                      "id": 18,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "317:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "expression": {
                      "id": 13,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -1,
                      "src": "300:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "300:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 19,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "300:41:2",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 12,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "290:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "290:52:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a8a83dbd",
            "id": 27,
            "mutability": "mutable",
            "name": "Pairs",
            "nameLocation": "404:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 238,
            "src": "349:60:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "357:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "349:47:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 25,
                "keyType": {
                  "id": 23,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "376:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "368:27:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 24,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "387:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6a58f23f",
            "id": 30,
            "mutability": "mutable",
            "name": "pairsList",
            "nameLocation": "432:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 238,
            "src": "415:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "415:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 29,
              "nodeType": "ArrayTypeName",
              "src": "415:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "482:43:2",
              "statements": [
                {
                  "expression": {
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "492:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "506:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "492:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "492:26:2"
                }
              ]
            },
            "id": 40,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "468:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "460:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "460:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "459:22:2"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "482:0:2"
            },
            "scope": 238,
            "src": "448:77:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2790
            ],
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "589:33:2",
              "statements": [
                {
                  "expression": {
                    "id": 45,
                    "name": "INIT_CODE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21,
                    "src": "606:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 44,
                  "id": 46,
                  "nodeType": "Return",
                  "src": "599:16:2"
                }
              ]
            },
            "functionSelector": "257671f5",
            "id": 48,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "INIT_CODE_HASH",
            "nameLocation": "540:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "554:2:2"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "580:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "579:9:2"
            },
            "scope": 238,
            "src": "531:91:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2809
            ],
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "714:45:2",
              "statements": [
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "724:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 58,
                          "name": "Pairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "731:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 60,
                        "indexExpression": {
                          "id": 59,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "737:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "731:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 62,
                      "indexExpression": {
                        "id": 61,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "745:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "731:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "724:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "724:28:2"
                }
              ]
            },
            "functionSelector": "e6a43905",
            "id": 66,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPair",
            "nameLocation": "636:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "653:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "645:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "645:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "669:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "661:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "661:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "644:32:2"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "708:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "700:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "700:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "699:14:2"
            },
            "scope": 238,
            "src": "627:132:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2816
            ],
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "833:40:2",
              "statements": [
                {
                  "expression": {
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "843:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 74,
                        "name": "pairsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "850:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 76,
                      "indexExpression": {
                        "id": 75,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "860:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "850:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "843:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "843:23:2"
                }
              ]
            },
            "functionSelector": "1e3dd18b",
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairs",
            "nameLocation": "774:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "789:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "784:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:12:2"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "827:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "819:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "818:14:2"
            },
            "scope": 238,
            "src": "765:108:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2821
            ],
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "934:40:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 85,
                      "name": "pairsList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "951:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "951:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 84,
                  "id": 87,
                  "nodeType": "Return",
                  "src": "944:23:2"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "888:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "902:2:2"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "928:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "927:6:2"
            },
            "scope": 238,
            "src": "879:95:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2830
            ],
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "1064:844:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91,
                          "src": "1082:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 100,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1092:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1082:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a204944454e544943414c5f414444524553534553",
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1100:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1af2ec9097b2f8bc2dcfea53a9ab4b2cdab42fa29e9a9e04dcb14b4efcc8aa70",
                          "typeString": "literal_string \"UniswapV2: IDENTICAL_ADDRESSES\""
                        },
                        "value": "UniswapV2: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1af2ec9097b2f8bc2dcfea53a9ab4b2cdab42fa29e9a9e04dcb14b4efcc8aa70",
                          "typeString": "literal_string \"UniswapV2: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1074:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1074:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:59:2"
                },
                {
                  "assignments": [
                    106,
                    108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 106,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "1152:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "1144:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 105,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1144:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 108,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "1168:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "1160:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 107,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1160:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 119,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 109,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "1178:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 110,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "1187:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1178:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 115,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1216:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 116,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91,
                          "src": "1224:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 117,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1215:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1178:53:2",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 112,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91,
                          "src": "1197:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 113,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1205:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 114,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1196:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1143:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 121,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "1249:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1267:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1259:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 122,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1259:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1259:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1249:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a205a45524f5f41444452455353",
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1271:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fd3496d51391106f97d9c12d75d9ef2543a217eeaf4b9c52c6fdbe23f45a5ae",
                          "typeString": "literal_string \"UniswapV2: ZERO_ADDRESS\""
                        },
                        "value": "UniswapV2: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fd3496d51391106f97d9c12d75d9ef2543a217eeaf4b9c52c6fdbe23f45a5ae",
                          "typeString": "literal_string \"UniswapV2: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1241:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1241:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 131,
                              "name": "Pairs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1315:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 133,
                            "indexExpression": {
                              "id": 132,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "1321:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1315:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 135,
                          "indexExpression": {
                            "id": 134,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "1329:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1315:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1348:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1340:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 136,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1340:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1340:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1315:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a20504149525f455849535453",
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1352:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7597a3317d1f47998beb266ffa8b5f1f9be064321f01552ef08c1fe9eeb777db",
                          "typeString": "literal_string \"UniswapV2: PAIR_EXISTS\""
                        },
                        "value": "UniswapV2: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7597a3317d1f47998beb266ffa8b5f1f9be064321f01552ef08c1fe9eeb777db",
                          "typeString": "literal_string \"UniswapV2: PAIR_EXISTS\""
                        }
                      ],
                      "id": 130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1307:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1307:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1307:70:2"
                },
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1430:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "1417:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 144,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1417:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 150,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 147,
                          "name": "Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1437,
                          "src": "1446:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Pair_$1437_$",
                            "typeString": "type(contract Pair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_Pair_$1437_$",
                            "typeString": "type(contract Pair)"
                          }
                        ],
                        "id": 146,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "1441:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1441:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_Pair_$1437",
                        "typeString": "type(contract Pair)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1441:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1417:47:2"
                },
                {
                  "assignments": [
                    152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 152,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1482:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "1474:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 151,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1474:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 160,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 156,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "1516:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 157,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "1524:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 154,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1499:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1499:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1499:32:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 153,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1489:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1489:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1474:58:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1551:86:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1565:62:2",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1581:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1588:8:2"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1598:4:2",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1584:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1584:19:2"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1611:8:2"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1605:5:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1605:15:2"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1622:4:2"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1573:7:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1573:54:2"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1565:4:2"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 145,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1588:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 145,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1611:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 96,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1565:4:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 152,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1622:4:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 161,
                  "nodeType": "InlineAssembly",
                  "src": "1542:95:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 166,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "1669:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 167,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "1677:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 163,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "1652:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 162,
                          "name": "IPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2924,
                          "src": "1646:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPair_$2924_$",
                            "typeString": "type(contract IPair)"
                          }
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1646:11:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPair_$2924",
                          "typeString": "contract IPair"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2853,
                      "src": "1646:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1646:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1646:38:2"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 170,
                          "name": "Pairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "1694:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 173,
                        "indexExpression": {
                          "id": 171,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "1700:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1694:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 174,
                      "indexExpression": {
                        "id": 172,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "1708:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1694:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 175,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "1718:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1694:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "1694:28:2"
                },
                {
                  "expression": {
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 178,
                          "name": "Pairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "1732:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 181,
                        "indexExpression": {
                          "id": 179,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 108,
                          "src": "1738:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1732:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 182,
                      "indexExpression": {
                        "id": 180,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "1746:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1732:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 183,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "1756:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1732:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "1732:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 189,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1830:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 186,
                        "name": "pairsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1815:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1815:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1815:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:20:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 193,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "1862:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 194,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "1870:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 195,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1878:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 196,
                          "name": "pairsList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "1884:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1884:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 192,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2785,
                      "src": "1850:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1850:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "EmitStatement",
                  "src": "1845:56:2"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "989:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "1008:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1000:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "1024:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1016:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "999:32:2"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "1058:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1050:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1050:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1049:14:2"
            },
            "scope": 238,
            "src": "980:928:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2835
            ],
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "1957:99:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 207,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1975:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1975:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 209,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1989:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1975:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a20464f5242494444454e",
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2002:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                          "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                        },
                        "value": "UniswapV2: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                          "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                        }
                      ],
                      "id": 206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1967:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1967:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "1967:58:2"
                },
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 214,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "2035:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 215,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "2043:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2035:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2035:14:2"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1923:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1940:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "1932:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1932:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1931:16:2"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1957:0:2"
            },
            "scope": 238,
            "src": "1914:142:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2840
            ],
            "body": {
              "id": 236,
              "nodeType": "Block",
              "src": "2118:111:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 225,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2136:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2136:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 227,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "2150:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2136:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a20464f5242494444454e",
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2163:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                          "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                        },
                        "value": "UniswapV2: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                          "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                        }
                      ],
                      "id": 224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2128:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2128:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "2128:58:2"
                },
                {
                  "expression": {
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 232,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "2196:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 233,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 221,
                      "src": "2210:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2196:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2196:26:2"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 237,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "2072:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "2095:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "2087:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2086:22:2"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2118:0:2"
            },
            "scope": 238,
            "src": "2063:166:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 239,
        "src": "161:2070:2",
        "usedErrors": []
      }
    ],
    "src": "40:2191:2"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051612b1e380380612b1e83398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b612a8b806100936000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a2e74af611610071578063a2e74af614610140578063a8a83dbd14610155578063c9c6539614610189578063d01853471461019c578063e6a43905146101a4578063f46901ed146101dc57600080fd5b8063017e7e58146100b9578063094b7415146100e95780631e3dd18b146100fc578063257671f51461010f578063574f2ba3146101255780636a58f23f1461012d575b600080fd5b6000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100cc906001600160a01b031681565b6100cc61010a3660046106d8565b6101ef565b61011761021f565b6040519081526020016100e0565b600354610117565b6100cc61013b3660046106d8565b61026e565b61015361014e36600461070d565b610298565b005b6100cc61016336600461072f565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b6100cc61019736600461072f565b610310565b61011761060e565b6100cc6101b236600461072f565b6001600160a01b039182166000908152600260209081526040808320938516835292905220541690565b6101536101ea36600461070d565b610658565b60006003828154811061020457610204610762565b6000918252602090912001546001600160a01b031692915050565b600060405180602001610231906106cb565b601f1982820381018352601f9091011660408190526102539190602001610778565b60405160208183030381529060405280519060200120905090565b6003818154811061027e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031633146102ee5760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b0316036103735760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056323a204944454e544943414c5f414444524553534553000060448201526064016102e5565b600080836001600160a01b0316856001600160a01b031610610396578385610399565b84845b90925090506001600160a01b0382166103f45760405162461bcd60e51b815260206004820152601760248201527f556e697377617056323a205a45524f5f4144445245535300000000000000000060448201526064016102e5565b6001600160a01b038281166000908152600260209081526040808320858516845290915290205416156104625760405162461bcd60e51b8152602060048201526016602482015275556e697377617056323a20504149525f45584953545360501b60448201526064016102e5565b600060405180602001610474906106cb565b601f1982820381018352601f9091011660408190526bffffffffffffffffffffffff19606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f560405163485cc95560e01b81526001600160a01b03868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b15801561052657600080fd5b505af115801561053a573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526002602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b60405161061d602082016106cb565b601f1982820381018352601f90910116604081905261063f9190602001610778565b6040516020818303038152906040528051906020012081565b6001546001600160a01b031633146106a95760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b60448201526064016102e5565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6122a2806107b483390190565b6000602082840312156106ea57600080fd5b5035919050565b80356001600160a01b038116811461070857600080fd5b919050565b60006020828403121561071f57600080fd5b610728826106f1565b9392505050565b6000806040838503121561074257600080fd5b61074b836106f1565b9150610759602084016106f1565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b6000825160005b81811015610799576020818601810151858301520161077f565b818111156107a8576000828501525b50919091019291505056fe60806040526001600c5534801561001557600080fd5b50604080518082018252600a8152692ab734b9bbb0b8102b1960b11b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fbfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b0319163317905561219a806101086000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80637464fc3d11610104578063bc25cf77116100a2578063d505accf11610071578063d505accf14610468578063dd62ed3e1461047b578063f0fe082a146104a6578063fff6cae9146104b957600080fd5b8063bc25cf7714610420578063c45a015514610433578063c83dd23114610444578063d21220a71461045757600080fd5b806395d89b41116100de57806395d89b41146103cc57806396a8797e146103f1578063a9059cbb14610404578063ba9a7a561461041757600080fd5b80637464fc3d1461037b5780637ecebe001461038457806389afcb44146103a457600080fd5b806330adf81f1161017c5780635909c0d51161014b5780635909c0d5146103365780635a3d54931461033f5780636a6278421461034857806370a082311461035b57600080fd5b806330adf81f146102d9578063313ce567146103005780633644e5151461031a578063485cc9551461032357600080fd5b8063095ea7b3116101b8578063095ea7b3146102675780630dfe16811461028a57806318160ddd146102af57806323b872dd146102c657600080fd5b8063022c0d9f146101df57806306fdde03146101f45780630902f1ac14610233575b600080fd5b6101f26101ed366004611d11565b6104c1565b005b61021d6040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b60405161022a9190611dd7565b60405180910390f35b61023b6109c7565b604080516001600160701b03948516815293909216602084015263ffffffff169082015260600161022a565b61027a610275366004611e0a565b6109f1565b604051901515815260200161022a565b6006546001600160a01b03165b6040516001600160a01b03909116815260200161022a565b6102b860005481565b60405190815260200161022a565b61027a6102d4366004611e36565b610a07565b6102b87f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b610308601281565b60405160ff909116815260200161022a565b6102b860035481565b6101f2610331366004611e77565b610ad9565b6102b860095481565b6102b8600a5481565b6102b8610356366004611eb0565b610b58565b6102b8610369366004611eb0565b60016020526000908152604090205481565b6102b8600b5481565b6102b8610392366004611eb0565b60046020526000908152604090205481565b6103b76103b2366004611eb0565b610e20565b6040805192835260208301919091520161022a565b61021d604051806040016040528060068152602001652aa72496ab1960d11b81525081565b600754610297906001600160a01b031681565b61027a610412366004611e0a565b611186565b6102b86103e881565b6101f261042e366004611eb0565b611193565b6005546001600160a01b0316610297565b600554610297906001600160a01b031681565b6007546001600160a01b0316610297565b6101f2610476366004611ecd565b6112a7565b6102b8610489366004611e77565b600260209081526000928352604080842090915290825290205481565b600654610297906001600160a01b031681565b6101f26114bb565b600c546001146104ec5760405162461bcd60e51b81526004016104e390611f44565b60405180910390fd5b6000600c55841515806104ff5750600084115b6105595760405162461bcd60e51b815260206004820152602560248201527f556e697377617056323a20494e53554646494349454e545f4f55545055545f416044820152641353d5539560da1b60648201526084016104e3565b6000806105646109c7565b5091509150816001600160701b0316871080156105895750806001600160701b031686105b6105df5760405162461bcd60e51b815260206004820152602160248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152605960f81b60648201526084016104e3565b60065460075460009182916001600160a01b0391821691908116908916821480159061061d5750806001600160a01b0316896001600160a01b031614155b6106615760405162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b60448201526064016104e3565b8a1561067257610672828a8d6115df565b891561068357610683818a8c6115df565b86156106f057604051632934d9d360e01b81526001600160a01b038a1690632934d9d3906106bd9033908f908f908e908e90600401611f6f565b600060405180830381600087803b1580156106d757600080fd5b505af11580156106eb573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610734573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107589190611fbb565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a0823190602401602060405180830381865afa15801561079f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c39190611fbb565b92505050600089856001600160701b03166107de9190611fea565b83116107eb576000610808565b6107fe8a6001600160701b038716611fea565b6108089084611fea565b9050600061081f8a6001600160701b038716611fea565b831161082c576000610849565b61083f8a6001600160701b038716611fea565b6108499084611fea565b9050600082118061085a5750600081115b6108b25760405162461bcd60e51b8152602060048201526024808201527f556e697377617056323a20494e53554646494349454e545f494e5055545f414d60448201526313d5539560e21b60648201526084016104e3565b60006108d46108c284600361172a565b6108ce876103e861172a565b9061173d565b905060006108e66108c284600361172a565b905061090b620f42406109056001600160701b038b8116908b1661172a565b9061172a565b610915838361172a565b10156109525760405162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b60448201526064016104e3565b505061096084848888611749565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b60006109fe3384846118d5565b50600192915050565b6001600160a01b03831660009081526002602090815260408083203384529091528120548210610a725760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064016104e3565b6001600160a01b0384166000908152600260209081526040808320338452909152902054610aa0908361173d565b6001600160a01b0385166000908152600260209081526040808320338452909152902055610acf848484611937565b5060019392505050565b6005546001600160a01b03163314610b2a5760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b60448201526064016104e3565b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b6000600c54600114610b7c5760405162461bcd60e51b81526004016104e390611f44565b6000600c81905580610b8c6109c7565b506006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610bde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c029190611fbb565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c749190611fbb565b90506000610c8b836001600160701b03871661173d565b90506000610ca2836001600160701b03871661173d565b90506000610cb087876119dd565b60008054919250819003610cea57610cd66103e86108ce610cd1878761172a565b611b1a565b9850610ce560006103e8611b8a565b610d31565b610d2e6001600160701b038916610d01868461172a565b610d0b9190612017565b6001600160701b038916610d1f868561172a565b610d299190612017565b611c19565b98505b60008911610d925760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d3525395115160c21b60648201526084016104e3565b610d9c8a8a611b8a565b610da886868a8a611749565b8115610dd257600854610dce906001600160701b0380821691600160701b90041661172a565b600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c54600114610e455760405162461bcd60e51b81526004016104e390611f44565b6000600c81905580610e556109c7565b506006546007546040516370a0823160e01b81523060048201529395509193506001600160a01b039081169291169060009083906370a0823190602401602060405180830381865afa158015610eaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed39190611fbb565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610f1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f419190611fbb565b30600090815260016020526040812054919250610f5e88886119dd565b60005490915080610f6f848761172a565b610f799190612017565b9a5080610f86848661172a565b610f909190612017565b995060008b118015610fa2575060008a115b610fff5760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d0955493915160c21b60648201526084016104e3565b6110093084611c2f565b611014878d8d6115df565b61101f868d8c6115df565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa158015611063573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110879190611fbb565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a0823190602401602060405180830381865afa1580156110ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f29190611fbb565b935061110085858b8b611749565b811561112a57600854611126906001600160701b0380821691600160701b90041661172a565b600b555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b60006109fe338484611937565b600c546001146111b55760405162461bcd60e51b81526004016104e390611f44565b6000600c556006546007546008546040516370a0823160e01b81523060048201526001600160a01b039384169390921691611250918491869161124b916001600160701b039091169084906370a08231906024015b602060405180830381865afa158015611227573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce9190611fbb565b6115df565b6008546040516370a0823160e01b815230600482015261129d918391869161124b91600160701b9091046001600160701b0316906001600160a01b038516906370a082319060240161120a565b50506001600c5550565b428410156112ec5760405162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b60448201526064016104e3565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b91908761133f8361202b565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016113b892919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611423573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906114595750886001600160a01b0316816001600160a01b0316145b6114a55760405162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e41545552450000000060448201526064016104e3565b6114b08989896118d5565b505050505050505050565b600c546001146114dd5760405162461bcd60e51b81526004016104e390611f44565b6000600c556006546040516370a0823160e01b81523060048201526115d8916001600160a01b0316906370a0823190602401602060405180830381865afa15801561152c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115509190611fbb565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611598573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115bc9190611fbb565b6008546001600160701b0380821691600160701b900416611749565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1790529151600092839287169161166b9190612044565b6000604051808303816000865af19150503d80600081146116a8576040519150601f19603f3d011682016040523d82523d6000602084013e6116ad565b606091505b50915091508180156116d75750805115806116d75750808060200190518101906116d79190612060565b6117235760405162461bcd60e51b815260206004820152601a60248201527f556e697377617056323a205452414e534645525f4641494c454400000000000060448201526064016104e3565b5050505050565b60006117368284612082565b9392505050565b60006117368284611fea565b600061175a640100000000426120a1565b60085490915060009061177a90600160e01b900463ffffffff16836120b5565b905060008163ffffffff1611801561179a57506001600160701b03841615155b80156117ae57506001600160701b03831615155b1561183d578063ffffffff166117d6856117c786611cb9565b6001600160e01b031690611cd8565b6001600160e01b03166117e99190612082565b600960008282546117fa91906120da565b909155505063ffffffff8116611813846117c787611cb9565b6001600160e01b03166118269190612082565b600a600082825461183791906120da565b90915550505b6008805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831660009081526001602052604090205461195a908261173d565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546119899082611ced565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061192a9085815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5791906120f2565b600b546001600160a01b038216158015945091925090611b06578015611b01576000611a92610cd16001600160701b0388811690881661172a565b90506000611a9f83611b1a565b905080821115611afe576000611ac1611ab8848461173d565b6000549061172a565b90506000611ada83611ad486600561172a565b90611ced565b90506000611ae88284612017565b90508015611afa57611afa8782611b8a565b5050505b50505b611b12565b8015611b12576000600b555b505092915050565b60006003821115611b7b5750806000611b34600283612017565b611b3f9060016120da565b90505b81811015611b7557905080600281611b5a8186612017565b611b6491906120da565b611b6e9190612017565b9050611b42565b50919050565b8115611b85575060015b919050565b600054611b979082611ced565b60009081556001600160a01b038316815260016020526040902054611bbc9082611ced565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611c0d9085815260200190565b60405180910390a35050565b6000818310611c285781611736565b5090919050565b6001600160a01b038216600090815260016020526040902054611c52908261173d565b6001600160a01b03831660009081526001602052604081209190915554611c79908261173d565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611c0d565b6000611cd2600160701b6001600160701b03841661210f565b92915050565b60006117366001600160701b0383168461213e565b600061173682846120da565b6001600160a01b0381168114611d0e57600080fd5b50565b600080600080600060808688031215611d2957600080fd5b85359450602086013593506040860135611d4281611cf9565b9250606086013567ffffffffffffffff80821115611d5f57600080fd5b818801915088601f830112611d7357600080fd5b813581811115611d8257600080fd5b896020828501011115611d9457600080fd5b9699959850939650602001949392505050565b60005b83811015611dc2578181015183820152602001611daa565b83811115611dd1576000848401525b50505050565b6020815260008251806020840152611df6816040850160208701611da7565b601f01601f19169190910160400192915050565b60008060408385031215611e1d57600080fd5b8235611e2881611cf9565b946020939093013593505050565b600080600060608486031215611e4b57600080fd5b8335611e5681611cf9565b92506020840135611e6681611cf9565b929592945050506040919091013590565b60008060408385031215611e8a57600080fd5b8235611e9581611cf9565b91506020830135611ea581611cf9565b809150509250929050565b600060208284031215611ec257600080fd5b813561173681611cf9565b600080600080600080600060e0888a031215611ee857600080fd5b8735611ef381611cf9565b96506020880135611f0381611cf9565b95506040880135945060608801359350608088013560ff81168114611f2757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b602080825260119082015270155b9a5cddd85c158c8e881313d0d2d151607a1b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b600060208284031215611fcd57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611ffc57611ffc611fd4565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261202657612026612001565b500490565b60006001820161203d5761203d611fd4565b5060010190565b60008251612056818460208701611da7565b9190910192915050565b60006020828403121561207257600080fd5b8151801515811461173657600080fd5b600081600019048311821515161561209c5761209c611fd4565b500290565b6000826120b0576120b0612001565b500690565b600063ffffffff838116908316818110156120d2576120d2611fd4565b039392505050565b600082198211156120ed576120ed611fd4565b500190565b60006020828403121561210457600080fd5b815161173681611cf9565b60006001600160e01b038281168482168115158284048211161561213557612135611fd4565b02949350505050565b60006001600160e01b038381168061215857612158612001565b9216919091049291505056fea2646970667358221220f8874a49be88c822bb8a8a22f455eaa157b0da7fbca1102773c7d03f3f81afaf64736f6c634300080e0033a2646970667358221220af6583473104b1e689cec8945aa19ed67f7fda7b3a0cde74cf27ae699ed2e35364736f6c634300080e0033",
  "bytecodeSha1": "f38f2d47985bf29b138b3d9d41d207aa4710719a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "Factory",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {
        "Factory.createPair": {
          "17": [
            1082,
            1098,
            true
          ],
          "18": [
            1178,
            1193,
            true
          ],
          "19": [
            1249,
            1269,
            true
          ],
          "20": [
            1315,
            1350,
            true
          ]
        },
        "Factory.setFeeTo": {
          "21": [
            1975,
            2000,
            true
          ]
        },
        "Factory.setFeeToSetter": {
          "16": [
            2136,
            2161,
            true
          ]
        }
      },
      "3": {},
      "6": {},
      "7": {},
      "8": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {
        "Factory.INIT_CODE_HASH": {
          "3": [
            599,
            615
          ]
        },
        "Factory.allPairs": {
          "2": [
            843,
            866
          ]
        },
        "Factory.allPairsLength": {
          "0": [
            944,
            967
          ]
        },
        "Factory.createPair": {
          "6": [
            1074,
            1133
          ],
          "7": [
            1241,
            1297
          ],
          "8": [
            1307,
            1377
          ],
          "9": [
            1646,
            1684
          ],
          "10": [
            1694,
            1722
          ],
          "11": [
            1732,
            1760
          ],
          "12": [
            1815,
            1835
          ],
          "13": [
            1845,
            1901
          ]
        },
        "Factory.getPair": {
          "1": [
            724,
            752
          ]
        },
        "Factory.setFeeTo": {
          "14": [
            1967,
            2025
          ],
          "15": [
            2035,
            2049
          ]
        },
        "Factory.setFeeToSetter": {
          "4": [
            2128,
            2186
          ],
          "5": [
            2196,
            2222
          ]
        }
      },
      "3": {},
      "6": {},
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "ICallee",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC20",
    "IFactory",
    "IPair",
    "Math",
    "Pair",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/SafeMath",
    "UQ112x112"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a2e74af611610071578063a2e74af614610140578063a8a83dbd14610155578063c9c6539614610189578063d01853471461019c578063e6a43905146101a4578063f46901ed146101dc57600080fd5b8063017e7e58146100b9578063094b7415146100e95780631e3dd18b146100fc578063257671f51461010f578063574f2ba3146101255780636a58f23f1461012d575b600080fd5b6000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100cc906001600160a01b031681565b6100cc61010a3660046106d8565b6101ef565b61011761021f565b6040519081526020016100e0565b600354610117565b6100cc61013b3660046106d8565b61026e565b61015361014e36600461070d565b610298565b005b6100cc61016336600461072f565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b6100cc61019736600461072f565b610310565b61011761060e565b6100cc6101b236600461072f565b6001600160a01b039182166000908152600260209081526040808320938516835292905220541690565b6101536101ea36600461070d565b610658565b60006003828154811061020457610204610762565b6000918252602090912001546001600160a01b031692915050565b600060405180602001610231906106cb565b601f1982820381018352601f9091011660408190526102539190602001610778565b60405160208183030381529060405280519060200120905090565b6003818154811061027e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031633146102ee5760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b0316036103735760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056323a204944454e544943414c5f414444524553534553000060448201526064016102e5565b600080836001600160a01b0316856001600160a01b031610610396578385610399565b84845b90925090506001600160a01b0382166103f45760405162461bcd60e51b815260206004820152601760248201527f556e697377617056323a205a45524f5f4144445245535300000000000000000060448201526064016102e5565b6001600160a01b038281166000908152600260209081526040808320858516845290915290205416156104625760405162461bcd60e51b8152602060048201526016602482015275556e697377617056323a20504149525f45584953545360501b60448201526064016102e5565b600060405180602001610474906106cb565b601f1982820381018352601f9091011660408190526bffffffffffffffffffffffff19606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f560405163485cc95560e01b81526001600160a01b03868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b15801561052657600080fd5b505af115801561053a573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526002602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b60405161061d602082016106cb565b601f1982820381018352601f90910116604081905261063f9190602001610778565b6040516020818303038152906040528051906020012081565b6001546001600160a01b031633146106a95760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b60448201526064016102e5565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6122a2806107b483390190565b6000602082840312156106ea57600080fd5b5035919050565b80356001600160a01b038116811461070857600080fd5b919050565b60006020828403121561071f57600080fd5b610728826106f1565b9392505050565b6000806040838503121561074257600080fd5b61074b836106f1565b9150610759602084016106f1565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b6000825160005b81811015610799576020818601810151858301520161077f565b818111156107a8576000828501525b50919091019291505056fe60806040526001600c5534801561001557600080fd5b50604080518082018252600a8152692ab734b9bbb0b8102b1960b11b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fbfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b0319163317905561219a806101086000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80637464fc3d11610104578063bc25cf77116100a2578063d505accf11610071578063d505accf14610468578063dd62ed3e1461047b578063f0fe082a146104a6578063fff6cae9146104b957600080fd5b8063bc25cf7714610420578063c45a015514610433578063c83dd23114610444578063d21220a71461045757600080fd5b806395d89b41116100de57806395d89b41146103cc57806396a8797e146103f1578063a9059cbb14610404578063ba9a7a561461041757600080fd5b80637464fc3d1461037b5780637ecebe001461038457806389afcb44146103a457600080fd5b806330adf81f1161017c5780635909c0d51161014b5780635909c0d5146103365780635a3d54931461033f5780636a6278421461034857806370a082311461035b57600080fd5b806330adf81f146102d9578063313ce567146103005780633644e5151461031a578063485cc9551461032357600080fd5b8063095ea7b3116101b8578063095ea7b3146102675780630dfe16811461028a57806318160ddd146102af57806323b872dd146102c657600080fd5b8063022c0d9f146101df57806306fdde03146101f45780630902f1ac14610233575b600080fd5b6101f26101ed366004611d11565b6104c1565b005b61021d6040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b60405161022a9190611dd7565b60405180910390f35b61023b6109c7565b604080516001600160701b03948516815293909216602084015263ffffffff169082015260600161022a565b61027a610275366004611e0a565b6109f1565b604051901515815260200161022a565b6006546001600160a01b03165b6040516001600160a01b03909116815260200161022a565b6102b860005481565b60405190815260200161022a565b61027a6102d4366004611e36565b610a07565b6102b87f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b610308601281565b60405160ff909116815260200161022a565b6102b860035481565b6101f2610331366004611e77565b610ad9565b6102b860095481565b6102b8600a5481565b6102b8610356366004611eb0565b610b58565b6102b8610369366004611eb0565b60016020526000908152604090205481565b6102b8600b5481565b6102b8610392366004611eb0565b60046020526000908152604090205481565b6103b76103b2366004611eb0565b610e20565b6040805192835260208301919091520161022a565b61021d604051806040016040528060068152602001652aa72496ab1960d11b81525081565b600754610297906001600160a01b031681565b61027a610412366004611e0a565b611186565b6102b86103e881565b6101f261042e366004611eb0565b611193565b6005546001600160a01b0316610297565b600554610297906001600160a01b031681565b6007546001600160a01b0316610297565b6101f2610476366004611ecd565b6112a7565b6102b8610489366004611e77565b600260209081526000928352604080842090915290825290205481565b600654610297906001600160a01b031681565b6101f26114bb565b600c546001146104ec5760405162461bcd60e51b81526004016104e390611f44565b60405180910390fd5b6000600c55841515806104ff5750600084115b6105595760405162461bcd60e51b815260206004820152602560248201527f556e697377617056323a20494e53554646494349454e545f4f55545055545f416044820152641353d5539560da1b60648201526084016104e3565b6000806105646109c7565b5091509150816001600160701b0316871080156105895750806001600160701b031686105b6105df5760405162461bcd60e51b815260206004820152602160248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152605960f81b60648201526084016104e3565b60065460075460009182916001600160a01b0391821691908116908916821480159061061d5750806001600160a01b0316896001600160a01b031614155b6106615760405162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b60448201526064016104e3565b8a1561067257610672828a8d6115df565b891561068357610683818a8c6115df565b86156106f057604051632934d9d360e01b81526001600160a01b038a1690632934d9d3906106bd9033908f908f908e908e90600401611f6f565b600060405180830381600087803b1580156106d757600080fd5b505af11580156106eb573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610734573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107589190611fbb565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a0823190602401602060405180830381865afa15801561079f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c39190611fbb565b92505050600089856001600160701b03166107de9190611fea565b83116107eb576000610808565b6107fe8a6001600160701b038716611fea565b6108089084611fea565b9050600061081f8a6001600160701b038716611fea565b831161082c576000610849565b61083f8a6001600160701b038716611fea565b6108499084611fea565b9050600082118061085a5750600081115b6108b25760405162461bcd60e51b8152602060048201526024808201527f556e697377617056323a20494e53554646494349454e545f494e5055545f414d60448201526313d5539560e21b60648201526084016104e3565b60006108d46108c284600361172a565b6108ce876103e861172a565b9061173d565b905060006108e66108c284600361172a565b905061090b620f42406109056001600160701b038b8116908b1661172a565b9061172a565b610915838361172a565b10156109525760405162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b60448201526064016104e3565b505061096084848888611749565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b60006109fe3384846118d5565b50600192915050565b6001600160a01b03831660009081526002602090815260408083203384529091528120548210610a725760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064016104e3565b6001600160a01b0384166000908152600260209081526040808320338452909152902054610aa0908361173d565b6001600160a01b0385166000908152600260209081526040808320338452909152902055610acf848484611937565b5060019392505050565b6005546001600160a01b03163314610b2a5760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b60448201526064016104e3565b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b6000600c54600114610b7c5760405162461bcd60e51b81526004016104e390611f44565b6000600c81905580610b8c6109c7565b506006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610bde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c029190611fbb565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c749190611fbb565b90506000610c8b836001600160701b03871661173d565b90506000610ca2836001600160701b03871661173d565b90506000610cb087876119dd565b60008054919250819003610cea57610cd66103e86108ce610cd1878761172a565b611b1a565b9850610ce560006103e8611b8a565b610d31565b610d2e6001600160701b038916610d01868461172a565b610d0b9190612017565b6001600160701b038916610d1f868561172a565b610d299190612017565b611c19565b98505b60008911610d925760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d3525395115160c21b60648201526084016104e3565b610d9c8a8a611b8a565b610da886868a8a611749565b8115610dd257600854610dce906001600160701b0380821691600160701b90041661172a565b600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c54600114610e455760405162461bcd60e51b81526004016104e390611f44565b6000600c81905580610e556109c7565b506006546007546040516370a0823160e01b81523060048201529395509193506001600160a01b039081169291169060009083906370a0823190602401602060405180830381865afa158015610eaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed39190611fbb565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610f1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f419190611fbb565b30600090815260016020526040812054919250610f5e88886119dd565b60005490915080610f6f848761172a565b610f799190612017565b9a5080610f86848661172a565b610f909190612017565b995060008b118015610fa2575060008a115b610fff5760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d0955493915160c21b60648201526084016104e3565b6110093084611c2f565b611014878d8d6115df565b61101f868d8c6115df565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa158015611063573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110879190611fbb565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a0823190602401602060405180830381865afa1580156110ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f29190611fbb565b935061110085858b8b611749565b811561112a57600854611126906001600160701b0380821691600160701b90041661172a565b600b555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b60006109fe338484611937565b600c546001146111b55760405162461bcd60e51b81526004016104e390611f44565b6000600c556006546007546008546040516370a0823160e01b81523060048201526001600160a01b039384169390921691611250918491869161124b916001600160701b039091169084906370a08231906024015b602060405180830381865afa158015611227573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce9190611fbb565b6115df565b6008546040516370a0823160e01b815230600482015261129d918391869161124b91600160701b9091046001600160701b0316906001600160a01b038516906370a082319060240161120a565b50506001600c5550565b428410156112ec5760405162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b60448201526064016104e3565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b91908761133f8361202b565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016113b892919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611423573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906114595750886001600160a01b0316816001600160a01b0316145b6114a55760405162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e41545552450000000060448201526064016104e3565b6114b08989896118d5565b505050505050505050565b600c546001146114dd5760405162461bcd60e51b81526004016104e390611f44565b6000600c556006546040516370a0823160e01b81523060048201526115d8916001600160a01b0316906370a0823190602401602060405180830381865afa15801561152c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115509190611fbb565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611598573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115bc9190611fbb565b6008546001600160701b0380821691600160701b900416611749565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1790529151600092839287169161166b9190612044565b6000604051808303816000865af19150503d80600081146116a8576040519150601f19603f3d011682016040523d82523d6000602084013e6116ad565b606091505b50915091508180156116d75750805115806116d75750808060200190518101906116d79190612060565b6117235760405162461bcd60e51b815260206004820152601a60248201527f556e697377617056323a205452414e534645525f4641494c454400000000000060448201526064016104e3565b5050505050565b60006117368284612082565b9392505050565b60006117368284611fea565b600061175a640100000000426120a1565b60085490915060009061177a90600160e01b900463ffffffff16836120b5565b905060008163ffffffff1611801561179a57506001600160701b03841615155b80156117ae57506001600160701b03831615155b1561183d578063ffffffff166117d6856117c786611cb9565b6001600160e01b031690611cd8565b6001600160e01b03166117e99190612082565b600960008282546117fa91906120da565b909155505063ffffffff8116611813846117c787611cb9565b6001600160e01b03166118269190612082565b600a600082825461183791906120da565b90915550505b6008805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831660009081526001602052604090205461195a908261173d565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546119899082611ced565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061192a9085815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5791906120f2565b600b546001600160a01b038216158015945091925090611b06578015611b01576000611a92610cd16001600160701b0388811690881661172a565b90506000611a9f83611b1a565b905080821115611afe576000611ac1611ab8848461173d565b6000549061172a565b90506000611ada83611ad486600561172a565b90611ced565b90506000611ae88284612017565b90508015611afa57611afa8782611b8a565b5050505b50505b611b12565b8015611b12576000600b555b505092915050565b60006003821115611b7b5750806000611b34600283612017565b611b3f9060016120da565b90505b81811015611b7557905080600281611b5a8186612017565b611b6491906120da565b611b6e9190612017565b9050611b42565b50919050565b8115611b85575060015b919050565b600054611b979082611ced565b60009081556001600160a01b038316815260016020526040902054611bbc9082611ced565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611c0d9085815260200190565b60405180910390a35050565b6000818310611c285781611736565b5090919050565b6001600160a01b038216600090815260016020526040902054611c52908261173d565b6001600160a01b03831660009081526001602052604081209190915554611c79908261173d565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611c0d565b6000611cd2600160701b6001600160701b03841661210f565b92915050565b60006117366001600160701b0383168461213e565b600061173682846120da565b6001600160a01b0381168114611d0e57600080fd5b50565b600080600080600060808688031215611d2957600080fd5b85359450602086013593506040860135611d4281611cf9565b9250606086013567ffffffffffffffff80821115611d5f57600080fd5b818801915088601f830112611d7357600080fd5b813581811115611d8257600080fd5b896020828501011115611d9457600080fd5b9699959850939650602001949392505050565b60005b83811015611dc2578181015183820152602001611daa565b83811115611dd1576000848401525b50505050565b6020815260008251806020840152611df6816040850160208701611da7565b601f01601f19169190910160400192915050565b60008060408385031215611e1d57600080fd5b8235611e2881611cf9565b946020939093013593505050565b600080600060608486031215611e4b57600080fd5b8335611e5681611cf9565b92506020840135611e6681611cf9565b929592945050506040919091013590565b60008060408385031215611e8a57600080fd5b8235611e9581611cf9565b91506020830135611ea581611cf9565b809150509250929050565b600060208284031215611ec257600080fd5b813561173681611cf9565b600080600080600080600060e0888a031215611ee857600080fd5b8735611ef381611cf9565b96506020880135611f0381611cf9565b95506040880135945060608801359350608088013560ff81168114611f2757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b602080825260119082015270155b9a5cddd85c158c8e881313d0d2d151607a1b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b600060208284031215611fcd57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611ffc57611ffc611fd4565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261202657612026612001565b500490565b60006001820161203d5761203d611fd4565b5060010190565b60008251612056818460208701611da7565b9190910192915050565b60006020828403121561207257600080fd5b8151801515811461173657600080fd5b600081600019048311821515161561209c5761209c611fd4565b500290565b6000826120b0576120b0612001565b500690565b600063ffffffff838116908316818110156120d2576120d2611fd4565b039392505050565b600082198211156120ed576120ed611fd4565b500190565b60006020828403121561210457600080fd5b815161173681611cf9565b60006001600160e01b038281168482168115158284048211161561213557612135611fd4565b02949350505050565b60006001600160e01b038381168061215857612158612001565b9216919091049291505056fea2646970667358221220f8874a49be88c822bb8a8a22f455eaa157b0da7fbca1102773c7d03f3f81afaf64736f6c634300080e0033a2646970667358221220af6583473104b1e689cec8945aa19ed67f7fda7b3a0cde74cf27ae699ed2e35364736f6c634300080e0033",
  "deployedSourceMap": "161:2070:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196:20;;;;;-1:-1:-1;;;;;196:20:2;;;;;;-1:-1:-1;;;;;178:32:11;;;160:51;;148:2;133:18;196:20:2;;;;;;;;222:26;;;;;-1:-1:-1;;;;;222:26:2;;;765:108;;;;;;:::i;:::-;;:::i;531:91::-;;;:::i;:::-;;;553:25:11;;;541:2;526:18;531:91:2;407:177:11;879:95:2;951:9;:16;879:95;;415:26;;;;;;:::i;:::-;;:::i;2063:166::-;;;;;;:::i;:::-;;:::i;:::-;;349:60;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;349:60:2;;;980:928;;;;;;:::i;:::-;;:::i;254:88::-;;;:::i;627:132::-;;;;;;:::i;:::-;-1:-1:-1;;;;;731:13:2;;;700:12;731:13;;;:5;:13;;;;;;;;:21;;;;;;;;;;;;627:132;1914:142;;;;;;:::i;:::-;;:::i;765:108::-;819:12;850:9;860:5;850:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;850:16:2;;765:108;-1:-1:-1;;765:108:2:o;531:91::-;580:7;317:23;;;;;;;;:::i;:::-;-1:-1:-1;;317:23:2;;;;;;;;;;;;;;;;300:41;;317:23;;300:41;;:::i;:::-;;;;;;;;;;;;;290:52;;;;;;599:16;;531:91;:::o;415:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;415:26:2;;-1:-1:-1;415:26:2;:::o;2063:166::-;2150:11;;-1:-1:-1;;;;;2150:11:2;2136:10;:25;2128:58;;;;-1:-1:-1;;;2128:58:2;;2170:2:11;2128:58:2;;;2152:21:11;2209:2;2189:18;;;2182:30;-1:-1:-1;;;2228:18:11;;;2221:50;2288:18;;2128:58:2;;;;;;;;;2196:11;:26;;-1:-1:-1;;;;;;2196:26:2;-1:-1:-1;;;;;2196:26:2;;;;;;;;;;2063:166::o;980:928::-;1050:12;1092:6;-1:-1:-1;;;;;1082:16:2;:6;-1:-1:-1;;;;;1082:16:2;;1074:59;;;;-1:-1:-1;;;1074:59:2;;2519:2:11;1074:59:2;;;2501:21:11;2558:2;2538:18;;;2531:30;2597:32;2577:18;;;2570:60;2647:18;;1074:59:2;2317:354:11;1074:59:2;1144:14;1160;1187:6;-1:-1:-1;;;;;1178:15:2;:6;-1:-1:-1;;;;;1178:15:2;;:53;;1216:6;1224;1178:53;;;1197:6;1205;1178:53;1143:88;;-1:-1:-1;1143:88:2;-1:-1:-1;;;;;;1249:20:2;;1241:56;;;;-1:-1:-1;;;1241:56:2;;2878:2:11;1241:56:2;;;2860:21:11;2917:2;2897:18;;;2890:30;2956:25;2936:18;;;2929:53;2999:18;;1241:56:2;2676:347:11;1241:56:2;-1:-1:-1;;;;;1315:13:2;;;1348:1;1315:13;;;:5;:13;;;;;;;;:21;;;;;;;;;;;;:35;1307:70;;;;-1:-1:-1;;;1307:70:2;;3230:2:11;1307:70:2;;;3212:21:11;3269:2;3249:18;;;3242:30;-1:-1:-1;;;3288:18:11;;;3281:52;3350:18;;1307:70:2;3028:346:11;1307:70:2;1417:21;1441:23;;;;;;;;:::i;:::-;-1:-1:-1;;1441:23:2;;;;;;;;;;;;;;;;-1:-1:-1;;3606:2:11;3602:15;;;3598:24;;1441:23:2;1499:32;;3586:37:11;3657:15;;;3653:24;3639:12;;;3632:46;1441:23:2;;-1:-1:-1;1474:12:2;;3694::11;;1499:32:2;;;;;;;;;;;;1489:43;;;;;;1474:58;;1622:4;1611:8;1605:15;1598:4;1588:8;1584:19;1581:1;1573:54;1646:38;;-1:-1:-1;;;1646:38:2;;-1:-1:-1;;;;;3947:15:11;;;1646:38:2;;;3929:34:11;3999:15;;;3979:18;;;3972:43;1565:62:2;;-1:-1:-1;1646:22:2;;;;;;3864:18:11;;1646:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;1694:13:2;;;;;;;:5;:13;;;;;;;;:21;;;;;;;;;;;;:28;;;;;-1:-1:-1;;;;;;1694:28:2;;;;;;;;1732:13;;;;;;:21;;;;;;;;:28;;;;;;;;1815:9;:20;;-1:-1:-1;1815:20:2;;;;;;;;;;;;;;;;;;;;;;1884:16;;1850:51;;4200::11;;;4267:18;;;4260:34;1850:51:2;;4173:18:11;1850:51:2;;;;;;;1064:844;;;;980:928;;;;:::o;254:88::-;317:23;;;;;;;:::i;:::-;-1:-1:-1;;317:23:2;;;;;;;;;;;;;;;;300:41;;317:23;;300:41;;:::i;:::-;;;;;;;;;;;;;290:52;;;;;;254:88;:::o;1914:142::-;1989:11;;-1:-1:-1;;;;;1989:11:2;1975:10;:25;1967:58;;;;-1:-1:-1;;;1967:58:2;;2170:2:11;1967:58:2;;;2152:21:11;2209:2;2189:18;;;2182:30;-1:-1:-1;;;2228:18:11;;;2221:50;2288:18;;1967:58:2;1968:344:11;1967:58:2;2035:5;:14;;-1:-1:-1;;;;;;2035:14:2;-1:-1:-1;;;;;2035:14:2;;;;;;;;;;1914:142::o;-1:-1:-1:-;;;;;;;;:::o;222:180:11:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:11;;222:180;-1:-1:-1;222:180:11:o;771:173::-;839:20;;-1:-1:-1;;;;;888:31:11;;878:42;;868:70;;934:1;931;924:12;868:70;771:173;;;:::o;949:186::-;1008:6;1061:2;1049:9;1040:7;1036:23;1032:32;1029:52;;;1077:1;1074;1067:12;1029:52;1100:29;1119:9;1100:29;:::i;:::-;1090:39;949:186;-1:-1:-1;;;949:186:11:o;1140:260::-;1208:6;1216;1269:2;1257:9;1248:7;1244:23;1240:32;1237:52;;;1285:1;1282;1275:12;1237:52;1308:29;1327:9;1308:29;:::i;:::-;1298:39;;1356:38;1390:2;1379:9;1375:18;1356:38;:::i;:::-;1346:48;;1140:260;;;;;:::o;1405:127::-;1466:10;1461:3;1457:20;1454:1;1447:31;1497:4;1494:1;1487:15;1521:4;1518:1;1511:15;1537:426;1666:3;1704:6;1698:13;1729:1;1739:129;1753:6;1750:1;1747:13;1739:129;;;1851:4;1835:14;;;1831:25;;1825:32;1812:11;;;1805:53;1768:12;1739:129;;;1886:6;1883:1;1880:13;1877:48;;;1921:1;1912:6;1907:3;1903:16;1896:27;1877:48;-1:-1:-1;1941:16:11;;;;;1537:426;-1:-1:-1;;1537:426:11:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    161,
    2231
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA2E74AF6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA2E74AF6 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xA8A83DBD EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xC9C65396 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xD0185347 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xE6A43905 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xF46901ED EQ PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17E7E58 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x94B7415 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x1E3DD18B EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x257671F5 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x574F2BA3 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x6A58F23F EQ PUSH2 0x12D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xCC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x1EF JUMP JUMPDEST PUSH2 0x117 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x117 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0x153 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH2 0x163 CALLDATASIZE PUSH1 0x4 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x310 JUMP JUMPDEST PUSH2 0x117 PUSH2 0x60E JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x204 JUMPI PUSH2 0x204 PUSH2 0x762 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x231 SWAP1 PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x253 SWAP2 SWAP1 PUSH1 0x20 ADD PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2AB734B9BBB0B82B191D102327A92124A22222A7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x373 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A204944454E544943414C5F4144445245535345530000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x396 JUMPI DUP4 DUP6 PUSH2 0x399 JUMP JUMPDEST DUP5 DUP5 JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A205A45524F5F41444452455353000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x462 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x556E697377617056323A20504149525F455849535453 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH2 0x474 SWAP1 PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP7 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP6 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x48 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 CREATE2 PUSH1 0x40 MLOAD PUSH4 0x485CC955 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP7 POP SWAP1 DUP7 AND SWAP1 PUSH4 0x485CC955 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x53A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP10 DUP8 AND DUP1 DUP7 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP1 SLOAD SWAP8 DUP14 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP9 DUP10 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP4 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP7 DUP7 MSTORE DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP1 SLOAD DUP9 AND DUP6 OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP6 DUP2 SWAP1 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 SWAP6 ADD DUP1 SLOAD SWAP1 SWAP8 AND DUP5 OR SWAP1 SWAP7 SSTORE SWAP3 SLOAD DUP4 MLOAD SWAP3 DUP4 MSTORE SWAP1 DUP3 ADD MSTORE PUSH32 0xD3648BD0F6BA80134A33BA9275AC585D9D315F0AD8355CDDEFDE31AFA28D0E9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61D PUSH1 0x20 DUP3 ADD PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x63F SWAP2 SWAP1 PUSH1 0x20 ADD PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2AB734B9BBB0B82B191D102327A92124A22222A7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x22A2 DUP1 PUSH2 0x7B4 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x728 DUP3 PUSH2 0x6F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74B DUP4 PUSH2 0x6F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x759 PUSH1 0x20 DUP5 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x799 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x77F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x2AB734B9BBB0B8102B19 PUSH1 0xB1 SHL PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 DUP4 ADD MSTORE PUSH32 0xBFCC8EF98FFBF7B6C3FEC7BF5185B566B9863E35A9D83ACD49AD6824B5969738 DUP2 DUP5 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x3 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x219A DUP1 PUSH2 0x108 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7464FC3D GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xBC25CF77 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xF0FE082A EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xC83DD231 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x96A8797E EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x5909C0D5 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x233 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x2AB734B9BBB0B8102B19 PUSH1 0xB1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x27A PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0A JUMP JUMPDEST PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x2B8 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x27A PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E36 JUMP JUMPDEST PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x2B8 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH2 0x308 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x2B8 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E77 JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x2B8 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x21D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x2AA72496AB19 PUSH1 0xD1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x297 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x27A PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0A JUMP JUMPDEST PUSH2 0x1186 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x297 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x297 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x297 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x476 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ECD JUMP JUMPDEST PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x489 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x297 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x14BB JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E3 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE DUP5 ISZERO ISZERO DUP1 PUSH2 0x4FF JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0x559 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E53554646494349454E545F4F55545055545F41 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1353D55395 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x564 PUSH2 0x9C7 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP8 LT DUP1 ISZERO PUSH2 0x589 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP7 LT JUMPDEST PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E53554646494349454E545F4C49515549444954 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x59 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 SWAP1 DUP2 AND SWAP1 DUP10 AND DUP3 EQ DUP1 ISZERO SWAP1 PUSH2 0x61D JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x661 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x556E697377617056323A20494E56414C49445F544F PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST DUP11 ISZERO PUSH2 0x672 JUMPI PUSH2 0x672 DUP3 DUP11 DUP14 PUSH2 0x15DF JUMP JUMPDEST DUP10 ISZERO PUSH2 0x683 JUMPI PUSH2 0x683 DUP2 DUP11 DUP13 PUSH2 0x15DF JUMP JUMPDEST DUP7 ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2934D9D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x2934D9D3 SWAP1 PUSH2 0x6BD SWAP1 CALLER SWAP1 DUP16 SWAP1 DUP16 SWAP1 DUP15 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x734 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C3 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x0 DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x1FEA JUMP JUMPDEST DUP4 GT PUSH2 0x7EB JUMPI PUSH1 0x0 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x7FE DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x1FEA JUMP JUMPDEST PUSH2 0x808 SWAP1 DUP5 PUSH2 0x1FEA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x81F DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x1FEA JUMP JUMPDEST DUP4 GT PUSH2 0x82C JUMPI PUSH1 0x0 PUSH2 0x849 JUMP JUMPDEST PUSH2 0x83F DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x1FEA JUMP JUMPDEST PUSH2 0x849 SWAP1 DUP5 PUSH2 0x1FEA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x85A JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E53554646494349454E545F494E5055545F414D PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x13D55395 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D4 PUSH2 0x8C2 DUP5 PUSH1 0x3 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x8CE DUP8 PUSH2 0x3E8 PUSH2 0x172A JUMP JUMPDEST SWAP1 PUSH2 0x173D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8E6 PUSH2 0x8C2 DUP5 PUSH1 0x3 PUSH2 0x172A JUMP JUMPDEST SWAP1 POP PUSH2 0x90B PUSH3 0xF4240 PUSH2 0x905 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP12 DUP2 AND SWAP1 DUP12 AND PUSH2 0x172A JUMP JUMPDEST SWAP1 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x915 DUP4 DUP4 PUSH2 0x172A JUMP JUMPDEST LT ISZERO PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x556E697377617056323A204B PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST POP POP PUSH2 0x960 DUP5 DUP5 DUP9 DUP9 PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 CALLER SWAP1 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0xC SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FE CALLER DUP5 DUP5 PUSH2 0x18D5 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 LT PUSH2 0xA72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xAA0 SWAP1 DUP4 PUSH2 0x173D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0xACF DUP5 DUP5 DUP5 PUSH2 0x1937 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2AB734B9BBB0B82B191D102327A92124A22222A7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0xB7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E3 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE DUP1 PUSH2 0xB8C PUSH2 0x9C7 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC02 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC50 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC74 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC8B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x173D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH2 0x173D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCB0 DUP8 DUP8 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP2 SWAP3 POP DUP2 SWAP1 SUB PUSH2 0xCEA JUMPI PUSH2 0xCD6 PUSH2 0x3E8 PUSH2 0x8CE PUSH2 0xCD1 DUP8 DUP8 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1B1A JUMP JUMPDEST SWAP9 POP PUSH2 0xCE5 PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x1B8A JUMP JUMPDEST PUSH2 0xD31 JUMP JUMPDEST PUSH2 0xD2E PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xD01 DUP7 DUP5 PUSH2 0x172A JUMP JUMPDEST PUSH2 0xD0B SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xD1F DUP7 DUP6 PUSH2 0x172A JUMP JUMPDEST PUSH2 0xD29 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x1C19 JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0xD92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E53554646494349454E545F4C49515549444954 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1657D35253951151 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0xD9C DUP11 DUP11 PUSH2 0x1B8A JUMP JUMPDEST PUSH2 0xDA8 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1749 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xDD2 JUMPI PUSH1 0x8 SLOAD PUSH2 0xDCE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x172A JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0xC SSTORE POP SWAP5 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0xE45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E3 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE DUP1 PUSH2 0xE55 PUSH2 0x9C7 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF41 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0xF5E DUP9 DUP9 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0xF6F DUP5 DUP8 PUSH2 0x172A JUMP JUMPDEST PUSH2 0xF79 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP11 POP DUP1 PUSH2 0xF86 DUP5 DUP7 PUSH2 0x172A JUMP JUMPDEST PUSH2 0xF90 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0xFA2 JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0xFFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E53554646494349454E545F4C49515549444954 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1657D09554939151 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x1009 ADDRESS DUP5 PUSH2 0x1C2F JUMP JUMPDEST PUSH2 0x1014 DUP8 DUP14 DUP14 PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x101F DUP7 DUP14 DUP13 PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1063 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1087 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST SWAP4 POP PUSH2 0x1100 DUP6 DUP6 DUP12 DUP12 PUSH2 0x1749 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x112A JUMPI PUSH1 0x8 SLOAD PUSH2 0x1126 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x172A JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP13 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP2 CALLER SWAP2 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xC DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FE CALLER DUP5 DUP5 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x11B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E3 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP3 AND SWAP2 PUSH2 0x1250 SWAP2 DUP5 SWAP2 DUP7 SWAP2 PUSH2 0x124B SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1227 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CE SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x129D SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH2 0x124B SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH2 0x120A JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0xC SSTORE POP JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x12EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x155B9A5CDDD85C158C8E8811561412549151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 SWAP2 DUP12 SWAP2 DUP12 SWAP2 DUP12 SWAP2 SWAP1 DUP8 PUSH2 0x133F DUP4 PUSH2 0x202B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13B8 SWAP3 SWAP2 SWAP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP1 DUP6 MSTORE SWAP2 DUP5 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP3 POP SWAP1 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1423 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1459 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x14A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x14B0 DUP10 DUP10 DUP10 PUSH2 0x18D5 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 EQ PUSH2 0x14DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E3 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x15D8 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x152C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1550 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1598 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15BC SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x1749 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP5 MSTORE SWAP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP8 AND SWAP2 PUSH2 0x166B SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16A8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x16D7 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x16D7 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x16D7 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x1723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A205452414E534645525F4641494C4544000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4E3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1736 DUP3 DUP5 PUSH2 0x2082 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1736 DUP3 DUP5 PUSH2 0x1FEA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175A PUSH5 0x100000000 TIMESTAMP PUSH2 0x20A1 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x177A SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP4 PUSH2 0x20B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x179A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x17AE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x183D JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x17D6 DUP6 PUSH2 0x17C7 DUP7 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x17E9 SWAP2 SWAP1 PUSH2 0x2082 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17FA SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x1813 DUP5 PUSH2 0x17C7 DUP8 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x1826 SWAP2 SWAP1 PUSH2 0x2082 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1837 SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 DUP2 AND PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DUP2 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP6 AND DUP13 DUP4 AND OR SWAP5 SWAP1 SWAP5 OR SWAP2 DUP3 AND DUP4 OR SWAP5 DUP6 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP3 AND SWAP3 DUP3 AND SWAP3 SWAP1 SWAP3 OR DUP4 MSTORE SWAP3 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x195A SWAP1 DUP3 PUSH2 0x173D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1989 SWAP1 DUP3 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x192A SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x17E7E58 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A57 SWAP2 SWAP1 PUSH2 0x20F2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP5 POP SWAP2 SWAP3 POP SWAP1 PUSH2 0x1B06 JUMPI DUP1 ISZERO PUSH2 0x1B01 JUMPI PUSH1 0x0 PUSH2 0x1A92 PUSH2 0xCD1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP1 DUP9 AND PUSH2 0x172A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A9F DUP4 PUSH2 0x1B1A JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AFE JUMPI PUSH1 0x0 PUSH2 0x1AC1 PUSH2 0x1AB8 DUP5 DUP5 PUSH2 0x173D JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH2 0x172A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1ADA DUP4 PUSH2 0x1AD4 DUP7 PUSH1 0x5 PUSH2 0x172A JUMP JUMPDEST SWAP1 PUSH2 0x1CED JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AE8 DUP3 DUP5 PUSH2 0x2017 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1AFA JUMPI PUSH2 0x1AFA DUP8 DUP3 PUSH2 0x1B8A JUMP JUMPDEST POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x1B12 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B12 JUMPI PUSH1 0x0 PUSH1 0xB SSTORE JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1B7B JUMPI POP DUP1 PUSH1 0x0 PUSH2 0x1B34 PUSH1 0x2 DUP4 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x1B3F SWAP1 PUSH1 0x1 PUSH2 0x20DA JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B75 JUMPI SWAP1 POP DUP1 PUSH1 0x2 DUP2 PUSH2 0x1B5A DUP2 DUP7 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x1B64 SWAP2 SWAP1 PUSH2 0x20DA JUMP JUMPDEST PUSH2 0x1B6E SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B42 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1B85 JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1B97 SWAP1 DUP3 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1BBC SWAP1 DUP3 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x1C0D SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1C28 JUMPI DUP2 PUSH2 0x1736 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1C52 SWAP1 DUP3 PUSH2 0x173D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x1C79 SWAP1 DUP3 PUSH2 0x173D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD2 PUSH1 0x1 PUSH1 0x70 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND PUSH2 0x210F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1736 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND DUP5 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1736 DUP3 DUP5 PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x1D42 DUP2 PUSH2 0x1CF9 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1D5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1D82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1D94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DC2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DAA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1DD1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1DF6 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1E28 DUP2 PUSH2 0x1CF9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1E56 DUP2 PUSH2 0x1CF9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1E66 DUP2 PUSH2 0x1CF9 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1E95 DUP2 PUSH2 0x1CF9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1EA5 DUP2 PUSH2 0x1CF9 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1736 DUP2 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1EE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1EF3 DUP2 PUSH2 0x1CF9 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x1F03 DUP2 PUSH2 0x1CF9 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1F27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x155B9A5CDDD85C158C8E881313D0D2D151 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0xA0 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0xA0 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1FFC JUMPI PUSH2 0x1FFC PUSH2 0x1FD4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2026 JUMPI PUSH2 0x2026 PUSH2 0x2001 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x203D JUMPI PUSH2 0x203D PUSH2 0x1FD4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2056 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1DA7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2072 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x209C JUMPI PUSH2 0x209C PUSH2 0x1FD4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20B0 JUMPI PUSH2 0x20B0 PUSH2 0x2001 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x20D2 JUMPI PUSH2 0x20D2 PUSH2 0x1FD4 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x20ED JUMPI PUSH2 0x20ED PUSH2 0x1FD4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1736 DUP2 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP3 DUP2 AND DUP5 DUP3 AND DUP2 ISZERO ISZERO DUP3 DUP5 DIV DUP3 GT AND ISZERO PUSH2 0x2135 JUMPI PUSH2 0x2135 PUSH2 0x1FD4 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 AND DUP1 PUSH2 0x2158 JUMPI PUSH2 0x2158 PUSH2 0x2001 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 DUP8 0x4A 0x49 0xBE DUP9 0xC8 0x22 0xBB DUP11 DUP11 0x22 DELEGATECALL SSTORE 0xEA LOG1 JUMPI 0xB0 0xDA PUSH32 0xBCA1102773C7D03F3F81AFAF64736F6C634300080E0033A26469706673582212 KECCAK256 0xAF PUSH6 0x83473104B1E6 DUP10 0xCE 0xC8 SWAP5 GAS LOG1 SWAP15 0xD6 PUSH32 0x7FDA7B3A0CDE74CF27AE699ED2E35364736F6C634300080E0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        161,
        2231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA2E74AF6"
    },
    "38": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA2E74AF6"
    },
    "49": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "EQ",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "53": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA8A83DBD"
    },
    "60": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x155"
    },
    "64": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC9C65396"
    },
    "71": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x189"
    },
    "75": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD0185347"
    },
    "82": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19C"
    },
    "86": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE6A43905"
    },
    "93": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A4"
    },
    "97": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF46901ED"
    },
    "104": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "EQ",
      "path": "2"
    },
    "105": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DC"
    },
    "108": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "109": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "REVERT",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "115": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x17E7E58"
    },
    "120": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "EQ",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x94B7415"
    },
    "131": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "EQ",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE9"
    },
    "135": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1E3DD18B"
    },
    "142": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "EQ",
      "path": "2"
    },
    "143": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFC"
    },
    "146": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "147": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "148": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x257671F5"
    },
    "153": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "EQ",
      "path": "2"
    },
    "154": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10F"
    },
    "157": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "158": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "159": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x574F2BA3"
    },
    "164": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "EQ",
      "path": "2"
    },
    "165": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x125"
    },
    "168": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "169": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "170": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6A58F23F"
    },
    "175": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "EQ",
      "path": "2"
    },
    "176": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12D"
    },
    "179": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "180": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "181": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        161,
        2231
      ],
      "op": "REVERT",
      "path": "2"
    },
    "185": {
      "offset": [
        196,
        216
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "186": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "188": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "189": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC"
    },
    "192": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "199": {
      "op": "SHL"
    },
    "200": {
      "op": "SUB"
    },
    "201": {
      "offset": [
        196,
        216
      ],
      "op": "AND",
      "path": "2"
    },
    "202": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "DUP2",
      "path": "2"
    },
    "203": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "JUMP",
      "path": "2"
    },
    "204": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "207": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "214": {
      "op": "SHL"
    },
    "215": {
      "op": "SUB"
    },
    "216": {
      "op": "SWAP1"
    },
    "217": {
      "op": "SWAP2"
    },
    "218": {
      "op": "AND"
    },
    "219": {
      "op": "DUP2"
    },
    "220": {
      "op": "MSTORE"
    },
    "221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "223": {
      "op": "ADD"
    },
    "224": {
      "offset": [
        196,
        216
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "225": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "227": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "228": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "DUP1",
      "path": "2"
    },
    "229": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "230": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "SUB",
      "path": "2"
    },
    "231": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "232": {
      "fn": null,
      "offset": [
        196,
        216
      ],
      "op": "RETURN",
      "path": "2"
    },
    "233": {
      "offset": [
        222,
        248
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "234": {
      "fn": null,
      "offset": [
        222,
        248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "236": {
      "fn": null,
      "offset": [
        222,
        248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "237": {
      "fn": null,
      "offset": [
        222,
        248
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC"
    },
    "240": {
      "fn": null,
      "offset": [
        222,
        248
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "247": {
      "op": "SHL"
    },
    "248": {
      "op": "SUB"
    },
    "249": {
      "offset": [
        222,
        248
      ],
      "op": "AND",
      "path": "2"
    },
    "250": {
      "fn": null,
      "offset": [
        222,
        248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "251": {
      "fn": null,
      "offset": [
        222,
        248
      ],
      "op": "JUMP",
      "path": "2"
    },
    "252": {
      "fn": "Factory.allPairs",
      "offset": [
        765,
        873
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "253": {
      "fn": "Factory.allPairs",
      "offset": [
        765,
        873
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC"
    },
    "256": {
      "fn": "Factory.allPairs",
      "offset": [
        765,
        873
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10A"
    },
    "259": {
      "fn": "Factory.allPairs",
      "offset": [
        765,
        873
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "260": {
      "fn": "Factory.allPairs",
      "offset": [
        765,
        873
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "262": {
      "fn": "Factory.allPairs",
      "offset": [
        765,
        873
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D8"
    },
    "265": {
      "fn": "Factory.allPairs",
      "jump": "i",
      "offset": [
        765,
        873
      ],
      "op": "JUMP",
      "path": "2"
    },
    "266": {
      "fn": "Factory.allPairs",
      "offset": [
        765,
        873
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "267": {
      "fn": "Factory.allPairs",
      "offset": [
        765,
        873
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EF"
    },
    "270": {
      "fn": "Factory.allPairs",
      "jump": "i",
      "offset": [
        765,
        873
      ],
      "op": "JUMP",
      "path": "2"
    },
    "271": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        531,
        622
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "272": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        531,
        622
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x117"
    },
    "275": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        531,
        622
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21F"
    },
    "278": {
      "fn": "Factory.INIT_CODE_HASH",
      "jump": "i",
      "offset": [
        531,
        622
      ],
      "op": "JUMP",
      "path": "2"
    },
    "279": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        531,
        622
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "280": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        531,
        622
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "282": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        531,
        622
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "283": {
      "op": "SWAP1"
    },
    "284": {
      "op": "DUP2"
    },
    "285": {
      "op": "MSTORE"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "288": {
      "op": "ADD"
    },
    "289": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        531,
        622
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE0"
    },
    "292": {
      "op": "JUMP"
    },
    "293": {
      "fn": "Factory.allPairsLength",
      "offset": [
        879,
        974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "294": {
      "fn": "Factory.allPairsLength",
      "offset": [
        951,
        960
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x3"
    },
    "296": {
      "fn": "Factory.allPairsLength",
      "offset": [
        951,
        967
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "297": {
      "fn": "Factory.allPairsLength",
      "offset": [
        879,
        974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x117"
    },
    "300": {
      "fn": "Factory.allPairsLength",
      "offset": [
        879,
        974
      ],
      "op": "JUMP",
      "path": "2"
    },
    "301": {
      "offset": [
        415,
        441
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "302": {
      "fn": "Factory.allPairsLength",
      "offset": [
        415,
        441
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC"
    },
    "305": {
      "fn": "Factory.allPairsLength",
      "offset": [
        415,
        441
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13B"
    },
    "308": {
      "fn": "Factory.allPairsLength",
      "offset": [
        415,
        441
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "309": {
      "fn": "Factory.allPairsLength",
      "offset": [
        415,
        441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "311": {
      "fn": "Factory.allPairsLength",
      "offset": [
        415,
        441
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D8"
    },
    "314": {
      "fn": "Factory.allPairsLength",
      "jump": "i",
      "offset": [
        415,
        441
      ],
      "op": "JUMP",
      "path": "2"
    },
    "315": {
      "fn": "Factory.allPairsLength",
      "offset": [
        415,
        441
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "316": {
      "fn": "Factory.allPairsLength",
      "offset": [
        415,
        441
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26E"
    },
    "319": {
      "fn": "Factory.allPairsLength",
      "jump": "i",
      "offset": [
        415,
        441
      ],
      "op": "JUMP",
      "path": "2"
    },
    "320": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2063,
        2229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "321": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2063,
        2229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x153"
    },
    "324": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2063,
        2229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14E"
    },
    "327": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2063,
        2229
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "328": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2063,
        2229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "330": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2063,
        2229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70D"
    },
    "333": {
      "fn": "Factory.setFeeToSetter",
      "jump": "i",
      "offset": [
        2063,
        2229
      ],
      "op": "JUMP",
      "path": "2"
    },
    "334": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2063,
        2229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "335": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2063,
        2229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x298"
    },
    "338": {
      "fn": "Factory.setFeeToSetter",
      "jump": "i",
      "offset": [
        2063,
        2229
      ],
      "op": "JUMP",
      "path": "2"
    },
    "339": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2063,
        2229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "340": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2063,
        2229
      ],
      "op": "STOP",
      "path": "2"
    },
    "341": {
      "offset": [
        349,
        409
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "342": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC"
    },
    "345": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x163"
    },
    "348": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "349": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "351": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x72F"
    },
    "354": {
      "fn": "Factory.setFeeToSetter",
      "jump": "i",
      "offset": [
        349,
        409
      ],
      "op": "JUMP",
      "path": "2"
    },
    "355": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "356": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "358": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "360": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "361": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "DUP2",
      "path": "2"
    },
    "362": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "363": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "365": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "366": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "DUP4",
      "path": "2"
    },
    "367": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "368": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "370": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "DUP1",
      "path": "2"
    },
    "371": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "DUP5",
      "path": "2"
    },
    "372": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "373": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "374": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "375": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "376": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "377": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "DUP3",
      "path": "2"
    },
    "378": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "379": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "380": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "381": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "388": {
      "op": "SHL"
    },
    "389": {
      "op": "SUB"
    },
    "390": {
      "offset": [
        349,
        409
      ],
      "op": "AND",
      "path": "2"
    },
    "391": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "DUP2",
      "path": "2"
    },
    "392": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        349,
        409
      ],
      "op": "JUMP",
      "path": "2"
    },
    "393": {
      "fn": "Factory.createPair",
      "offset": [
        980,
        1908
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "394": {
      "fn": "Factory.createPair",
      "offset": [
        980,
        1908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC"
    },
    "397": {
      "fn": "Factory.createPair",
      "offset": [
        980,
        1908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x197"
    },
    "400": {
      "fn": "Factory.createPair",
      "offset": [
        980,
        1908
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "401": {
      "fn": "Factory.createPair",
      "offset": [
        980,
        1908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "403": {
      "fn": "Factory.createPair",
      "offset": [
        980,
        1908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x72F"
    },
    "406": {
      "fn": "Factory.createPair",
      "jump": "i",
      "offset": [
        980,
        1908
      ],
      "op": "JUMP",
      "path": "2"
    },
    "407": {
      "fn": "Factory.createPair",
      "offset": [
        980,
        1908
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "408": {
      "fn": "Factory.createPair",
      "offset": [
        980,
        1908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310"
    },
    "411": {
      "fn": "Factory.createPair",
      "jump": "i",
      "offset": [
        980,
        1908
      ],
      "op": "JUMP",
      "path": "2"
    },
    "412": {
      "offset": [
        254,
        342
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "413": {
      "fn": "Factory.createPair",
      "offset": [
        254,
        342
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x117"
    },
    "416": {
      "fn": "Factory.createPair",
      "offset": [
        254,
        342
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60E"
    },
    "419": {
      "fn": "Factory.createPair",
      "jump": "i",
      "offset": [
        254,
        342
      ],
      "op": "JUMP",
      "path": "2"
    },
    "420": {
      "fn": "Factory.getPair",
      "offset": [
        627,
        759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "421": {
      "fn": "Factory.getPair",
      "offset": [
        627,
        759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC"
    },
    "424": {
      "fn": "Factory.getPair",
      "offset": [
        627,
        759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B2"
    },
    "427": {
      "fn": "Factory.getPair",
      "offset": [
        627,
        759
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "428": {
      "fn": "Factory.getPair",
      "offset": [
        627,
        759
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "430": {
      "fn": "Factory.getPair",
      "offset": [
        627,
        759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x72F"
    },
    "433": {
      "fn": "Factory.getPair",
      "jump": "i",
      "offset": [
        627,
        759
      ],
      "op": "JUMP",
      "path": "2"
    },
    "434": {
      "fn": "Factory.getPair",
      "offset": [
        627,
        759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "441": {
      "op": "SHL"
    },
    "442": {
      "op": "SUB"
    },
    "443": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        744
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 1
    },
    "444": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        744
      ],
      "op": "DUP3",
      "path": "2"
    },
    "445": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        744
      ],
      "op": "AND",
      "path": "2"
    },
    "446": {
      "fn": "Factory.getPair",
      "offset": [
        700,
        712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "448": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        744
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "449": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        744
      ],
      "op": "DUP2",
      "path": "2"
    },
    "450": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        744
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "451": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        736
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "453": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "455": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        744
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "456": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        744
      ],
      "op": "DUP2",
      "path": "2"
    },
    "457": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        744
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "458": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "460": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        744
      ],
      "op": "DUP1",
      "path": "2"
    },
    "461": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        744
      ],
      "op": "DUP4",
      "path": "2"
    },
    "462": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        744
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "463": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        752
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "464": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        752
      ],
      "op": "DUP6",
      "path": "2"
    },
    "465": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        752
      ],
      "op": "AND",
      "path": "2"
    },
    "466": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        752
      ],
      "op": "DUP4",
      "path": "2"
    },
    "467": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        752
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "468": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        752
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "469": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        752
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "470": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        752
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "471": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        752
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "472": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        752
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "473": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        752
      ],
      "op": "AND",
      "path": "2"
    },
    "474": {
      "fn": "Factory.getPair",
      "offset": [
        731,
        752
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "475": {
      "fn": "Factory.getPair",
      "offset": [
        627,
        759
      ],
      "op": "JUMP",
      "path": "2"
    },
    "476": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1914,
        2056
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "477": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1914,
        2056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x153"
    },
    "480": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1914,
        2056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EA"
    },
    "483": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1914,
        2056
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "484": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1914,
        2056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "486": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1914,
        2056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70D"
    },
    "489": {
      "fn": "Factory.setFeeTo",
      "jump": "i",
      "offset": [
        1914,
        2056
      ],
      "op": "JUMP",
      "path": "2"
    },
    "490": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1914,
        2056
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "491": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1914,
        2056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x658"
    },
    "494": {
      "fn": "Factory.setFeeTo",
      "jump": "i",
      "offset": [
        1914,
        2056
      ],
      "op": "JUMP",
      "path": "2"
    },
    "495": {
      "fn": "Factory.allPairs",
      "offset": [
        765,
        873
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "496": {
      "fn": "Factory.allPairs",
      "offset": [
        819,
        831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "498": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        859
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x3"
    },
    "500": {
      "fn": "Factory.allPairs",
      "offset": [
        860,
        865
      ],
      "op": "DUP3",
      "path": "2"
    },
    "501": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "DUP2",
      "path": "2"
    },
    "502": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "503": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "DUP2",
      "path": "2"
    },
    "504": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "LT",
      "path": "2"
    },
    "505": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x204"
    },
    "508": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "509": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x204"
    },
    "512": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x762"
    },
    "515": {
      "fn": "Factory.allPairs",
      "jump": "i",
      "offset": [
        850,
        866
      ],
      "op": "JUMP",
      "path": "2"
    },
    "516": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "517": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "519": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "520": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "DUP3",
      "path": "2"
    },
    "521": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "522": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "524": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "525": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "526": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "527": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "ADD",
      "path": "2"
    },
    "528": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "535": {
      "op": "SHL"
    },
    "536": {
      "op": "SUB"
    },
    "537": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "AND",
      "path": "2"
    },
    "538": {
      "fn": "Factory.allPairs",
      "offset": [
        850,
        866
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "539": {
      "fn": "Factory.allPairs",
      "offset": [
        765,
        873
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "540": {
      "op": "POP"
    },
    "541": {
      "op": "POP"
    },
    "542": {
      "fn": "Factory.allPairs",
      "jump": "o",
      "offset": [
        765,
        873
      ],
      "op": "JUMP",
      "path": "2"
    },
    "543": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        531,
        622
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "544": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        580,
        587
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "546": {
      "offset": [
        317,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "548": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "549": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "DUP1",
      "path": "2"
    },
    "550": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "552": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "ADD",
      "path": "2"
    },
    "553": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x231"
    },
    "556": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "557": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6CB"
    },
    "560": {
      "fn": "Factory.INIT_CODE_HASH",
      "jump": "i",
      "offset": [
        317,
        340
      ],
      "op": "JUMP",
      "path": "2"
    },
    "561": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "564": {
      "op": "NOT"
    },
    "565": {
      "offset": [
        317,
        340
      ],
      "op": "DUP3",
      "path": "2"
    },
    "566": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "DUP3",
      "path": "2"
    },
    "567": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "SUB",
      "path": "2"
    },
    "568": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "569": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "ADD",
      "path": "2"
    },
    "570": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "DUP4",
      "path": "2"
    },
    "571": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "572": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "574": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "575": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "576": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "ADD",
      "path": "2"
    },
    "577": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "AND",
      "path": "2"
    },
    "578": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "580": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "581": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "582": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "583": {
      "offset": [
        300,
        341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x253"
    },
    "586": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        300,
        341
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "587": {
      "offset": [
        317,
        340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "588": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        317,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "590": {
      "offset": [
        300,
        341
      ],
      "op": "ADD",
      "path": "2"
    },
    "591": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        300,
        341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x778"
    },
    "594": {
      "fn": "Factory.INIT_CODE_HASH",
      "jump": "i",
      "offset": [
        300,
        341
      ],
      "op": "JUMP",
      "path": "2"
    },
    "595": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        300,
        341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "596": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        300,
        341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "598": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        300,
        341
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "599": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        300,
        341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "601": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        300,
        341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "602": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        300,
        341
      ],
      "op": "DUP4",
      "path": "2"
    },
    "603": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        300,
        341
      ],
      "op": "SUB",
      "path": "2"
    },
    "604": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        300,
        341
      ],
      "op": "SUB",
      "path": "2"
    },
    "605": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        300,
        341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "606": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        300,
        341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "607": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        300,
        341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "608": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        300,
        341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "610": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        300,
        341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "611": {
      "offset": [
        290,
        342
      ],
      "op": "DUP1",
      "path": "2"
    },
    "612": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        290,
        342
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "613": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        290,
        342
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "614": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        290,
        342
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "616": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        290,
        342
      ],
      "op": "ADD",
      "path": "2"
    },
    "617": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        290,
        342
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "618": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        599,
        615
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 3
    },
    "619": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        599,
        615
      ],
      "op": "POP",
      "path": "2"
    },
    "620": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        531,
        622
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "621": {
      "fn": "Factory.INIT_CODE_HASH",
      "jump": "o",
      "offset": [
        531,
        622
      ],
      "op": "JUMP",
      "path": "2"
    },
    "622": {
      "offset": [
        415,
        441
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "623": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "625": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "DUP2",
      "path": "2"
    },
    "626": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "DUP2",
      "path": "2"
    },
    "627": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "628": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "DUP2",
      "path": "2"
    },
    "629": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "LT",
      "path": "2"
    },
    "630": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27E"
    },
    "633": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "634": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "636": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "DUP1",
      "path": "2"
    },
    "637": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "REVERT",
      "path": "2"
    },
    "638": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "639": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "641": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "642": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "DUP3",
      "path": "2"
    },
    "643": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "644": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "646": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "647": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "648": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "649": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "ADD",
      "path": "2"
    },
    "650": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "657": {
      "op": "SHL"
    },
    "658": {
      "op": "SUB"
    },
    "659": {
      "offset": [
        415,
        441
      ],
      "op": "AND",
      "path": "2"
    },
    "660": {
      "fn": "Factory.INIT_CODE_HASH",
      "offset": [
        415,
        441
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "661": {
      "op": "POP"
    },
    "662": {
      "offset": [
        415,
        441
      ],
      "op": "DUP2",
      "path": "2"
    },
    "663": {
      "fn": "Factory.INIT_CODE_HASH",
      "jump": "o",
      "offset": [
        415,
        441
      ],
      "op": "JUMP",
      "path": "2"
    },
    "664": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2063,
        2229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "665": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2150,
        2161
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x1"
    },
    "667": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2150,
        2161
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "674": {
      "op": "SHL"
    },
    "675": {
      "op": "SUB"
    },
    "676": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2150,
        2161
      ],
      "op": "AND",
      "path": "2"
    },
    "677": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2136,
        2146
      ],
      "op": "CALLER",
      "path": "2"
    },
    "678": {
      "branch": 16,
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2136,
        2161
      ],
      "op": "EQ",
      "path": "2"
    },
    "679": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EE"
    },
    "682": {
      "branch": 16,
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "683": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "685": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "686": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "690": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "692": {
      "op": "SHL"
    },
    "693": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "DUP2",
      "path": "2"
    },
    "694": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "697": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "699": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "DUP3",
      "path": "2"
    },
    "700": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "ADD",
      "path": "2"
    },
    "701": {
      "op": "MSTORE"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "706": {
      "op": "DUP3"
    },
    "707": {
      "op": "ADD"
    },
    "708": {
      "op": "MSTORE"
    },
    "709": {
      "op": "PUSH20",
      "value": "0x2AB734B9BBB0B82B191D102327A92124A22222A7"
    },
    "730": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "732": {
      "op": "SHL"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "735": {
      "op": "DUP3"
    },
    "736": {
      "op": "ADD"
    },
    "737": {
      "op": "MSTORE"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "740": {
      "op": "ADD"
    },
    "741": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "742": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "744": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "745": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "DUP1",
      "path": "2"
    },
    "746": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "747": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "SUB",
      "path": "2"
    },
    "748": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "749": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "750": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2128,
        2186
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "751": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2196,
        2207
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x1"
    },
    "753": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2196,
        2222
      ],
      "op": "DUP1",
      "path": "2"
    },
    "754": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2196,
        2222
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "op": "NOT"
    },
    "764": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2196,
        2222
      ],
      "op": "AND",
      "path": "2"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "771": {
      "op": "SHL"
    },
    "772": {
      "op": "SUB"
    },
    "773": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2196,
        2222
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "774": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2196,
        2222
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "775": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2196,
        2222
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "776": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2196,
        2222
      ],
      "op": "AND",
      "path": "2"
    },
    "777": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2196,
        2222
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "778": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2196,
        2222
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "779": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2196,
        2222
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "780": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2196,
        2222
      ],
      "op": "OR",
      "path": "2"
    },
    "781": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2196,
        2222
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "782": {
      "fn": "Factory.setFeeToSetter",
      "offset": [
        2196,
        2222
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "783": {
      "fn": "Factory.setFeeToSetter",
      "jump": "o",
      "offset": [
        2063,
        2229
      ],
      "op": "JUMP",
      "path": "2"
    },
    "784": {
      "fn": "Factory.createPair",
      "offset": [
        980,
        1908
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "785": {
      "fn": "Factory.createPair",
      "offset": [
        1050,
        1062
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "787": {
      "fn": "Factory.createPair",
      "offset": [
        1092,
        1098
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 6
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "op": "SUB"
    },
    "796": {
      "fn": "Factory.createPair",
      "offset": [
        1082,
        1098
      ],
      "op": "AND",
      "path": "2"
    },
    "797": {
      "fn": "Factory.createPair",
      "offset": [
        1082,
        1088
      ],
      "op": "DUP4",
      "path": "2"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "804": {
      "op": "SHL"
    },
    "805": {
      "op": "SUB"
    },
    "806": {
      "fn": "Factory.createPair",
      "offset": [
        1082,
        1098
      ],
      "op": "AND",
      "path": "2"
    },
    "807": {
      "branch": 17,
      "fn": "Factory.createPair",
      "offset": [
        1082,
        1098
      ],
      "op": "SUB",
      "path": "2"
    },
    "808": {
      "fn": "Factory.createPair",
      "offset": [
        1074,
        1133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x373"
    },
    "811": {
      "branch": 17,
      "fn": "Factory.createPair",
      "offset": [
        1074,
        1133
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "812": {
      "fn": "Factory.createPair",
      "offset": [
        1074,
        1133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "814": {
      "fn": "Factory.createPair",
      "offset": [
        1074,
        1133
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "815": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "819": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "821": {
      "op": "SHL"
    },
    "822": {
      "fn": "Factory.createPair",
      "offset": [
        1074,
        1133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "823": {
      "fn": "Factory.createPair",
      "offset": [
        1074,
        1133
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "826": {
      "fn": "Factory.createPair",
      "offset": [
        1074,
        1133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "828": {
      "fn": "Factory.createPair",
      "offset": [
        1074,
        1133
      ],
      "op": "DUP3",
      "path": "2"
    },
    "829": {
      "fn": "Factory.createPair",
      "offset": [
        1074,
        1133
      ],
      "op": "ADD",
      "path": "2"
    },
    "830": {
      "op": "MSTORE"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "835": {
      "op": "DUP3"
    },
    "836": {
      "op": "ADD"
    },
    "837": {
      "op": "MSTORE"
    },
    "838": {
      "op": "PUSH32",
      "value": "0x556E697377617056323A204944454E544943414C5F4144445245535345530000"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "873": {
      "op": "DUP3"
    },
    "874": {
      "op": "ADD"
    },
    "875": {
      "op": "MSTORE"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "878": {
      "op": "ADD"
    },
    "879": {
      "fn": "Factory.createPair",
      "offset": [
        1074,
        1133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E5"
    },
    "882": {
      "op": "JUMP"
    },
    "883": {
      "fn": "Factory.createPair",
      "offset": [
        1074,
        1133
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "884": {
      "fn": "Factory.createPair",
      "offset": [
        1144,
        1158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "886": {
      "fn": "Factory.createPair",
      "offset": [
        1160,
        1174
      ],
      "op": "DUP1",
      "path": "2"
    },
    "887": {
      "fn": "Factory.createPair",
      "offset": [
        1187,
        1193
      ],
      "op": "DUP4",
      "path": "2"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "894": {
      "op": "SHL"
    },
    "895": {
      "op": "SUB"
    },
    "896": {
      "fn": "Factory.createPair",
      "offset": [
        1178,
        1193
      ],
      "op": "AND",
      "path": "2"
    },
    "897": {
      "fn": "Factory.createPair",
      "offset": [
        1178,
        1184
      ],
      "op": "DUP6",
      "path": "2"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "904": {
      "op": "SHL"
    },
    "905": {
      "op": "SUB"
    },
    "906": {
      "fn": "Factory.createPair",
      "offset": [
        1178,
        1193
      ],
      "op": "AND",
      "path": "2"
    },
    "907": {
      "branch": 18,
      "fn": "Factory.createPair",
      "offset": [
        1178,
        1193
      ],
      "op": "LT",
      "path": "2"
    },
    "908": {
      "fn": "Factory.createPair",
      "offset": [
        1178,
        1231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x396"
    },
    "911": {
      "branch": 18,
      "fn": "Factory.createPair",
      "offset": [
        1178,
        1231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "912": {
      "fn": "Factory.createPair",
      "offset": [
        1216,
        1222
      ],
      "op": "DUP4",
      "path": "2"
    },
    "913": {
      "fn": "Factory.createPair",
      "offset": [
        1224,
        1230
      ],
      "op": "DUP6",
      "path": "2"
    },
    "914": {
      "fn": "Factory.createPair",
      "offset": [
        1178,
        1231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x399"
    },
    "917": {
      "fn": "Factory.createPair",
      "offset": [
        1178,
        1231
      ],
      "op": "JUMP",
      "path": "2"
    },
    "918": {
      "fn": "Factory.createPair",
      "offset": [
        1178,
        1231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "919": {
      "fn": "Factory.createPair",
      "offset": [
        1197,
        1203
      ],
      "op": "DUP5",
      "path": "2"
    },
    "920": {
      "fn": "Factory.createPair",
      "offset": [
        1205,
        1211
      ],
      "op": "DUP5",
      "path": "2"
    },
    "921": {
      "fn": "Factory.createPair",
      "offset": [
        1178,
        1231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "922": {
      "fn": "Factory.createPair",
      "offset": [
        1143,
        1231
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "923": {
      "fn": "Factory.createPair",
      "offset": [
        1143,
        1231
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "924": {
      "op": "POP"
    },
    "925": {
      "fn": "Factory.createPair",
      "offset": [
        1143,
        1231
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "926": {
      "op": "POP"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "933": {
      "op": "SHL"
    },
    "934": {
      "op": "SUB"
    },
    "935": {
      "fn": "Factory.createPair",
      "offset": [
        1249,
        1269
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 7
    },
    "936": {
      "branch": 19,
      "fn": "Factory.createPair",
      "offset": [
        1249,
        1269
      ],
      "op": "AND",
      "path": "2"
    },
    "937": {
      "fn": "Factory.createPair",
      "offset": [
        1241,
        1297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4"
    },
    "940": {
      "branch": 19,
      "fn": "Factory.createPair",
      "offset": [
        1241,
        1297
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "941": {
      "fn": "Factory.createPair",
      "offset": [
        1241,
        1297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "943": {
      "fn": "Factory.createPair",
      "offset": [
        1241,
        1297
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "944": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "948": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "950": {
      "op": "SHL"
    },
    "951": {
      "fn": "Factory.createPair",
      "offset": [
        1241,
        1297
      ],
      "op": "DUP2",
      "path": "2"
    },
    "952": {
      "fn": "Factory.createPair",
      "offset": [
        1241,
        1297
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "955": {
      "fn": "Factory.createPair",
      "offset": [
        1241,
        1297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "957": {
      "fn": "Factory.createPair",
      "offset": [
        1241,
        1297
      ],
      "op": "DUP3",
      "path": "2"
    },
    "958": {
      "fn": "Factory.createPair",
      "offset": [
        1241,
        1297
      ],
      "op": "ADD",
      "path": "2"
    },
    "959": {
      "op": "MSTORE"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "964": {
      "op": "DUP3"
    },
    "965": {
      "op": "ADD"
    },
    "966": {
      "op": "MSTORE"
    },
    "967": {
      "op": "PUSH32",
      "value": "0x556E697377617056323A205A45524F5F41444452455353000000000000000000"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1002": {
      "op": "DUP3"
    },
    "1003": {
      "op": "ADD"
    },
    "1004": {
      "op": "MSTORE"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1007": {
      "op": "ADD"
    },
    "1008": {
      "fn": "Factory.createPair",
      "offset": [
        1241,
        1297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E5"
    },
    "1011": {
      "op": "JUMP"
    },
    "1012": {
      "fn": "Factory.createPair",
      "offset": [
        1241,
        1297
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1019": {
      "op": "SHL"
    },
    "1020": {
      "op": "SUB"
    },
    "1021": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1328
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 8
    },
    "1022": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1023": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1328
      ],
      "op": "AND",
      "path": "2"
    },
    "1024": {
      "fn": "Factory.createPair",
      "offset": [
        1348,
        1349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1026": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1328
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1027": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1028": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1328
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1029": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1031": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1033": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1328
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1034": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1035": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1328
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1036": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1038": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1328
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1039": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1328
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1040": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1328
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1041": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1042": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1043": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1336
      ],
      "op": "AND",
      "path": "2"
    },
    "1044": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1045": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1336
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1046": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1047": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1336
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1048": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1336
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1049": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1336
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1050": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1336
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1051": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1336
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1052": {
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1336
      ],
      "op": "AND",
      "path": "2"
    },
    "1053": {
      "branch": 20,
      "fn": "Factory.createPair",
      "offset": [
        1315,
        1350
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1054": {
      "fn": "Factory.createPair",
      "offset": [
        1307,
        1377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x462"
    },
    "1057": {
      "branch": 20,
      "fn": "Factory.createPair",
      "offset": [
        1307,
        1377
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1058": {
      "fn": "Factory.createPair",
      "offset": [
        1307,
        1377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1060": {
      "fn": "Factory.createPair",
      "offset": [
        1307,
        1377
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1061": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1067": {
      "op": "SHL"
    },
    "1068": {
      "fn": "Factory.createPair",
      "offset": [
        1307,
        1377
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1069": {
      "fn": "Factory.createPair",
      "offset": [
        1307,
        1377
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1072": {
      "fn": "Factory.createPair",
      "offset": [
        1307,
        1377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1074": {
      "fn": "Factory.createPair",
      "offset": [
        1307,
        1377
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1075": {
      "fn": "Factory.createPair",
      "offset": [
        1307,
        1377
      ],
      "op": "ADD",
      "path": "2"
    },
    "1076": {
      "op": "MSTORE"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1081": {
      "op": "DUP3"
    },
    "1082": {
      "op": "ADD"
    },
    "1083": {
      "op": "MSTORE"
    },
    "1084": {
      "op": "PUSH22",
      "value": "0x556E697377617056323A20504149525F455849535453"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1109": {
      "op": "SHL"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1112": {
      "op": "DUP3"
    },
    "1113": {
      "op": "ADD"
    },
    "1114": {
      "op": "MSTORE"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1117": {
      "op": "ADD"
    },
    "1118": {
      "fn": "Factory.createPair",
      "offset": [
        1307,
        1377
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E5"
    },
    "1121": {
      "op": "JUMP"
    },
    "1122": {
      "fn": "Factory.createPair",
      "offset": [
        1307,
        1377
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1123": {
      "fn": "Factory.createPair",
      "offset": [
        1417,
        1438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1125": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1127": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1128": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1129": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1131": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "ADD",
      "path": "2"
    },
    "1132": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x474"
    },
    "1135": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1136": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6CB"
    },
    "1139": {
      "fn": "Factory.createPair",
      "jump": "i",
      "offset": [
        1441,
        1464
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1140": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1143": {
      "op": "NOT"
    },
    "1144": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1145": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1146": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "SUB",
      "path": "2"
    },
    "1147": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1148": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "ADD",
      "path": "2"
    },
    "1149": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1150": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1151": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1153": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1154": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1155": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "ADD",
      "path": "2"
    },
    "1156": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "AND",
      "path": "2"
    },
    "1157": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1159": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1160": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1161": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1162": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1175": {
      "op": "NOT"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1178": {
      "op": "DUP7"
    },
    "1179": {
      "op": "DUP2"
    },
    "1180": {
      "op": "SHL"
    },
    "1181": {
      "op": "DUP3"
    },
    "1182": {
      "op": "AND"
    },
    "1183": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1185": {
      "fn": "Factory.createPair",
      "offset": [
        1499,
        1531
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1186": {
      "fn": "Factory.createPair",
      "offset": [
        1499,
        1531
      ],
      "op": "ADD",
      "path": "2"
    },
    "1187": {
      "op": "MSTORE"
    },
    "1188": {
      "op": "DUP6"
    },
    "1189": {
      "op": "SWAP1"
    },
    "1190": {
      "op": "SHL"
    },
    "1191": {
      "op": "AND"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1194": {
      "op": "DUP3"
    },
    "1195": {
      "op": "ADD"
    },
    "1196": {
      "op": "MSTORE"
    },
    "1197": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1198": {
      "fn": "Factory.createPair",
      "offset": [
        1441,
        1464
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1199": {
      "op": "POP"
    },
    "1200": {
      "fn": "Factory.createPair",
      "offset": [
        1474,
        1486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1202": {
      "fn": "Factory.createPair",
      "offset": [
        1474,
        1486
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "1205": {
      "op": "ADD"
    },
    "1206": {
      "fn": "Factory.createPair",
      "offset": [
        1499,
        1531
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1208": {
      "fn": "Factory.createPair",
      "offset": [
        1499,
        1531
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1209": {
      "fn": "Factory.createPair",
      "offset": [
        1499,
        1531
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1211": {
      "fn": "Factory.createPair",
      "offset": [
        1499,
        1531
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1212": {
      "fn": "Factory.createPair",
      "offset": [
        1499,
        1531
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1213": {
      "fn": "Factory.createPair",
      "offset": [
        1499,
        1531
      ],
      "op": "SUB",
      "path": "2"
    },
    "1214": {
      "fn": "Factory.createPair",
      "offset": [
        1499,
        1531
      ],
      "op": "SUB",
      "path": "2"
    },
    "1215": {
      "fn": "Factory.createPair",
      "offset": [
        1499,
        1531
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1216": {
      "fn": "Factory.createPair",
      "offset": [
        1499,
        1531
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1217": {
      "fn": "Factory.createPair",
      "offset": [
        1499,
        1531
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1218": {
      "fn": "Factory.createPair",
      "offset": [
        1499,
        1531
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1220": {
      "fn": "Factory.createPair",
      "offset": [
        1499,
        1531
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1221": {
      "fn": "Factory.createPair",
      "offset": [
        1489,
        1532
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1222": {
      "fn": "Factory.createPair",
      "offset": [
        1489,
        1532
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1223": {
      "fn": "Factory.createPair",
      "offset": [
        1489,
        1532
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1224": {
      "fn": "Factory.createPair",
      "offset": [
        1489,
        1532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1226": {
      "fn": "Factory.createPair",
      "offset": [
        1489,
        1532
      ],
      "op": "ADD",
      "path": "2"
    },
    "1227": {
      "fn": "Factory.createPair",
      "offset": [
        1489,
        1532
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1228": {
      "fn": "Factory.createPair",
      "offset": [
        1474,
        1532
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1229": {
      "fn": "Factory.createPair",
      "offset": [
        1474,
        1532
      ],
      "op": "POP",
      "path": "2"
    },
    "1230": {
      "fn": "Factory.createPair",
      "offset": [
        1622,
        1626
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1231": {
      "fn": "Factory.createPair",
      "offset": [
        1611,
        1619
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1232": {
      "fn": "Factory.createPair",
      "offset": [
        1605,
        1620
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1233": {
      "fn": "Factory.createPair",
      "offset": [
        1598,
        1602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1235": {
      "fn": "Factory.createPair",
      "offset": [
        1588,
        1596
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1236": {
      "fn": "Factory.createPair",
      "offset": [
        1584,
        1603
      ],
      "op": "ADD",
      "path": "2"
    },
    "1237": {
      "fn": "Factory.createPair",
      "offset": [
        1581,
        1582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1239": {
      "fn": "Factory.createPair",
      "offset": [
        1573,
        1627
      ],
      "op": "CREATE2",
      "path": "2"
    },
    "1240": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x40"
    },
    "1242": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1243": {
      "op": "PUSH4",
      "value": "0x485CC955"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1250": {
      "op": "SHL"
    },
    "1251": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1252": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1259": {
      "op": "SHL"
    },
    "1260": {
      "op": "SUB"
    },
    "1261": {
      "op": "DUP7"
    },
    "1262": {
      "op": "DUP2"
    },
    "1263": {
      "op": "AND"
    },
    "1264": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1266": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1267": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "ADD",
      "path": "2"
    },
    "1268": {
      "op": "MSTORE"
    },
    "1269": {
      "op": "DUP6"
    },
    "1270": {
      "op": "DUP2"
    },
    "1271": {
      "op": "AND"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1274": {
      "op": "DUP4"
    },
    "1275": {
      "op": "ADD"
    },
    "1276": {
      "op": "MSTORE"
    },
    "1277": {
      "fn": "Factory.createPair",
      "offset": [
        1565,
        1627
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1278": {
      "fn": "Factory.createPair",
      "offset": [
        1565,
        1627
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "1279": {
      "op": "POP"
    },
    "1280": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1668
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1281": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1668
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1282": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1668
      ],
      "op": "AND",
      "path": "2"
    },
    "1283": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1668
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1284": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1668
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x485CC955"
    },
    "1289": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1668
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1292": {
      "op": "ADD"
    },
    "1293": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1295": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1297": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1298": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1299": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1300": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "SUB",
      "path": "2"
    },
    "1301": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1302": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1304": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1305": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1306": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1307": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1308": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1309": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1310": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x526"
    },
    "1313": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1314": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1316": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1317": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1318": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1319": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "POP",
      "path": "2"
    },
    "1320": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "GAS",
      "path": "2"
    },
    "1321": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "CALL",
      "path": "2"
    },
    "1322": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1323": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1324": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1325": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x53A"
    },
    "1328": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1329": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1330": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1332": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1333": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1334": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1335": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1337": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1338": {
      "fn": "Factory.createPair",
      "offset": [
        1646,
        1684
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1339": {
      "op": "POP"
    },
    "1340": {
      "op": "POP"
    },
    "1341": {
      "op": "POP"
    },
    "1342": {
      "op": "POP"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1349": {
      "op": "SHL"
    },
    "1350": {
      "op": "SUB"
    },
    "1351": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1707
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 10
    },
    "1352": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1353": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1707
      ],
      "op": "AND",
      "path": "2"
    },
    "1354": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1356": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1357": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1358": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1707
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1359": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1361": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1363": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1364": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1365": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1707
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1366": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1368": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1707
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1369": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1707
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1370": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1707
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1371": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1715
      ],
      "op": "DUP10",
      "path": "2"
    },
    "1372": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1715
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1373": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1715
      ],
      "op": "AND",
      "path": "2"
    },
    "1374": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1375": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1715
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1376": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1715
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1377": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1715
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1378": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1715
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1379": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1715
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1380": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1715
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1381": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1715
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1382": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1715
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1383": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1722
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1384": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1722
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1385": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1722
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "1386": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1722
      ],
      "op": "DUP14",
      "path": "2"
    },
    "1387": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1722
      ],
      "op": "AND",
      "path": "2"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "op": "SUB"
    },
    "1396": {
      "op": "NOT"
    },
    "1397": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1722
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "1398": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1722
      ],
      "op": "DUP10",
      "path": "2"
    },
    "1399": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1722
      ],
      "op": "AND",
      "path": "2"
    },
    "1400": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1722
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1401": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1722
      ],
      "op": "OR",
      "path": "2"
    },
    "1402": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1722
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1403": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1722
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1404": {
      "fn": "Factory.createPair",
      "offset": [
        1694,
        1722
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1405": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1745
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 11
    },
    "1406": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1745
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1407": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1745
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1408": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1745
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1409": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1745
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1410": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1745
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1411": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1753
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1412": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1753
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1413": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1753
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1414": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1753
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1415": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1753
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1416": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1753
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1417": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1753
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1418": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1753
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1419": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1420": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1760
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1421": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1760
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1422": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1760
      ],
      "op": "AND",
      "path": "2"
    },
    "1423": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1760
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1424": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1760
      ],
      "op": "OR",
      "path": "2"
    },
    "1425": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1760
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1426": {
      "fn": "Factory.createPair",
      "offset": [
        1732,
        1760
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1427": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1824
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x3"
    },
    "1429": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1430": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1433": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1434": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "ADD",
      "path": "2"
    },
    "1435": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1436": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1437": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "1438": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1439": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1440": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1441": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "1474": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1475": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "1476": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "ADD",
      "path": "2"
    },
    "1477": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1478": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1479": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1480": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "1481": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "AND",
      "path": "2"
    },
    "1482": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1483": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "OR",
      "path": "2"
    },
    "1484": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1485": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "1486": {
      "fn": "Factory.createPair",
      "offset": [
        1815,
        1835
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1487": {
      "fn": "Factory.createPair",
      "offset": [
        1884,
        1900
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 13
    },
    "1488": {
      "fn": "Factory.createPair",
      "offset": [
        1884,
        1900
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1489": {
      "fn": "Factory.createPair",
      "offset": [
        1850,
        1901
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1490": {
      "fn": "Factory.createPair",
      "offset": [
        1850,
        1901
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1491": {
      "op": "SWAP3"
    },
    "1492": {
      "op": "DUP4"
    },
    "1493": {
      "op": "MSTORE"
    },
    "1494": {
      "op": "SWAP1"
    },
    "1495": {
      "op": "DUP3"
    },
    "1496": {
      "op": "ADD"
    },
    "1497": {
      "op": "MSTORE"
    },
    "1498": {
      "fn": "Factory.createPair",
      "offset": [
        1850,
        1901
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xD3648BD0F6BA80134A33BA9275AC585D9D315F0AD8355CDDEFDE31AFA28D0E9"
    },
    "1531": {
      "fn": "Factory.createPair",
      "offset": [
        1850,
        1901
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1532": {
      "op": "ADD"
    },
    "1533": {
      "fn": "Factory.createPair",
      "offset": [
        1850,
        1901
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1535": {
      "fn": "Factory.createPair",
      "offset": [
        1850,
        1901
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1536": {
      "fn": "Factory.createPair",
      "offset": [
        1850,
        1901
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1537": {
      "fn": "Factory.createPair",
      "offset": [
        1850,
        1901
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1538": {
      "fn": "Factory.createPair",
      "offset": [
        1850,
        1901
      ],
      "op": "SUB",
      "path": "2"
    },
    "1539": {
      "fn": "Factory.createPair",
      "offset": [
        1850,
        1901
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1540": {
      "fn": "Factory.createPair",
      "offset": [
        1850,
        1901
      ],
      "op": "LOG3",
      "path": "2"
    },
    "1541": {
      "fn": "Factory.createPair",
      "offset": [
        1064,
        1908
      ],
      "op": "POP",
      "path": "2"
    },
    "1542": {
      "fn": "Factory.createPair",
      "offset": [
        1064,
        1908
      ],
      "op": "POP",
      "path": "2"
    },
    "1543": {
      "fn": "Factory.createPair",
      "offset": [
        1064,
        1908
      ],
      "op": "POP",
      "path": "2"
    },
    "1544": {
      "fn": "Factory.createPair",
      "offset": [
        1064,
        1908
      ],
      "op": "POP",
      "path": "2"
    },
    "1545": {
      "fn": "Factory.createPair",
      "offset": [
        980,
        1908
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1546": {
      "fn": "Factory.createPair",
      "offset": [
        980,
        1908
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1547": {
      "fn": "Factory.createPair",
      "offset": [
        980,
        1908
      ],
      "op": "POP",
      "path": "2"
    },
    "1548": {
      "fn": "Factory.createPair",
      "offset": [
        980,
        1908
      ],
      "op": "POP",
      "path": "2"
    },
    "1549": {
      "fn": "Factory.createPair",
      "jump": "o",
      "offset": [
        980,
        1908
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1550": {
      "offset": [
        254,
        342
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1551": {
      "offset": [
        317,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1553": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1554": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61D"
    },
    "1557": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1559": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1560": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "ADD",
      "path": "2"
    },
    "1561": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6CB"
    },
    "1564": {
      "fn": "Factory.createPair",
      "jump": "i",
      "offset": [
        317,
        340
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1565": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1568": {
      "op": "NOT"
    },
    "1569": {
      "offset": [
        317,
        340
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1570": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1571": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "SUB",
      "path": "2"
    },
    "1572": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1573": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "ADD",
      "path": "2"
    },
    "1574": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1575": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1576": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1578": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1579": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1580": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "ADD",
      "path": "2"
    },
    "1581": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "AND",
      "path": "2"
    },
    "1582": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1584": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1585": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1586": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1587": {
      "offset": [
        300,
        341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x63F"
    },
    "1590": {
      "fn": "Factory.createPair",
      "offset": [
        300,
        341
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1591": {
      "offset": [
        317,
        340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1592": {
      "fn": "Factory.createPair",
      "offset": [
        317,
        340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1594": {
      "offset": [
        300,
        341
      ],
      "op": "ADD",
      "path": "2"
    },
    "1595": {
      "fn": "Factory.createPair",
      "offset": [
        300,
        341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x778"
    },
    "1598": {
      "fn": "Factory.createPair",
      "jump": "i",
      "offset": [
        300,
        341
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1599": {
      "fn": "Factory.createPair",
      "offset": [
        300,
        341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1600": {
      "fn": "Factory.createPair",
      "offset": [
        300,
        341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1602": {
      "fn": "Factory.createPair",
      "offset": [
        300,
        341
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1603": {
      "fn": "Factory.createPair",
      "offset": [
        300,
        341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1605": {
      "fn": "Factory.createPair",
      "offset": [
        300,
        341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1606": {
      "fn": "Factory.createPair",
      "offset": [
        300,
        341
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1607": {
      "fn": "Factory.createPair",
      "offset": [
        300,
        341
      ],
      "op": "SUB",
      "path": "2"
    },
    "1608": {
      "fn": "Factory.createPair",
      "offset": [
        300,
        341
      ],
      "op": "SUB",
      "path": "2"
    },
    "1609": {
      "fn": "Factory.createPair",
      "offset": [
        300,
        341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1610": {
      "fn": "Factory.createPair",
      "offset": [
        300,
        341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1611": {
      "fn": "Factory.createPair",
      "offset": [
        300,
        341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1612": {
      "fn": "Factory.createPair",
      "offset": [
        300,
        341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1614": {
      "fn": "Factory.createPair",
      "offset": [
        300,
        341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1615": {
      "offset": [
        290,
        342
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1616": {
      "fn": "Factory.createPair",
      "offset": [
        290,
        342
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1617": {
      "fn": "Factory.createPair",
      "offset": [
        290,
        342
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1618": {
      "fn": "Factory.createPair",
      "offset": [
        290,
        342
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1620": {
      "fn": "Factory.createPair",
      "offset": [
        290,
        342
      ],
      "op": "ADD",
      "path": "2"
    },
    "1621": {
      "fn": "Factory.createPair",
      "offset": [
        290,
        342
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1622": {
      "offset": [
        254,
        342
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1623": {
      "fn": "Factory.createPair",
      "jump": "o",
      "offset": [
        254,
        342
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1624": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1914,
        2056
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1625": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1989,
        2000
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0x1"
    },
    "1627": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1989,
        2000
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "op": "SUB"
    },
    "1636": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1989,
        2000
      ],
      "op": "AND",
      "path": "2"
    },
    "1637": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1975,
        1985
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1638": {
      "branch": 21,
      "fn": "Factory.setFeeTo",
      "offset": [
        1975,
        2000
      ],
      "op": "EQ",
      "path": "2"
    },
    "1639": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1967,
        2025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A9"
    },
    "1642": {
      "branch": 21,
      "fn": "Factory.setFeeTo",
      "offset": [
        1967,
        2025
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1643": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1967,
        2025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1645": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1967,
        2025
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1646": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1652": {
      "op": "SHL"
    },
    "1653": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1967,
        2025
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1654": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1967,
        2025
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1657": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1967,
        2025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1659": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1967,
        2025
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1660": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1967,
        2025
      ],
      "op": "ADD",
      "path": "2"
    },
    "1661": {
      "op": "MSTORE"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1666": {
      "op": "DUP3"
    },
    "1667": {
      "op": "ADD"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "op": "PUSH20",
      "value": "0x2AB734B9BBB0B82B191D102327A92124A22222A7"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "1692": {
      "op": "SHL"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1695": {
      "op": "DUP3"
    },
    "1696": {
      "op": "ADD"
    },
    "1697": {
      "op": "MSTORE"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1700": {
      "op": "ADD"
    },
    "1701": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1967,
        2025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E5"
    },
    "1704": {
      "op": "JUMP"
    },
    "1705": {
      "fn": "Factory.setFeeTo",
      "offset": [
        1967,
        2025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1706": {
      "fn": "Factory.setFeeTo",
      "offset": [
        2035,
        2040
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 15,
      "value": "0x0"
    },
    "1708": {
      "fn": "Factory.setFeeTo",
      "offset": [
        2035,
        2049
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1709": {
      "fn": "Factory.setFeeTo",
      "offset": [
        2035,
        2049
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1716": {
      "op": "SHL"
    },
    "1717": {
      "op": "SUB"
    },
    "1718": {
      "op": "NOT"
    },
    "1719": {
      "fn": "Factory.setFeeTo",
      "offset": [
        2035,
        2049
      ],
      "op": "AND",
      "path": "2"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1726": {
      "op": "SHL"
    },
    "1727": {
      "op": "SUB"
    },
    "1728": {
      "fn": "Factory.setFeeTo",
      "offset": [
        2035,
        2049
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1729": {
      "fn": "Factory.setFeeTo",
      "offset": [
        2035,
        2049
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1730": {
      "fn": "Factory.setFeeTo",
      "offset": [
        2035,
        2049
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1731": {
      "fn": "Factory.setFeeTo",
      "offset": [
        2035,
        2049
      ],
      "op": "AND",
      "path": "2"
    },
    "1732": {
      "fn": "Factory.setFeeTo",
      "offset": [
        2035,
        2049
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1733": {
      "fn": "Factory.setFeeTo",
      "offset": [
        2035,
        2049
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1734": {
      "fn": "Factory.setFeeTo",
      "offset": [
        2035,
        2049
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1735": {
      "fn": "Factory.setFeeTo",
      "offset": [
        2035,
        2049
      ],
      "op": "OR",
      "path": "2"
    },
    "1736": {
      "fn": "Factory.setFeeTo",
      "offset": [
        2035,
        2049
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1737": {
      "fn": "Factory.setFeeTo",
      "offset": [
        2035,
        2049
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1738": {
      "fn": "Factory.setFeeTo",
      "jump": "o",
      "offset": [
        1914,
        2056
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1739": {
      "op": "JUMPDEST"
    },
    "1740": {
      "op": "PUSH2",
      "value": "0x22A2"
    },
    "1743": {
      "op": "DUP1"
    },
    "1744": {
      "op": "PUSH2",
      "value": "0x7B4"
    },
    "1747": {
      "op": "DUP4"
    },
    "1748": {
      "op": "CODECOPY"
    },
    "1749": {
      "op": "ADD"
    },
    "1750": {
      "op": "SWAP1"
    },
    "1751": {
      "jump": "o",
      "op": "JUMP"
    },
    "1752": {
      "op": "JUMPDEST"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1757": {
      "op": "DUP3"
    },
    "1758": {
      "op": "DUP5"
    },
    "1759": {
      "op": "SUB"
    },
    "1760": {
      "op": "SLT"
    },
    "1761": {
      "op": "ISZERO"
    },
    "1762": {
      "op": "PUSH2",
      "value": "0x6EA"
    },
    "1765": {
      "op": "JUMPI"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1768": {
      "op": "DUP1"
    },
    "1769": {
      "op": "REVERT"
    },
    "1770": {
      "op": "JUMPDEST"
    },
    "1771": {
      "op": "POP"
    },
    "1772": {
      "op": "CALLDATALOAD"
    },
    "1773": {
      "op": "SWAP2"
    },
    "1774": {
      "op": "SWAP1"
    },
    "1775": {
      "op": "POP"
    },
    "1776": {
      "jump": "o",
      "op": "JUMP"
    },
    "1777": {
      "op": "JUMPDEST"
    },
    "1778": {
      "op": "DUP1"
    },
    "1779": {
      "op": "CALLDATALOAD"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1786": {
      "op": "SHL"
    },
    "1787": {
      "op": "SUB"
    },
    "1788": {
      "op": "DUP2"
    },
    "1789": {
      "op": "AND"
    },
    "1790": {
      "op": "DUP2"
    },
    "1791": {
      "op": "EQ"
    },
    "1792": {
      "op": "PUSH2",
      "value": "0x708"
    },
    "1795": {
      "op": "JUMPI"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1798": {
      "op": "DUP1"
    },
    "1799": {
      "op": "REVERT"
    },
    "1800": {
      "op": "JUMPDEST"
    },
    "1801": {
      "op": "SWAP2"
    },
    "1802": {
      "op": "SWAP1"
    },
    "1803": {
      "op": "POP"
    },
    "1804": {
      "jump": "o",
      "op": "JUMP"
    },
    "1805": {
      "op": "JUMPDEST"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1810": {
      "op": "DUP3"
    },
    "1811": {
      "op": "DUP5"
    },
    "1812": {
      "op": "SUB"
    },
    "1813": {
      "op": "SLT"
    },
    "1814": {
      "op": "ISZERO"
    },
    "1815": {
      "op": "PUSH2",
      "value": "0x71F"
    },
    "1818": {
      "op": "JUMPI"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1821": {
      "op": "DUP1"
    },
    "1822": {
      "op": "REVERT"
    },
    "1823": {
      "op": "JUMPDEST"
    },
    "1824": {
      "op": "PUSH2",
      "value": "0x728"
    },
    "1827": {
      "op": "DUP3"
    },
    "1828": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "1831": {
      "jump": "i",
      "op": "JUMP"
    },
    "1832": {
      "op": "JUMPDEST"
    },
    "1833": {
      "op": "SWAP4"
    },
    "1834": {
      "op": "SWAP3"
    },
    "1835": {
      "op": "POP"
    },
    "1836": {
      "op": "POP"
    },
    "1837": {
      "op": "POP"
    },
    "1838": {
      "jump": "o",
      "op": "JUMP"
    },
    "1839": {
      "op": "JUMPDEST"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1842": {
      "op": "DUP1"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1845": {
      "op": "DUP4"
    },
    "1846": {
      "op": "DUP6"
    },
    "1847": {
      "op": "SUB"
    },
    "1848": {
      "op": "SLT"
    },
    "1849": {
      "op": "ISZERO"
    },
    "1850": {
      "op": "PUSH2",
      "value": "0x742"
    },
    "1853": {
      "op": "JUMPI"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1856": {
      "op": "DUP1"
    },
    "1857": {
      "op": "REVERT"
    },
    "1858": {
      "op": "JUMPDEST"
    },
    "1859": {
      "op": "PUSH2",
      "value": "0x74B"
    },
    "1862": {
      "op": "DUP4"
    },
    "1863": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "1866": {
      "jump": "i",
      "op": "JUMP"
    },
    "1867": {
      "op": "JUMPDEST"
    },
    "1868": {
      "op": "SWAP2"
    },
    "1869": {
      "op": "POP"
    },
    "1870": {
      "op": "PUSH2",
      "value": "0x759"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1875": {
      "op": "DUP5"
    },
    "1876": {
      "op": "ADD"
    },
    "1877": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "1880": {
      "jump": "i",
      "op": "JUMP"
    },
    "1881": {
      "op": "JUMPDEST"
    },
    "1882": {
      "op": "SWAP1"
    },
    "1883": {
      "op": "POP"
    },
    "1884": {
      "op": "SWAP3"
    },
    "1885": {
      "op": "POP"
    },
    "1886": {
      "op": "SWAP3"
    },
    "1887": {
      "op": "SWAP1"
    },
    "1888": {
      "op": "POP"
    },
    "1889": {
      "jump": "o",
      "op": "JUMP"
    },
    "1890": {
      "op": "JUMPDEST"
    },
    "1891": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1898": {
      "op": "SHL"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1901": {
      "op": "MSTORE"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1906": {
      "op": "MSTORE"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1911": {
      "op": "REVERT"
    },
    "1912": {
      "op": "JUMPDEST"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1915": {
      "op": "DUP3"
    },
    "1916": {
      "op": "MLOAD"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1919": {
      "op": "JUMPDEST"
    },
    "1920": {
      "op": "DUP2"
    },
    "1921": {
      "op": "DUP2"
    },
    "1922": {
      "op": "LT"
    },
    "1923": {
      "op": "ISZERO"
    },
    "1924": {
      "op": "PUSH2",
      "value": "0x799"
    },
    "1927": {
      "op": "JUMPI"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1930": {
      "op": "DUP2"
    },
    "1931": {
      "op": "DUP7"
    },
    "1932": {
      "op": "ADD"
    },
    "1933": {
      "op": "DUP2"
    },
    "1934": {
      "op": "ADD"
    },
    "1935": {
      "op": "MLOAD"
    },
    "1936": {
      "op": "DUP6"
    },
    "1937": {
      "op": "DUP4"
    },
    "1938": {
      "op": "ADD"
    },
    "1939": {
      "op": "MSTORE"
    },
    "1940": {
      "op": "ADD"
    },
    "1941": {
      "op": "PUSH2",
      "value": "0x77F"
    },
    "1944": {
      "op": "JUMP"
    },
    "1945": {
      "op": "JUMPDEST"
    },
    "1946": {
      "op": "DUP2"
    },
    "1947": {
      "op": "DUP2"
    },
    "1948": {
      "op": "GT"
    },
    "1949": {
      "op": "ISZERO"
    },
    "1950": {
      "op": "PUSH2",
      "value": "0x7A8"
    },
    "1953": {
      "op": "JUMPI"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1956": {
      "op": "DUP3"
    },
    "1957": {
      "op": "DUP6"
    },
    "1958": {
      "op": "ADD"
    },
    "1959": {
      "op": "MSTORE"
    },
    "1960": {
      "op": "JUMPDEST"
    },
    "1961": {
      "op": "POP"
    },
    "1962": {
      "op": "SWAP2"
    },
    "1963": {
      "op": "SWAP1"
    },
    "1964": {
      "op": "SWAP2"
    },
    "1965": {
      "op": "ADD"
    },
    "1966": {
      "op": "SWAP3"
    },
    "1967": {
      "op": "SWAP2"
    },
    "1968": {
      "op": "POP"
    },
    "1969": {
      "op": "POP"
    },
    "1970": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "109cf792c4dbb631743a7bee4de82c6ef48b63f9",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\n\n\n\nimport '../interfaces/IFactory.sol';\nimport '../interfaces/IPair.sol';\nimport './Pair.sol';\n\n\ncontract Factory is IFactory {\n    address public feeTo;\n    address public feeToSetter;\n    bytes32 public constant INIT_CODE = keccak256(abi.encodePacked(type(Pair).creationCode));\n\n    mapping(address => mapping(address => address)) public Pairs;\n    address[] public pairsList;\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    function INIT_CODE_HASH() external pure returns (bytes32) {\n        return INIT_CODE;\n    }\n    function getPair (address tokenA, address tokenB) external view returns (address pair) {\n        pair = Pairs[tokenA][tokenB];\n    }\n\n    function allPairs (uint index) external view returns (address pair) {\n        pair = pairsList[index];\n    }\n\n    function allPairsLength() external view returns (uint) {\n        return pairsList.length;\n    }\n\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\n        require(tokenA != tokenB, 'UniswapV2: IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'UniswapV2: ZERO_ADDRESS');\n        require(Pairs[token0][token1] == address(0), 'UniswapV2: PAIR_EXISTS'); // single check is sufficient\n        bytes memory bytecode = type(Pair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 0x20), mload(bytecode), salt)\n        }\n        IPair(pair).initialize(token0, token1);\n        Pairs[token0][token1] = pair;\n        Pairs[token1][token0] = pair; // populate mapping in the reverse direction\n        pairsList.push(pair);\n        emit PairCreated(token0, token1, pair, pairsList.length);\n    }\n\n    function setFeeTo(address _feeTo) external {\n        require(msg.sender == feeToSetter, 'UniswapV2: FORBIDDEN');\n        feeTo = _feeTo;\n    }\n\n\n    function setFeeToSetter(address _feeToSetter) external {\n        require(msg.sender == feeToSetter, 'UniswapV2: FORBIDDEN');\n        feeToSetter = _feeToSetter;\n    }\n}",
  "sourceMap": "161:2070:2:-:0;;;448:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;492:11;:26;;-1:-1:-1;;;;;;492:26:2;-1:-1:-1;;;;;492:26:2;;;;;;;;;;161:2070;;14:290:11;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:11;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:11:o;:::-;161:2070:2;;;;;;",
  "sourcePath": "contracts/Factory.sol",
  "type": "contract"
}