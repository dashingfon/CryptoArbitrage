{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "exchange",
          "type": "address"
        }
      ],
      "name": "CaleeResponse",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Gain",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "Token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        }
      ],
      "name": "arbSuccesful",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "Token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferSent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_method",
          "type": "bool"
        }
      ],
      "name": "changeCashout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sendCoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAdd",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reciepient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sendToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "skimPair",
          "type": "address"
        }
      ],
      "name": "skim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "start",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "unpack",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "dataAddrs",
          "type": "bytes[]"
        },
        {
          "internalType": "address",
          "name": "pairAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Mfon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol",
    "1": "C:/Users/Mfon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/math/SafeMath.sol",
    "2": "contracts/ArbV1.sol",
    "6": "interfaces/IPair.sol"
  },
  "ast": {
    "absolutePath": "contracts/ArbV1.sol",
    "exportedSymbols": {
      "ArbV1": [
        456
      ],
      "IERC20": [
        1082
      ],
      "IFactory": [
        1457
      ],
      "IPair": [
        1592
      ],
      "SafeMath": [
        1394
      ]
    },
    "id": 457,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:2"
      },
      {
        "absolutePath": "interfaces/IFactory.sol",
        "file": "../interfaces/IFactory.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 457,
        "sourceUnit": 1458,
        "src": "65:36:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IPair.sol",
        "file": "../interfaces/IPair.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 457,
        "sourceUnit": 1593,
        "src": "102:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Mfon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 457,
        "sourceUnit": 1395,
        "src": "136:57:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Mfon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 457,
        "sourceUnit": 1083,
        "src": "194:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ArbV1",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 456,
        "linearizedBaseContracts": [
          456
        ],
        "name": "ArbV1",
        "nameLocation": "262:5:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 8,
            "libraryName": {
              "id": 6,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1394,
              "src": "285:8:2"
            },
            "nodeType": "UsingForDirective",
            "src": "279:24:2",
            "typeName": {
              "id": 7,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "298:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 10,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "324:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 456,
            "src": "309:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "309:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "352:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 456,
            "src": "335:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "335:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 14,
            "mutability": "mutable",
            "name": "instantCashout",
            "nameLocation": "377:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 456,
            "src": "363:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 13,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "363:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "balance",
            "nameLocation": "411:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 456,
            "src": "397:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "397:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "f1f6f2cd70edad69b7e9b884a3141e6c6814d3bda57d1989684f625aef2f9204",
            "id": 24,
            "name": "arbSuccesful",
            "nameLocation": "431:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Gain",
                  "nameLocation": "450:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "445:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Token",
                  "nameLocation": "464:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "456:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initiator",
                  "nameLocation": "479:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "471:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "444:45:2"
            },
            "src": "425:65:2"
          },
          {
            "anonymous": false,
            "eventSelector": "81ff37c0a846f0fa29fd65bc885ac344052231414004d0e16a59678c4018b3a3",
            "id": 30,
            "name": "transferSent",
            "nameLocation": "501:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Token",
                  "nameLocation": "523:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "515:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "538:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "530:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "514:27:2"
            },
            "src": "495:47:2"
          },
          {
            "anonymous": false,
            "eventSelector": "e6721a7a09bf2789e54804e7e36bceb8bf71e370eafc03b486c7f706a50b0c83",
            "id": 36,
            "name": "CaleeResponse",
            "nameLocation": "553:13:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "573:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "568:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "568:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "exchange",
                  "nameLocation": "589:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "581:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "567:31:2"
            },
            "src": "547:52:2"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "627:56:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "645:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 40,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "654:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "654:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "645:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 38,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "637:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "637:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "637:28:2"
                },
                {
                  "id": 45,
                  "nodeType": "PlaceholderStatement",
                  "src": "675:1:2"
                }
              ]
            },
            "id": 47,
            "name": "OnlyOwner",
            "nameLocation": "614:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "624:2:2"
            },
            "src": "605:78:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "704:67:2",
              "statements": [
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "714:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 51,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "722:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "722:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "714:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "714:18:2"
                },
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55,
                      "name": "instantCashout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "742:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "759:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "742:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "742:22:2"
                }
              ]
            },
            "id": 60,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "701:2:2"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "704:0:2"
            },
            "scope": 456,
            "src": "689:82:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "896:359:2",
              "statements": [
                {
                  "assignments": [
                    null,
                    null,
                    72,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 72,
                      "mutability": "mutable",
                      "name": "tokensPair",
                      "nameLocation": "923:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 123,
                      "src": "915:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 71,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "915:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 76,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 74,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "952:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 73,
                      "name": "unpack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "945:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (bytes memory) pure returns (address[] memory,bytes memory[] memory,address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "945:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address[] memory,bytes memory[] memory,address,address,address,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "910:47:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 78,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "980:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 80,
                                    "name": "tokensPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72,
                                    "src": "996:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 79,
                                  "name": "IPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1592,
                                  "src": "990:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IPair_$1592_$",
                                    "typeString": "type(contract IPair)"
                                  }
                                },
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "990:17:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$1592",
                                  "typeString": "contract IPair"
                                }
                              },
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token0",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1542,
                              "src": "990:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "990:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "980:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 85,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "1020:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 87,
                                    "name": "tokensPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72,
                                    "src": "1036:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 86,
                                  "name": "IPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1592,
                                  "src": "1030:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IPair_$1592_$",
                                    "typeString": "type(contract IPair)"
                                  }
                                },
                                "id": 88,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1030:17:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$1592",
                                  "typeString": "contract IPair"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1547,
                              "src": "1030:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1030:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1020:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "980:76:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374205061697220666f7220746f6b656e",
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1058:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_babab38959d8841be3ce0f0eeb1994c964824f4b9e80a6e74a7b2e2f3e67802c",
                          "typeString": "literal_string \"Incorrect Pair for token\""
                        },
                        "value": "Incorrect Pair for token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_babab38959d8841be3ce0f0eeb1994c964824f4b9e80a6e74a7b2e2f3e67802c",
                          "typeString": "literal_string \"Incorrect Pair for token\""
                        }
                      ],
                      "id": 77,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "972:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "972:113:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "972:113:2"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1099:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 97,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1107:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1099:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1099:14:2"
                },
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1127:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 107,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1169:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ArbV1_$456",
                                "typeString": "contract ArbV1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ArbV1_$456",
                                "typeString": "contract ArbV1"
                              }
                            ],
                            "id": 106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1161:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 105,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1161:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1161:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 102,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "1144:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 101,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1082,
                            "src": "1137:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$1082_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1137:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1082",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1021,
                        "src": "1137:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1137:38:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1127:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1127:48:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 116,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "1212:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 117,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1220:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1228:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1228:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 120,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "1239:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 113,
                            "name": "tokensPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "1195:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 112,
                          "name": "IPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1592,
                          "src": "1189:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPair_$1592_$",
                            "typeString": "type(contract IPair)"
                          }
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1189:17:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPair_$1592",
                          "typeString": "contract IPair"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1583,
                      "src": "1189:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address,bytes memory) external"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:55:2"
                }
              ]
            },
            "functionSelector": "10f2aa41",
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "start",
            "nameLocation": "786:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "807:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "802:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "829:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "824:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "854:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "846:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "883:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "870:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "792:96:2"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "896:0:2"
            },
            "scope": 456,
            "src": "777:478:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "1464:182:2",
              "statements": [
                {
                  "expression": {
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 145,
                          "name": "addresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "1488:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 146,
                          "name": "dataAddrs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "1499:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        },
                        {
                          "id": 147,
                          "name": "pairAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "1510:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 148,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 137,
                          "src": "1522:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 149,
                          "name": "initiator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "1530:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 150,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "1540:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 151,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 143,
                          "src": "1548:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 152,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1487:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(address[] memory,bytes memory[] memory,address,address,address,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 155,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "1579:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "baseExpression": {
                                "id": 157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1586:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 156,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1586:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1586:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                                "typeString": "type(address[] memory)"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1596:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 159,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1596:5:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1596:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "type(bytes memory[] memory)"
                              }
                            },
                            {
                              "id": 163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1604:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 162,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1604:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            {
                              "id": 165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1612:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 164,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1612:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            {
                              "id": 167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1620:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 166,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1620:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            {
                              "id": 169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1628:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 168,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1628:4:2",
                                "typeDescriptions": {}
                              }
                            },
                            {
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1633:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 170,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1633:4:2",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 172,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1585:53:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                            "typeString": "tuple(type(address[] memory),type(bytes memory[] memory),type(address),type(address),type(address),type(uint256),type(uint256))"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                            "typeString": "tuple(type(address[] memory),type(bytes memory[] memory),type(address),type(address),type(address),type(uint256),type(uint256))"
                          }
                        ],
                        "expression": {
                          "id": 153,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "1555:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "1555:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1555:84:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(address[] memory,bytes memory[] memory,address payable,address payable,address payable,uint256,uint256)"
                      }
                    },
                    "src": "1487:152:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "1487:152:2"
                }
              ]
            },
            "functionSelector": "0017ea80",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpack",
            "nameLocation": "1270:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1291:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1278:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1277:19:2"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "1344:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1327:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 128,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1327:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 129,
                    "nodeType": "ArrayTypeName",
                    "src": "1327:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "dataAddrs",
                  "nameLocation": "1369:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1354:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 131,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1354:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 132,
                    "nodeType": "ArrayTypeName",
                    "src": "1354:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "pairAddress",
                  "nameLocation": "1387:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1379:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "1416:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1408:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "initiator",
                  "nameLocation": "1432:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1424:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1447:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1442:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1459:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1454:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1317:146:2"
            },
            "scope": 456,
            "src": "1261:385:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "1790:785:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 195,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 182,
                              "src": "1808:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1808:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1824:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1808:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 199,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 182,
                              "src": "1829:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1829:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 201,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 185,
                              "src": "1846:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1846:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1829:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1808:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f6e677275656e742061727261797321",
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1858:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aac95bced093ed71c90a62a4fecdd0631645108dd6d9b469b5fa3385c4ee5ec2",
                          "typeString": "literal_string \"incongruent arrays!\""
                        },
                        "value": "incongruent arrays!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aac95bced093ed71c90a62a4fecdd0631645108dd6d9b469b5fa3385c4ee5ec2",
                          "typeString": "literal_string \"incongruent arrays!\""
                        }
                      ],
                      "id": 194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1800:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1800:80:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "1800:80:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 209,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "1918:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 210,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1926:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1926:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 208,
                      "name": "CaleeResponse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1904:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1904:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "EmitStatement",
                  "src": "1899:38:2"
                },
                {
                  "body": {
                    "id": 240,
                    "nodeType": "Block",
                    "src": "1985:123:2",
                    "statements": [
                      {
                        "assignments": [
                          225,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 225,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2005:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 240,
                            "src": "2000:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 224,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2000:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 234,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 230,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 185,
                                "src": "2033:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "bytes memory[] memory"
                                }
                              },
                              "id": 232,
                              "indexExpression": {
                                "id": 231,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 215,
                                "src": "2038:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2033:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 226,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 182,
                                "src": "2018:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 228,
                              "indexExpression": {
                                "id": 227,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 215,
                                "src": "2025:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2018:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "2018:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2018:23:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1999:42:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 236,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "2063:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2065786563757465207377617021",
                              "id": 237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2071:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59bb75ae9854c0b4dea6f2fdf29cef46ec7a824f3233cc656ae0f46e015d87ef",
                                "typeString": "literal_string \"Failed to execute swap!\""
                              },
                              "value": "Failed to execute swap!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59bb75ae9854c0b4dea6f2fdf29cef46ec7a824f3233cc656ae0f46e015d87ef",
                                "typeString": "literal_string \"Failed to execute swap!\""
                              }
                            ],
                            "id": 235,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2055:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2055:42:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 239,
                        "nodeType": "ExpressionStatement",
                        "src": "2055:42:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 217,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "1961:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 218,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "1965:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1965:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1961:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 241,
                  "initializationExpression": {
                    "assignments": [
                      215
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 215,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1958:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 241,
                        "src": "1953:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1953:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 216,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1953:6:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1980:3:2",
                      "subExpression": {
                        "id": 221,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "1980:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 223,
                    "nodeType": "ExpressionStatement",
                    "src": "1980:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1948:160:2"
                },
                {
                  "assignments": [
                    243
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 243,
                      "mutability": "mutable",
                      "name": "amountGot",
                      "nameLocation": "2123:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 308,
                      "src": "2118:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 242,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2118:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 250,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2167:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArbV1_$456",
                              "typeString": "contract ArbV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ArbV1_$456",
                              "typeString": "contract ArbV1"
                            }
                          ],
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2159:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 248,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2159:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2159:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 245,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "2142:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 244,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1082,
                          "src": "2135:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1082_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2135:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1082",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1021,
                      "src": "2135:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2135:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2118:55:2"
                },
                {
                  "assignments": [
                    255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 255,
                      "mutability": "mutable",
                      "name": "amountExpected",
                      "nameLocation": "2188:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 308,
                      "src": "2183:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 254,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2183:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 266,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "313030303030",
                            "id": 263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2237:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 260,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 191,
                                "src": "2228:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 258,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 189,
                                "src": "2217:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1288,
                              "src": "2217:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2217:15:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1303,
                          "src": "2217:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2217:27:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 256,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2205:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1258,
                      "src": "2205:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2183:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 268,
                          "name": "amountGot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 243,
                          "src": "2264:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 269,
                          "name": "amountExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 255,
                          "src": "2276:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2264:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e73756363657366756c2041726221",
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2291:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35a59f1d98857a701795cbe727216d66e9ed64d45b5155ff76d0f156ed53eb34",
                          "typeString": "literal_string \"Unsuccesful Arb!\""
                        },
                        "value": "Unsuccesful Arb!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35a59f1d98857a701795cbe727216d66e9ed64d45b5155ff76d0f156ed53eb34",
                          "typeString": "literal_string \"Unsuccesful Arb!\""
                        }
                      ],
                      "id": 267,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2255:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2255:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "2255:55:2"
                },
                {
                  "assignments": [
                    275
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 275,
                      "mutability": "mutable",
                      "name": "gain",
                      "nameLocation": "2325:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 308,
                      "src": "2320:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 274,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2320:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 279,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 276,
                      "name": "amountGot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 243,
                      "src": "2332:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 277,
                      "name": "amountExpected",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "2344:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2332:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2320:38:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 281,
                        "name": "gain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "2386:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 282,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2391:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 283,
                        "name": "initiator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "2397:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 280,
                      "name": "arbSuccesful",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "2373:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address)"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2373:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 285,
                  "nodeType": "EmitStatement",
                  "src": "2368:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 287,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2437:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 288,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2444:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2444:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "313030303030",
                            "id": 295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2476:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 292,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 191,
                                "src": "2467:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 290,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 189,
                                "src": "2456:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1288,
                              "src": "2456:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2456:15:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1303,
                          "src": "2456:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2456:27:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 286,
                      "name": "_sendToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "2426:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2426:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "2426:58:2"
                },
                {
                  "condition": {
                    "id": 299,
                    "name": "instantCashout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "2499:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 307,
                  "nodeType": "IfStatement",
                  "src": "2495:74:2",
                  "trueBody": {
                    "id": 306,
                    "nodeType": "Block",
                    "src": "2515:54:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 301,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "2540:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 302,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 179,
                              "src": "2546:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 303,
                              "name": "gain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 275,
                              "src": "2553:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 300,
                            "name": "_sendToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 395,
                            "src": "2529:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2529:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 305,
                        "nodeType": "ExpressionStatement",
                        "src": "2529:29:2"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "1662:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1679:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "1671:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1671:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "1704:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "1687:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 180,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1687:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 181,
                    "nodeType": "ArrayTypeName",
                    "src": "1687:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1727:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "1712:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 183,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1712:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 184,
                    "nodeType": "ArrayTypeName",
                    "src": "1712:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "initiator",
                  "nameLocation": "1749:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "1741:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1741:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1764:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "1759:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1759:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1776:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "1771:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1771:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1670:110:2"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1790:0:2"
            },
            "scope": 456,
            "src": "1653:922:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 338,
              "nodeType": "Block",
              "src": "2648:162:2",
              "statements": [
                {
                  "assignments": [
                    317,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 317,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "2664:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 338,
                      "src": "2659:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 316,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2659:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 324,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2704:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 318,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "2674:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2674:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 320,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 313,
                          "src": "2696:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2674:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2674:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2658:49:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 326,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 317,
                        "src": "2725:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2731:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2717:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2717:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "2717:37:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2790:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2782:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 331,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2782:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2782:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 335,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "2793:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 330,
                      "name": "transferSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2769:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2769:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "EmitStatement",
                  "src": "2764:39:2"
                }
              ]
            },
            "id": 339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendCoin",
            "nameLocation": "2590:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2616:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "2600:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2600:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2632:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "2627:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2627:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2599:40:2"
            },
            "returnParameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2648:0:2"
            },
            "scope": 456,
            "src": "2581:229:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 353,
              "nodeType": "Block",
              "src": "2894:44:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 349,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "2914:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 350,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "2924:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 348,
                      "name": "_sendCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "2904:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2904:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "2904:27:2"
                }
              ]
            },
            "functionSelector": "90b98a11",
            "id": 354,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 346,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 345,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47,
                  "src": "2882:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2882:11:2"
              }
            ],
            "name": "sendCoin",
            "nameLocation": "2826:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2851:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "2835:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2835:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2867:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 354,
                  "src": "2862:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2862:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2834:40:2"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2894:0:2"
            },
            "scope": 456,
            "src": "2817:121:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "3023:208:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 374,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 360,
                              "src": "3087:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 370,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3076:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ArbV1_$456",
                                        "typeString": "contract ArbV1"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ArbV1_$456",
                                        "typeString": "contract ArbV1"
                                      }
                                    ],
                                    "id": 369,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3068:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 368,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3068:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3068:13:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 365,
                                      "name": "tokenAdd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 356,
                                      "src": "3048:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 364,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1082,
                                    "src": "3041:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$1082_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 366,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3041:16:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1082",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1021,
                                "src": "3041:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3041:41:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1273,
                            "src": "3041:45:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3041:53:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3097:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3041:57:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e6473",
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3099:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        },
                        "value": "Insufficient funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        }
                      ],
                      "id": 363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3033:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3033:87:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "3033:87:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 385,
                        "name": "reciepient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "3156:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 386,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "3168:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 382,
                            "name": "tokenAdd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "3137:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 381,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1082,
                          "src": "3130:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1082_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3130:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1082",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1031,
                      "src": "3130:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3130:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "3130:45:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 390,
                        "name": "tokenAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "3203:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 391,
                        "name": "reciepient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "3213:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 389,
                      "name": "transferSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "3190:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3190:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 393,
                  "nodeType": "EmitStatement",
                  "src": "3185:39:2"
                }
              ]
            },
            "id": 395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendToken",
            "nameLocation": "2953:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "mutability": "mutable",
                  "name": "tokenAdd",
                  "nameLocation": "2972:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "2964:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2964:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "reciepient",
                  "nameLocation": "2990:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "2982:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2982:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 360,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3007:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "3002:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3002:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2963:51:2"
            },
            "returnParameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3023:0:2"
            },
            "scope": 456,
            "src": "2944:287:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 412,
              "nodeType": "Block",
              "src": "3324:55:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 407,
                        "name": "tokenAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "3345:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 408,
                        "name": "reciepient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "3354:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 409,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "3365:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 406,
                      "name": "_sendToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "3334:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3334:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "3334:38:2"
                }
              ]
            },
            "functionSelector": "2fdcfbd2",
            "id": 413,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 404,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 403,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47,
                  "src": "3312:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3312:11:2"
              }
            ],
            "name": "sendToken",
            "nameLocation": "3245:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "tokenAdd",
                  "nameLocation": "3263:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "3255:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3255:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "reciepient",
                  "nameLocation": "3281:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "3273:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3273:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3297:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "3292:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3292:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3254:50:2"
            },
            "returnParameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3324:0:2"
            },
            "scope": 456,
            "src": "3236:143:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 424,
              "nodeType": "Block",
              "src": "3442:31:2",
              "statements": [
                {
                  "expression": {
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 420,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "3452:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 421,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 415,
                      "src": "3460:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3452:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "3452:14:2"
                }
              ]
            },
            "functionSelector": "a6f9dae1",
            "id": 425,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 418,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 417,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47,
                  "src": "3430:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3430:11:2"
              }
            ],
            "name": "changeOwner",
            "nameLocation": "3394:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3415:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "3407:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3407:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3406:16:2"
            },
            "returnParameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3442:0:2"
            },
            "scope": 456,
            "src": "3385:88:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 436,
              "nodeType": "Block",
              "src": "3536:50:2",
              "statements": [
                {
                  "expression": {
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 432,
                      "name": "instantCashout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "3546:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 433,
                      "name": "_method",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 427,
                      "src": "3563:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3546:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "3546:24:2"
                }
              ]
            },
            "functionSelector": "af02f2b5",
            "id": 437,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 430,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 429,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47,
                  "src": "3524:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3524:11:2"
              }
            ],
            "name": "changeCashout",
            "nameLocation": "3488:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 427,
                  "mutability": "mutable",
                  "name": "_method",
                  "nameLocation": "3508:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "3503:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3503:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3502:14:2"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3536:0:2"
            },
            "scope": 456,
            "src": "3479:107:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "3632:49:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 446,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3663:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3663:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 443,
                            "name": "skimPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "3648:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 442,
                          "name": "IPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1592,
                          "src": "3642:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPair_$1592_$",
                            "typeString": "type(contract IPair)"
                          }
                        },
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3642:15:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPair_$1592",
                          "typeString": "contract IPair"
                        }
                      },
                      "id": 445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "skim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1588,
                      "src": "3642:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3642:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "3642:32:2"
                }
              ]
            },
            "functionSelector": "bc25cf77",
            "id": 451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "skim",
            "nameLocation": "3600:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "skimPair",
                  "nameLocation": "3613:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "3605:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3605:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3604:18:2"
            },
            "returnParameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3632:0:2"
            },
            "scope": 456,
            "src": "3591:90:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "3714:2:2",
              "statements": []
            },
            "id": 455,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3694:2:2"
            },
            "returnParameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3714:0:2"
            },
            "scope": 456,
            "src": "3687:29:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 457,
        "src": "253:3465:2",
        "usedErrors": []
      }
    ],
    "src": "40:3680:2"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b031916331790556001805460ff60a01b19169055610e218061003f6000396000f3fe60806040526004361061007e5760003560e01c806390b98a111161004e57806390b98a1114610140578063a6f9dae114610160578063af02f2b514610180578063bc25cf77146101a057600080fd5b806217ea801461008a57806310f2aa41146100c65780632fdcfbd2146100e85780638da5cb5b1461010857600080fd5b3661008557005b600080fd5b34801561009657600080fd5b506100aa6100a5366004610873565b6101c0565b6040516100bd9796959493929190610964565b60405180910390f35b3480156100d257600080fd5b506100e66100e1366004610a1f565b6101f6565b005b3480156100f457600080fd5b506100e6610103366004610a82565b610436565b34801561011457600080fd5b50600054610128906001600160a01b031681565b6040516001600160a01b0390911681526020016100bd565b34801561014c57600080fd5b506100e661015b366004610ac3565b61045d565b34801561016c57600080fd5b506100e661017b366004610aef565b610482565b34801561018c57600080fd5b506100e661019b366004610b1a565b6104bb565b3480156101ac57600080fd5b506100e66101bb366004610aef565b6104f0565b6060806000806000806000878060200190518101906101df9190610c32565b959e949d50929b5090995097509550909350915050565b6000610201826101c0565b5050505092505050806001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026b9190610d3c565b6001600160a01b0316836001600160a01b031614806102fc5750806001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e79190610d3c565b6001600160a01b0316836001600160a01b0316145b61034d5760405162461bcd60e51b815260206004820152601860248201527f496e636f7272656374205061697220666f7220746f6b656e000000000000000060448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0385169081179091556040516370a0823160e01b81523060048201526370a0823190602401602060405180830381865afa1580156103a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c89190610d59565b60025560405163022c0d9f60e01b81526001600160a01b0382169063022c0d9f906103fd908890889033908890600401610d72565b600060405180830381600087803b15801561041757600080fd5b505af115801561042b573d6000803e3d6000fd5b505050505050505050565b6000546001600160a01b0316331461044d57600080fd5b61045883838361054c565b505050565b6000546001600160a01b0316331461047457600080fd5b61047e82826106c2565b5050565b6000546001600160a01b0316331461049957600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146104d257600080fd5b60018054911515600160a01b0260ff60a01b19909216919091179055565b60405163bc25cf7760e01b81523360048201526001600160a01b0382169063bc25cf7790602401600060405180830381600087803b15801561053157600080fd5b505af1158015610545573d6000803e3d6000fd5b5050505050565b6040516370a0823160e01b81523060048201526000906105c39083906001600160a01b038716906370a0823190602401602060405180830381865afa158015610599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bd9190610d59565b9061079b565b116106055760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b6044820152606401610344565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106789190610da9565b50604080516001600160a01b038086168252841660208201527f81ff37c0a846f0fa29fd65bc885ac344052231414004d0e16a59678c4018b3a391015b60405180910390a1505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461070f576040519150601f19603f3d011682016040523d82523d6000602084013e610714565b606091505b505090508061075c5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610344565b60408051600081526001600160a01b03851660208201527f81ff37c0a846f0fa29fd65bc885ac344052231414004d0e16a59678c4018b3a391016106b5565b60006107a78284610dc6565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156107ed576107ed6107ae565b604052919050565b600067ffffffffffffffff82111561080f5761080f6107ae565b50601f01601f191660200190565b600082601f83011261082e57600080fd5b813561084161083c826107f5565b6107c4565b81815284602083860101111561085657600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561088557600080fd5b813567ffffffffffffffff81111561089c57600080fd5b6108a88482850161081d565b949350505050565b60005b838110156108cb5781810151838201526020016108b3565b838111156108da576000848401525b50505050565b600081518084526108f88160208601602086016108b0565b601f01601f19169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b8481101561095757601f198684030189526109458383516108e0565b98840198925090830190600101610929565b5090979650505050505050565b60e08082528851908201819052600090602090610100840190828c01845b828110156109a75781516001600160a01b031684529284019290840190600101610982565b505050838103828501526109bb818b61090c565b925050506109d460408301886001600160a01b03169052565b6001600160a01b03861660608301526001600160a01b038516608083015260a082019390935260c0015295945050505050565b6001600160a01b0381168114610a1c57600080fd5b50565b60008060008060808587031215610a3557600080fd5b84359350602085013592506040850135610a4e81610a07565b9150606085013567ffffffffffffffff811115610a6a57600080fd5b610a768782880161081d565b91505092959194509250565b600080600060608486031215610a9757600080fd5b8335610aa281610a07565b92506020840135610ab281610a07565b929592945050506040919091013590565b60008060408385031215610ad657600080fd5b8235610ae181610a07565b946020939093013593505050565b600060208284031215610b0157600080fd5b81356107a781610a07565b8015158114610a1c57600080fd5b600060208284031215610b2c57600080fd5b81356107a781610b0c565b600067ffffffffffffffff821115610b5157610b516107ae565b5060051b60200190565b600082601f830112610b6c57600080fd5b81516020610b7c61083c83610b37565b82815260059290921b84018101918181019086841115610b9b57600080fd5b8286015b84811015610c1757805167ffffffffffffffff811115610bbf5760008081fd5b8701603f81018913610bd15760008081fd5b848101516040610be361083c836107f5565b8281528b82848601011115610bf85760008081fd5b610c07838983018487016108b0565b8652505050918301918301610b9f565b509695505050505050565b8051610c2d81610a07565b919050565b600080600080600080600060e0888a031215610c4d57600080fd5b875167ffffffffffffffff80821115610c6557600080fd5b818a0191508a601f830112610c7957600080fd5b81516020610c8961083c83610b37565b82815260059290921b8401810191818101908e841115610ca857600080fd5b948201945b83861015610ccf578551610cc081610a07565b82529482019490820190610cad565b918d0151919b50909350505080821115610ce857600080fd5b50610cf58a828b01610b5b565b965050610d0460408901610c22565b9450610d1260608901610c22565b9350610d2060808901610c22565b925060a0880151915060c0880151905092959891949750929550565b600060208284031215610d4e57600080fd5b81516107a781610a07565b600060208284031215610d6b57600080fd5b5051919050565b84815283602082015260018060a01b0383166040820152608060608201526000610d9f60808301846108e0565b9695505050505050565b600060208284031215610dbb57600080fd5b81516107a781610b0c565b600082821015610de657634e487b7160e01b600052601160045260246000fd5b50039056fea264697066735822122021225ad8ecc84ccf74144ae67caa3dc24ea66720581f64d626f32bf19d9b32ec64736f6c634300080e0033",
  "bytecodeSha1": "6c6623a587b86ea7d3aa35d0f1117d1dc9651c78",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "ArbV1",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {
        "ArbV1._sendCoin": {
          "19": [
            2725,
            2729,
            true
          ]
        },
        "ArbV1._sendToken": {
          "18": [
            3041,
            3098,
            true
          ]
        },
        "ArbV1.start": {
          "16": [
            980,
            1016,
            true
          ],
          "17": [
            1020,
            1056,
            true
          ]
        }
      },
      "6": {}
    },
    "statements": {
      "0": {},
      "1": {
        "SafeMath.sub": {
          "15": [
            3185,
            3197
          ]
        }
      },
      "2": {
        "ArbV1._sendCoin": {
          "13": [
            2717,
            2754
          ],
          "14": [
            2764,
            2803
          ]
        },
        "ArbV1._sendToken": {
          "10": [
            3033,
            3120
          ],
          "11": [
            3130,
            3175
          ],
          "12": [
            3185,
            3224
          ]
        },
        "ArbV1.changeCashout": {
          "8": [
            3546,
            3570
          ]
        },
        "ArbV1.changeOwner": {
          "7": [
            3452,
            3466
          ]
        },
        "ArbV1.sendCoin": {
          "6": [
            2904,
            2931
          ]
        },
        "ArbV1.sendToken": {
          "5": [
            3334,
            3372
          ]
        },
        "ArbV1.skim": {
          "9": [
            3642,
            3674
          ]
        },
        "ArbV1.start": {
          "1": [
            972,
            1085
          ],
          "2": [
            1099,
            1113
          ],
          "3": [
            1127,
            1175
          ],
          "4": [
            1189,
            1244
          ]
        },
        "ArbV1.unpack": {
          "0": [
            1487,
            1639
          ]
        }
      },
      "6": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC20",
    "IPair",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/SafeMath"
  ],
  "deployedBytecode": "60806040526004361061007e5760003560e01c806390b98a111161004e57806390b98a1114610140578063a6f9dae114610160578063af02f2b514610180578063bc25cf77146101a057600080fd5b806217ea801461008a57806310f2aa41146100c65780632fdcfbd2146100e85780638da5cb5b1461010857600080fd5b3661008557005b600080fd5b34801561009657600080fd5b506100aa6100a5366004610873565b6101c0565b6040516100bd9796959493929190610964565b60405180910390f35b3480156100d257600080fd5b506100e66100e1366004610a1f565b6101f6565b005b3480156100f457600080fd5b506100e6610103366004610a82565b610436565b34801561011457600080fd5b50600054610128906001600160a01b031681565b6040516001600160a01b0390911681526020016100bd565b34801561014c57600080fd5b506100e661015b366004610ac3565b61045d565b34801561016c57600080fd5b506100e661017b366004610aef565b610482565b34801561018c57600080fd5b506100e661019b366004610b1a565b6104bb565b3480156101ac57600080fd5b506100e66101bb366004610aef565b6104f0565b6060806000806000806000878060200190518101906101df9190610c32565b959e949d50929b5090995097509550909350915050565b6000610201826101c0565b5050505092505050806001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026b9190610d3c565b6001600160a01b0316836001600160a01b031614806102fc5750806001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e79190610d3c565b6001600160a01b0316836001600160a01b0316145b61034d5760405162461bcd60e51b815260206004820152601860248201527f496e636f7272656374205061697220666f7220746f6b656e000000000000000060448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0385169081179091556040516370a0823160e01b81523060048201526370a0823190602401602060405180830381865afa1580156103a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c89190610d59565b60025560405163022c0d9f60e01b81526001600160a01b0382169063022c0d9f906103fd908890889033908890600401610d72565b600060405180830381600087803b15801561041757600080fd5b505af115801561042b573d6000803e3d6000fd5b505050505050505050565b6000546001600160a01b0316331461044d57600080fd5b61045883838361054c565b505050565b6000546001600160a01b0316331461047457600080fd5b61047e82826106c2565b5050565b6000546001600160a01b0316331461049957600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146104d257600080fd5b60018054911515600160a01b0260ff60a01b19909216919091179055565b60405163bc25cf7760e01b81523360048201526001600160a01b0382169063bc25cf7790602401600060405180830381600087803b15801561053157600080fd5b505af1158015610545573d6000803e3d6000fd5b5050505050565b6040516370a0823160e01b81523060048201526000906105c39083906001600160a01b038716906370a0823190602401602060405180830381865afa158015610599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bd9190610d59565b9061079b565b116106055760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b6044820152606401610344565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106789190610da9565b50604080516001600160a01b038086168252841660208201527f81ff37c0a846f0fa29fd65bc885ac344052231414004d0e16a59678c4018b3a391015b60405180910390a1505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461070f576040519150601f19603f3d011682016040523d82523d6000602084013e610714565b606091505b505090508061075c5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610344565b60408051600081526001600160a01b03851660208201527f81ff37c0a846f0fa29fd65bc885ac344052231414004d0e16a59678c4018b3a391016106b5565b60006107a78284610dc6565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156107ed576107ed6107ae565b604052919050565b600067ffffffffffffffff82111561080f5761080f6107ae565b50601f01601f191660200190565b600082601f83011261082e57600080fd5b813561084161083c826107f5565b6107c4565b81815284602083860101111561085657600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561088557600080fd5b813567ffffffffffffffff81111561089c57600080fd5b6108a88482850161081d565b949350505050565b60005b838110156108cb5781810151838201526020016108b3565b838111156108da576000848401525b50505050565b600081518084526108f88160208601602086016108b0565b601f01601f19169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b8481101561095757601f198684030189526109458383516108e0565b98840198925090830190600101610929565b5090979650505050505050565b60e08082528851908201819052600090602090610100840190828c01845b828110156109a75781516001600160a01b031684529284019290840190600101610982565b505050838103828501526109bb818b61090c565b925050506109d460408301886001600160a01b03169052565b6001600160a01b03861660608301526001600160a01b038516608083015260a082019390935260c0015295945050505050565b6001600160a01b0381168114610a1c57600080fd5b50565b60008060008060808587031215610a3557600080fd5b84359350602085013592506040850135610a4e81610a07565b9150606085013567ffffffffffffffff811115610a6a57600080fd5b610a768782880161081d565b91505092959194509250565b600080600060608486031215610a9757600080fd5b8335610aa281610a07565b92506020840135610ab281610a07565b929592945050506040919091013590565b60008060408385031215610ad657600080fd5b8235610ae181610a07565b946020939093013593505050565b600060208284031215610b0157600080fd5b81356107a781610a07565b8015158114610a1c57600080fd5b600060208284031215610b2c57600080fd5b81356107a781610b0c565b600067ffffffffffffffff821115610b5157610b516107ae565b5060051b60200190565b600082601f830112610b6c57600080fd5b81516020610b7c61083c83610b37565b82815260059290921b84018101918181019086841115610b9b57600080fd5b8286015b84811015610c1757805167ffffffffffffffff811115610bbf5760008081fd5b8701603f81018913610bd15760008081fd5b848101516040610be361083c836107f5565b8281528b82848601011115610bf85760008081fd5b610c07838983018487016108b0565b8652505050918301918301610b9f565b509695505050505050565b8051610c2d81610a07565b919050565b600080600080600080600060e0888a031215610c4d57600080fd5b875167ffffffffffffffff80821115610c6557600080fd5b818a0191508a601f830112610c7957600080fd5b81516020610c8961083c83610b37565b82815260059290921b8401810191818101908e841115610ca857600080fd5b948201945b83861015610ccf578551610cc081610a07565b82529482019490820190610cad565b918d0151919b50909350505080821115610ce857600080fd5b50610cf58a828b01610b5b565b965050610d0460408901610c22565b9450610d1260608901610c22565b9350610d2060808901610c22565b925060a0880151915060c0880151905092959891949750929550565b600060208284031215610d4e57600080fd5b81516107a781610a07565b600060208284031215610d6b57600080fd5b5051919050565b84815283602082015260018060a01b0383166040820152608060608201526000610d9f60808301846108e0565b9695505050505050565b600060208284031215610dbb57600080fd5b81516107a781610b0c565b600082821015610de657634e487b7160e01b600052601160045260246000fd5b50039056fea264697066735822122021225ad8ecc84ccf74144ae67caa3dc24ea66720581f64d626f32bf19d9b32ec64736f6c634300080e0033",
  "deployedSourceMap": "253:3465:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1261:385;;;;;;;;;;-1:-1:-1;1261:385:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;777:478;;;;;;;;;;-1:-1:-1;777:478:2;;;;;:::i;:::-;;:::i;:::-;;3236:143;;;;;;;;;;-1:-1:-1;3236:143:2;;;;;:::i;:::-;;:::i;309:20::-;;;;;;;;;;-1:-1:-1;309:20:2;;;;-1:-1:-1;;;;;309:20:2;;;;;;-1:-1:-1;;;;;5246:32:7;;;5228:51;;5216:2;5201:18;309:20:2;5082:203:7;2817:121:2;;;;;;;;;;-1:-1:-1;2817:121:2;;;;;:::i;:::-;;:::i;3385:88::-;;;;;;;;;;-1:-1:-1;3385:88:2;;;;;:::i;:::-;;:::i;3479:107::-;;;;;;;;;;-1:-1:-1;3479:107:2;;;;;:::i;:::-;;:::i;3591:90::-;;;;;;;;;;-1:-1:-1;3591:90:2;;;;;:::i;:::-;;:::i;1261:385::-;1327:26;1354:24;1379:19;1408:15;1424:17;1442:11;1454:8;1579:4;1555:84;;;;;;;;;;;;:::i;:::-;1487:152;;;;-1:-1:-1;1487:152:2;;-1:-1:-1;1487:152:2;;-1:-1:-1;1487:152:2;-1:-1:-1;1487:152:2;-1:-1:-1;1487:152:2;;-1:-1:-1;1261:385:2;-1:-1:-1;;1261:385:2:o;777:478::-;915:18;945:12;952:4;945:6;:12::i;:::-;910:47;;;;;;;;996:10;-1:-1:-1;;;;;990:24:2;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;980:36:2;:6;-1:-1:-1;;;;;980:36:2;;:76;;;;1036:10;-1:-1:-1;;;;;1030:24:2;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1020:36:2;:6;-1:-1:-1;;;;;1020:36:2;;980:76;972:113;;;;-1:-1:-1;;;972:113:2;;10079:2:7;972:113:2;;;10061:21:7;10118:2;10098:18;;;10091:30;10157:26;10137:18;;;10130:54;10201:18;;972:113:2;;;;;;;;;1099:5;:14;;-1:-1:-1;;;;;;1099:14:2;-1:-1:-1;;;;;1099:14:2;;;;;;;;1137:38;;-1:-1:-1;;;1137:38:2;;1169:4;1137:38;;;5228:51:7;1137:23:2;;5201:18:7;;1137:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1127:7;:48;1189:55;;-1:-1:-1;;;1189:55:2;;-1:-1:-1;;;;;1189:22:2;;;;;:55;;1212:7;;1220;;1228:10;;1239:4;;1189:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;896:359;777:478;;;;:::o;3236:143::-;645:5;;-1:-1:-1;;;;;645:5:2;654:10;645:19;637:28;;;;;;3334:38:::1;3345:8;3354:10;3365:6;3334:10;:38::i;:::-;3236:143:::0;;;:::o;2817:121::-;645:5;;-1:-1:-1;;;;;645:5:2;654:10;645:19;637:28;;;;;;2904:27:::1;2914:9;2924:6;2904:9;:27::i;:::-;2817:121:::0;;:::o;3385:88::-;645:5;;-1:-1:-1;;;;;645:5:2;654:10;645:19;637:28;;;;;;3452:5:::1;:14:::0;;-1:-1:-1;;;;;;3452:14:2::1;-1:-1:-1::0;;;;;3452:14:2;;;::::1;::::0;;;::::1;::::0;;3385:88::o;3479:107::-;645:5;;-1:-1:-1;;;;;645:5:2;654:10;645:19;637:28;;;;;;3546:14:::1;:24:::0;;;::::1;;-1:-1:-1::0;;;3546:24:2::1;-1:-1:-1::0;;;;3546:24:2;;::::1;::::0;;;::::1;::::0;;3479:107::o;3591:90::-;3642:32;;-1:-1:-1;;;3642:32:2;;3663:10;3642:32;;;5228:51:7;-1:-1:-1;;;;;3642:20:2;;;;;5201:18:7;;3642:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3591:90;:::o;2944:287::-;3041:41;;-1:-1:-1;;;3041:41:2;;3076:4;3041:41;;;5228:51:7;3097:1:2;;3041:53;;3087:6;;-1:-1:-1;;;;;3041:26:2;;;;;5201:18:7;;3041:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;:53::i;:::-;:57;3033:87;;;;-1:-1:-1;;;3033:87:2;;11084:2:7;3033:87:2;;;11066:21:7;11123:2;11103:18;;;11096:30;-1:-1:-1;;;11142:18:7;;;11135:48;11200:18;;3033:87:2;10882:342:7;3033:87:2;3130:45;;-1:-1:-1;;;3130:45:2;;-1:-1:-1;;;;;11421:32:7;;;3130:45:2;;;11403:51:7;11470:18;;;11463:34;;;3130:25:2;;;;;11376:18:7;;3130:45:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3190:34:2;;;-1:-1:-1;;;;;11988:15:7;;;11970:34;;12040:15;;12035:2;12020:18;;12013:43;3190:34:2;;11905:18:7;3190:34:2;;;;;;;;2944:287;;;:::o;2581:229::-;2659:9;2674;-1:-1:-1;;;;;2674:14:2;2696:6;2674:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2658:49;;;2725:4;2717:37;;;;-1:-1:-1;;;2717:37:2;;12479:2:7;2717:37:2;;;12461:21:7;12518:2;12498:18;;;12491:30;-1:-1:-1;;;12537:18:7;;;12530:50;12597:18;;2717:37:2;12277:344:7;2717:37:2;2769:34;;;2790:1;11970:34:7;;-1:-1:-1;;;;;12040:15:7;;12035:2;12020:18;;12013:43;2769:34:2;;11905:18:7;2769:34:2;11758:304:7;3108:96:1;3166:7;3192:5;3196:1;3192;:5;:::i;:::-;3185:12;3108:96;-1:-1:-1;;;3108:96:1:o;14:127:7:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:7;247:40;;317:18;302:34;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:7:o;426:186::-;474:4;507:18;499:6;496:30;493:56;;;529:18;;:::i;:::-;-1:-1:-1;595:2:7;574:15;-1:-1:-1;;570:29:7;601:4;566:40;;426:186::o;617:462::-;659:5;712:3;705:4;697:6;693:17;689:27;679:55;;730:1;727;720:12;679:55;766:6;753:20;797:48;813:31;841:2;813:31;:::i;:::-;797:48;:::i;:::-;870:2;861:7;854:19;916:3;909:4;904:2;896:6;892:15;888:26;885:35;882:55;;;933:1;930;923:12;882:55;998:2;991:4;983:6;979:17;972:4;963:7;959:18;946:55;1046:1;1021:16;;;1039:4;1017:27;1010:38;;;;1025:7;617:462;-1:-1:-1;;;617:462:7:o;1084:320::-;1152:6;1205:2;1193:9;1184:7;1180:23;1176:32;1173:52;;;1221:1;1218;1211:12;1173:52;1261:9;1248:23;1294:18;1286:6;1283:30;1280:50;;;1326:1;1323;1316:12;1280:50;1349:49;1390:7;1381:6;1370:9;1366:22;1349:49;:::i;:::-;1339:59;1084:320;-1:-1:-1;;;;1084:320:7:o;1518:258::-;1590:1;1600:113;1614:6;1611:1;1608:13;1600:113;;;1690:11;;;1684:18;1671:11;;;1664:39;1636:2;1629:10;1600:113;;;1731:6;1728:1;1725:13;1722:48;;;1766:1;1757:6;1752:3;1748:16;1741:27;1722:48;;1518:258;;;:::o;1781:257::-;1822:3;1860:5;1854:12;1887:6;1882:3;1875:19;1903:63;1959:6;1952:4;1947:3;1943:14;1936:4;1929:5;1925:16;1903:63;:::i;:::-;2020:2;1999:15;-1:-1:-1;;1995:29:7;1986:39;;;;2027:4;1982:50;;1781:257;-1:-1:-1;;1781:257:7:o;2043:590::-;2094:3;2125;2157:5;2151:12;2184:6;2179:3;2172:19;2210:4;2239:2;2234:3;2230:12;2223:19;;2295:2;2285:6;2282:1;2278:14;2271:5;2267:26;2263:35;2332:2;2325:5;2321:14;2353:1;2363:244;2377:6;2374:1;2371:13;2363:244;;;2464:2;2460:7;2452:5;2446:4;2442:16;2438:30;2433:3;2426:43;2490:37;2522:4;2513:6;2507:13;2490:37;:::i;:::-;2585:12;;;;2482:45;-1:-1:-1;2550:15:7;;;;2399:1;2392:9;2363:244;;;-1:-1:-1;2623:4:7;;2043:590;-1:-1:-1;;;;;;;2043:590:7:o;2638:1245::-;3064:3;3077:22;;;3148:13;;3049:19;;;3170:22;;;3016:4;;3246;;3223:3;3208:19;;;3273:15;;;3016:4;3316:195;3330:6;3327:1;3324:13;3316:195;;;3395:13;;-1:-1:-1;;;;;3391:39:7;3379:52;;3451:12;;;;3486:15;;;;3427:1;3345:9;3316:195;;;3320:3;;;3556:9;3551:3;3547:19;3542:2;3531:9;3527:18;3520:47;3584:39;3619:3;3611:6;3584:39;:::i;:::-;3576:47;;;;3632:46;3674:2;3663:9;3659:18;3651:6;-1:-1:-1;;;;;1475:31:7;1463:44;;1409:104;3632:46;-1:-1:-1;;;;;1475:31:7;;3729:2;3714:18;;1463:44;-1:-1:-1;;;;;1475:31:7;;3784:3;3769:19;;1463:44;3820:3;3805:19;;3798:35;;;;3864:3;3849:19;3842:35;2638:1245;;-1:-1:-1;;;;;2638:1245:7:o;3888:131::-;-1:-1:-1;;;;;3963:31:7;;3953:42;;3943:70;;4009:1;4006;3999:12;3943:70;3888:131;:::o;4024:592::-;4119:6;4127;4135;4143;4196:3;4184:9;4175:7;4171:23;4167:33;4164:53;;;4213:1;4210;4203:12;4164:53;4249:9;4236:23;4226:33;;4306:2;4295:9;4291:18;4278:32;4268:42;;4360:2;4349:9;4345:18;4332:32;4373:31;4398:5;4373:31;:::i;:::-;4423:5;-1:-1:-1;4479:2:7;4464:18;;4451:32;4506:18;4495:30;;4492:50;;;4538:1;4535;4528:12;4492:50;4561:49;4602:7;4593:6;4582:9;4578:22;4561:49;:::i;:::-;4551:59;;;4024:592;;;;;;;:::o;4621:456::-;4698:6;4706;4714;4767:2;4755:9;4746:7;4742:23;4738:32;4735:52;;;4783:1;4780;4773:12;4735:52;4822:9;4809:23;4841:31;4866:5;4841:31;:::i;:::-;4891:5;-1:-1:-1;4948:2:7;4933:18;;4920:32;4961:33;4920:32;4961:33;:::i;:::-;4621:456;;5013:7;;-1:-1:-1;;;5067:2:7;5052:18;;;;5039:32;;4621:456::o;5290:323::-;5366:6;5374;5427:2;5415:9;5406:7;5402:23;5398:32;5395:52;;;5443:1;5440;5433:12;5395:52;5482:9;5469:23;5501:31;5526:5;5501:31;:::i;:::-;5551:5;5603:2;5588:18;;;;5575:32;;-1:-1:-1;;;5290:323:7:o;5618:247::-;5677:6;5730:2;5718:9;5709:7;5705:23;5701:32;5698:52;;;5746:1;5743;5736:12;5698:52;5785:9;5772:23;5804:31;5829:5;5804:31;:::i;5870:118::-;5956:5;5949:13;5942:21;5935:5;5932:32;5922:60;;5978:1;5975;5968:12;5993:241;6049:6;6102:2;6090:9;6081:7;6077:23;6073:32;6070:52;;;6118:1;6115;6108:12;6070:52;6157:9;6144:23;6176:28;6198:5;6176:28;:::i;6239:183::-;6299:4;6332:18;6324:6;6321:30;6318:56;;;6354:18;;:::i;:::-;-1:-1:-1;6399:1:7;6395:14;6411:4;6391:25;;6239:183::o;6427:1388::-;6490:5;6543:3;6536:4;6528:6;6524:17;6520:27;6510:55;;6561:1;6558;6551:12;6510:55;6590:6;6584:13;6616:4;6640:60;6656:43;6696:2;6656:43;:::i;6640:60::-;6734:15;;;6820:1;6816:10;;;;6804:23;;6800:32;;;6765:12;;;;6844:15;;;6841:35;;;6872:1;6869;6862:12;6841:35;6908:2;6900:6;6896:15;6920:866;6936:6;6931:3;6928:15;6920:866;;;7015:3;7009:10;7051:18;7038:11;7035:35;7032:125;;;7111:1;7140:2;7136;7129:14;7032:125;7180:24;;7239:2;7231:11;;7227:21;-1:-1:-1;7217:119:7;;7290:1;7319:2;7315;7308:14;7217:119;7373:2;7369;7365:11;7359:18;7400:2;7430:48;7446:31;7474:2;7446:31;:::i;7430:48::-;7507:2;7498:7;7491:19;7551:3;7546:2;7541;7537;7533:11;7529:20;7526:29;7523:119;;;7596:1;7625:2;7621;7614:14;7523:119;7655:56;7708:2;7703;7694:7;7690:16;7685:2;7681;7677:11;7655:56;:::i;:::-;7724:20;;-1:-1:-1;;;7764:12:7;;;;6953;;6920:866;;;-1:-1:-1;7804:5:7;6427:1388;-1:-1:-1;;;;;;6427:1388:7:o;7820:146::-;7907:13;;7929:31;7907:13;7929:31;:::i;:::-;7820:146;;;:::o;7971:1645::-;8178:6;8186;8194;8202;8210;8218;8226;8279:3;8267:9;8258:7;8254:23;8250:33;8247:53;;;8296:1;8293;8286:12;8247:53;8329:9;8323:16;8358:18;8399:2;8391:6;8388:14;8385:34;;;8415:1;8412;8405:12;8385:34;8453:6;8442:9;8438:22;8428:32;;8498:7;8491:4;8487:2;8483:13;8479:27;8469:55;;8520:1;8517;8510:12;8469:55;8549:2;8543:9;8571:4;8595:60;8611:43;8651:2;8611:43;:::i;8595:60::-;8689:15;;;8771:1;8767:10;;;;8759:19;;8755:28;;;8720:12;;;;8795:19;;;8792:39;;;8827:1;8824;8817:12;8792:39;8851:11;;;;8871:210;8887:6;8882:3;8879:15;8871:210;;;8960:3;8954:10;8977:31;9002:5;8977:31;:::i;:::-;9021:18;;8904:12;;;;9059;;;;8871:210;;;9136:18;;;9130:25;9100:5;;-1:-1:-1;9130:25:7;;-1:-1:-1;;;9167:16:7;;;9164:36;;;9196:1;9193;9186:12;9164:36;;9219:72;9283:7;9272:8;9261:9;9257:24;9219:72;:::i;:::-;9209:82;;;9310:57;9363:2;9352:9;9348:18;9310:57;:::i;:::-;9300:67;;9386:57;9439:2;9428:9;9424:18;9386:57;:::i;:::-;9376:67;;9462:58;9515:3;9504:9;9500:19;9462:58;:::i;:::-;9452:68;;9560:3;9549:9;9545:19;9539:26;9529:36;;9605:3;9594:9;9590:19;9584:26;9574:36;;7971:1645;;;;;;;;;;:::o;9621:251::-;9691:6;9744:2;9732:9;9723:7;9719:23;9715:32;9712:52;;;9760:1;9757;9750:12;9712:52;9792:9;9786:16;9811:31;9836:5;9811:31;:::i;10230:184::-;10300:6;10353:2;10341:9;10332:7;10328:23;10324:32;10321:52;;;10369:1;10366;10359:12;10321:52;-1:-1:-1;10392:16:7;;10230:184;-1:-1:-1;10230:184:7:o;10419:458::-;10650:6;10639:9;10632:25;10693:6;10688:2;10677:9;10673:18;10666:34;10765:1;10761;10756:3;10752:11;10748:19;10740:6;10736:32;10731:2;10720:9;10716:18;10709:60;10805:3;10800:2;10789:9;10785:18;10778:31;10613:4;10826:45;10866:3;10855:9;10851:19;10843:6;10826:45;:::i;:::-;10818:53;10419:458;-1:-1:-1;;;;;;10419:458:7:o;11508:245::-;11575:6;11628:2;11616:9;11607:7;11603:23;11599:32;11596:52;;;11644:1;11641;11634:12;11596:52;11676:9;11670:16;11695:28;11717:5;11695:28;:::i;12943:222::-;12983:4;13011:1;13008;13005:8;13002:131;;;13055:10;13050:3;13046:20;13043:1;13036:31;13090:4;13087:1;13080:15;13118:4;13115:1;13108:15;13002:131;-1:-1:-1;13150:9:7;;12943:222::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    253,
    3718
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90B98A11 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x90B98A11 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xAF02F2B5 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x17EA80 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x10F2AA41 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x2FDCFBD2 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x85 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x873 JUMP JUMPDEST PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x1F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xA82 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x128 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0xC32 JUMP JUMPDEST SWAP6 SWAP15 SWAP5 SWAP14 POP SWAP3 SWAP12 POP SWAP1 SWAP10 POP SWAP8 POP SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201 DUP3 PUSH2 0x1C0 JUMP JUMPDEST POP POP POP POP SWAP3 POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x247 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2FC JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x34D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374205061697220666F7220746F6B656E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x22C0D9F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0x3FD SWAP1 DUP9 SWAP1 DUP9 SWAP1 CALLER SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x42B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x458 DUP4 DUP4 DUP4 PUSH2 0x54C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47E DUP3 DUP3 PUSH2 0x6C2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xBC25CF77 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xBC25CF77 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x545 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH2 0x5C3 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x599 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST SWAP1 PUSH2 0x79B JUMP JUMPDEST GT PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x654 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x678 SWAP2 SWAP1 PUSH2 0xDA9 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x81FF37C0A846F0FA29FD65BC885AC344052231414004D0E16A59678C4018B3A3 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x714 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x81FF37C0A846F0FA29FD65BC885AC344052231414004D0E16A59678C4018B3A3 SWAP2 ADD PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A7 DUP3 DUP5 PUSH2 0xDC6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x7ED JUMPI PUSH2 0x7ED PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x80F JUMPI PUSH2 0x80F PUSH2 0x7AE JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x82E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x841 PUSH2 0x83C DUP3 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x885 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A8 DUP5 DUP3 DUP6 ADD PUSH2 0x81D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8CB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8B3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x8DA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x8F8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP DUP1 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD DUP2 DUP7 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x957 JUMPI PUSH1 0x1F NOT DUP7 DUP5 SUB ADD DUP10 MSTORE PUSH2 0x945 DUP4 DUP4 MLOAD PUSH2 0x8E0 JUMP JUMPDEST SWAP9 DUP5 ADD SWAP9 SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x929 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE0 DUP1 DUP3 MSTORE DUP9 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x100 DUP5 ADD SWAP1 DUP3 DUP13 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9A7 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x982 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x9BB DUP2 DUP12 PUSH2 0x90C JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x9D4 PUSH1 0x40 DUP4 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0xA4E DUP2 PUSH2 0xA07 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA76 DUP8 DUP3 DUP9 ADD PUSH2 0x81D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xAA2 DUP2 PUSH2 0xA07 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xAB2 DUP2 PUSH2 0xA07 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xAE1 DUP2 PUSH2 0xA07 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7A7 DUP2 PUSH2 0xA07 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7A7 DUP2 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xB51 JUMPI PUSH2 0xB51 PUSH2 0x7AE JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0xB7C PUSH2 0x83C DUP4 PUSH2 0xB37 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xB9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xC17 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBBF JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 ADD PUSH1 0x3F DUP2 ADD DUP10 SGT PUSH2 0xBD1 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP5 DUP2 ADD MLOAD PUSH1 0x40 PUSH2 0xBE3 PUSH2 0x83C DUP4 PUSH2 0x7F5 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP12 DUP3 DUP5 DUP7 ADD ADD GT ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xC07 DUP4 DUP10 DUP4 ADD DUP5 DUP8 ADD PUSH2 0x8B0 JUMP JUMPDEST DUP7 MSTORE POP POP POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xB9F JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xC2D DUP2 PUSH2 0xA07 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xC4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP DUP11 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0xC89 PUSH2 0x83C DUP4 PUSH2 0xB37 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP15 DUP5 GT ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xCCF JUMPI DUP6 MLOAD PUSH2 0xCC0 DUP2 PUSH2 0xA07 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xCAD JUMP JUMPDEST SWAP2 DUP14 ADD MLOAD SWAP2 SWAP12 POP SWAP1 SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0xCE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCF5 DUP11 DUP3 DUP12 ADD PUSH2 0xB5B JUMP JUMPDEST SWAP7 POP POP PUSH2 0xD04 PUSH1 0x40 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP5 POP PUSH2 0xD12 PUSH1 0x60 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP4 POP PUSH2 0xD20 PUSH1 0x80 DUP10 ADD PUSH2 0xC22 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7A7 DUP2 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xD9F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x8E0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7A7 DUP2 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xDE6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x22 GAS 0xD8 0xEC 0xC8 0x4C 0xCF PUSH21 0x144AE67CAA3DC24EA66720581F64D626F32BF19D9B ORIGIN 0xEC PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        253,
        3718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E"
    },
    "12": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x90B98A11"
    },
    "25": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x90B98A11"
    },
    "36": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "EQ",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "40": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA6F9DAE1"
    },
    "47": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "EQ",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x160"
    },
    "51": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAF02F2B5"
    },
    "58": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x180"
    },
    "62": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBC25CF77"
    },
    "69": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A0"
    },
    "73": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "REVERT",
      "path": "2"
    },
    "78": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "79": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "80": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x17EA80"
    },
    "84": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "EQ",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A"
    },
    "88": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "89": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "90": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x10F2AA41"
    },
    "95": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "EQ",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC6"
    },
    "99": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "100": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "101": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2FDCFBD2"
    },
    "106": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "EQ",
      "path": "2"
    },
    "107": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE8"
    },
    "110": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "111": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "117": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "EQ",
      "path": "2"
    },
    "118": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x108"
    },
    "121": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "122": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "124": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "REVERT",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "127": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "128": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85"
    },
    "131": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "STOP",
      "path": "2"
    },
    "133": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "136": {
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "first_revert": true,
      "fn": null,
      "offset": [
        253,
        3718
      ],
      "op": "REVERT",
      "path": "2"
    },
    "138": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "139": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "140": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "DUP1",
      "path": "2"
    },
    "141": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "142": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x96"
    },
    "145": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "146": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "148": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "DUP1",
      "path": "2"
    },
    "149": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "REVERT",
      "path": "2"
    },
    "150": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "151": {
      "op": "POP"
    },
    "152": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAA"
    },
    "155": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA5"
    },
    "158": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "159": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "161": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x873"
    },
    "164": {
      "fn": "ArbV1.unpack",
      "jump": "i",
      "offset": [
        1261,
        1646
      ],
      "op": "JUMP",
      "path": "2"
    },
    "165": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "166": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C0"
    },
    "169": {
      "fn": "ArbV1.unpack",
      "jump": "i",
      "offset": [
        1261,
        1646
      ],
      "op": "JUMP",
      "path": "2"
    },
    "170": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "171": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "173": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "174": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD"
    },
    "177": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "178": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "179": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "180": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "181": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "182": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "183": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "184": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "185": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x964"
    },
    "188": {
      "fn": "ArbV1.unpack",
      "jump": "i",
      "offset": [
        1261,
        1646
      ],
      "op": "JUMP",
      "path": "2"
    },
    "189": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "190": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "192": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "193": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "DUP1",
      "path": "2"
    },
    "194": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "195": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "SUB",
      "path": "2"
    },
    "196": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "197": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "RETURN",
      "path": "2"
    },
    "198": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "199": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "200": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "DUP1",
      "path": "2"
    },
    "201": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "202": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD2"
    },
    "205": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "206": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "208": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "DUP1",
      "path": "2"
    },
    "209": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "REVERT",
      "path": "2"
    },
    "210": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "211": {
      "op": "POP"
    },
    "212": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6"
    },
    "215": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE1"
    },
    "218": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "219": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "221": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA1F"
    },
    "224": {
      "fn": "ArbV1.start",
      "jump": "i",
      "offset": [
        777,
        1255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "225": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "226": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F6"
    },
    "229": {
      "fn": "ArbV1.start",
      "jump": "i",
      "offset": [
        777,
        1255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "230": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "231": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "STOP",
      "path": "2"
    },
    "232": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "233": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "234": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "DUP1",
      "path": "2"
    },
    "235": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "236": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF4"
    },
    "239": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "240": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "242": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "DUP1",
      "path": "2"
    },
    "243": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "REVERT",
      "path": "2"
    },
    "244": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "245": {
      "op": "POP"
    },
    "246": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6"
    },
    "249": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x103"
    },
    "252": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "253": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "255": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA82"
    },
    "258": {
      "fn": "ArbV1.sendToken",
      "jump": "i",
      "offset": [
        3236,
        3379
      ],
      "op": "JUMP",
      "path": "2"
    },
    "259": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "260": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x436"
    },
    "263": {
      "fn": "ArbV1.sendToken",
      "jump": "i",
      "offset": [
        3236,
        3379
      ],
      "op": "JUMP",
      "path": "2"
    },
    "264": {
      "offset": [
        309,
        329
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "265": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "266": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "DUP1",
      "path": "2"
    },
    "267": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "268": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x114"
    },
    "271": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "272": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "274": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "DUP1",
      "path": "2"
    },
    "275": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "REVERT",
      "path": "2"
    },
    "276": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "277": {
      "op": "POP"
    },
    "278": {
      "offset": [
        309,
        329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "280": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "281": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x128"
    },
    "284": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "291": {
      "op": "SHL"
    },
    "292": {
      "op": "SUB"
    },
    "293": {
      "offset": [
        309,
        329
      ],
      "op": "AND",
      "path": "2"
    },
    "294": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "DUP2",
      "path": "2"
    },
    "295": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "JUMP",
      "path": "2"
    },
    "296": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "297": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "299": {
      "fn": "ArbV1.sendToken",
      "offset": [
        309,
        329
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "306": {
      "op": "SHL"
    },
    "307": {
      "op": "SUB"
    },
    "308": {
      "op": "SWAP1"
    },
    "309": {
      "op": "SWAP2"
    },
    "310": {
      "op": "AND"
    },
    "311": {
      "op": "DUP2"
    },
    "312": {
      "op": "MSTORE"
    },
    "313": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "315": {
      "op": "ADD"
    },
    "316": {
      "offset": [
        309,
        329
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD"
    },
    "319": {
      "op": "JUMP"
    },
    "320": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "321": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "322": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "DUP1",
      "path": "2"
    },
    "323": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "324": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14C"
    },
    "327": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "328": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "330": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "DUP1",
      "path": "2"
    },
    "331": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "REVERT",
      "path": "2"
    },
    "332": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "333": {
      "op": "POP"
    },
    "334": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6"
    },
    "337": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15B"
    },
    "340": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "341": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "343": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAC3"
    },
    "346": {
      "fn": "ArbV1.sendCoin",
      "jump": "i",
      "offset": [
        2817,
        2938
      ],
      "op": "JUMP",
      "path": "2"
    },
    "347": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "348": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45D"
    },
    "351": {
      "fn": "ArbV1.sendCoin",
      "jump": "i",
      "offset": [
        2817,
        2938
      ],
      "op": "JUMP",
      "path": "2"
    },
    "352": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "353": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "354": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "DUP1",
      "path": "2"
    },
    "355": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "356": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16C"
    },
    "359": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "360": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "362": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "DUP1",
      "path": "2"
    },
    "363": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "REVERT",
      "path": "2"
    },
    "364": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "365": {
      "op": "POP"
    },
    "366": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6"
    },
    "369": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17B"
    },
    "372": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "373": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "375": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAEF"
    },
    "378": {
      "fn": "ArbV1.changeOwner",
      "jump": "i",
      "offset": [
        3385,
        3473
      ],
      "op": "JUMP",
      "path": "2"
    },
    "379": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "380": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x482"
    },
    "383": {
      "fn": "ArbV1.changeOwner",
      "jump": "i",
      "offset": [
        3385,
        3473
      ],
      "op": "JUMP",
      "path": "2"
    },
    "384": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "385": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "386": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "DUP1",
      "path": "2"
    },
    "387": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "388": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "391": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "392": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "394": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "DUP1",
      "path": "2"
    },
    "395": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "REVERT",
      "path": "2"
    },
    "396": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "397": {
      "op": "POP"
    },
    "398": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6"
    },
    "401": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B"
    },
    "404": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "405": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "407": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB1A"
    },
    "410": {
      "fn": "ArbV1.changeCashout",
      "jump": "i",
      "offset": [
        3479,
        3586
      ],
      "op": "JUMP",
      "path": "2"
    },
    "411": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "412": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BB"
    },
    "415": {
      "fn": "ArbV1.changeCashout",
      "jump": "i",
      "offset": [
        3479,
        3586
      ],
      "op": "JUMP",
      "path": "2"
    },
    "416": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "417": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "418": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "DUP1",
      "path": "2"
    },
    "419": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "420": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC"
    },
    "423": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "424": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "426": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "DUP1",
      "path": "2"
    },
    "427": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "REVERT",
      "path": "2"
    },
    "428": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "429": {
      "op": "POP"
    },
    "430": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6"
    },
    "433": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BB"
    },
    "436": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "437": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "439": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAEF"
    },
    "442": {
      "fn": "ArbV1.skim",
      "jump": "i",
      "offset": [
        3591,
        3681
      ],
      "op": "JUMP",
      "path": "2"
    },
    "443": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "444": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F0"
    },
    "447": {
      "fn": "ArbV1.skim",
      "jump": "i",
      "offset": [
        3591,
        3681
      ],
      "op": "JUMP",
      "path": "2"
    },
    "448": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "449": {
      "fn": "ArbV1.unpack",
      "offset": [
        1327,
        1353
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "451": {
      "fn": "ArbV1.unpack",
      "offset": [
        1354,
        1378
      ],
      "op": "DUP1",
      "path": "2"
    },
    "452": {
      "fn": "ArbV1.unpack",
      "offset": [
        1379,
        1398
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "454": {
      "fn": "ArbV1.unpack",
      "offset": [
        1408,
        1423
      ],
      "op": "DUP1",
      "path": "2"
    },
    "455": {
      "fn": "ArbV1.unpack",
      "offset": [
        1424,
        1441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "457": {
      "fn": "ArbV1.unpack",
      "offset": [
        1442,
        1453
      ],
      "op": "DUP1",
      "path": "2"
    },
    "458": {
      "fn": "ArbV1.unpack",
      "offset": [
        1454,
        1462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "460": {
      "fn": "ArbV1.unpack",
      "offset": [
        1579,
        1583
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 0
    },
    "461": {
      "fn": "ArbV1.unpack",
      "offset": [
        1555,
        1639
      ],
      "op": "DUP1",
      "path": "2"
    },
    "462": {
      "fn": "ArbV1.unpack",
      "offset": [
        1555,
        1639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "464": {
      "fn": "ArbV1.unpack",
      "offset": [
        1555,
        1639
      ],
      "op": "ADD",
      "path": "2"
    },
    "465": {
      "fn": "ArbV1.unpack",
      "offset": [
        1555,
        1639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "466": {
      "fn": "ArbV1.unpack",
      "offset": [
        1555,
        1639
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "467": {
      "fn": "ArbV1.unpack",
      "offset": [
        1555,
        1639
      ],
      "op": "DUP2",
      "path": "2"
    },
    "468": {
      "fn": "ArbV1.unpack",
      "offset": [
        1555,
        1639
      ],
      "op": "ADD",
      "path": "2"
    },
    "469": {
      "fn": "ArbV1.unpack",
      "offset": [
        1555,
        1639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "470": {
      "fn": "ArbV1.unpack",
      "offset": [
        1555,
        1639
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DF"
    },
    "473": {
      "fn": "ArbV1.unpack",
      "offset": [
        1555,
        1639
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "474": {
      "fn": "ArbV1.unpack",
      "offset": [
        1555,
        1639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "475": {
      "fn": "ArbV1.unpack",
      "offset": [
        1555,
        1639
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC32"
    },
    "478": {
      "fn": "ArbV1.unpack",
      "jump": "i",
      "offset": [
        1555,
        1639
      ],
      "op": "JUMP",
      "path": "2"
    },
    "479": {
      "fn": "ArbV1.unpack",
      "offset": [
        1555,
        1639
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "480": {
      "fn": "ArbV1.unpack",
      "offset": [
        1487,
        1639
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "481": {
      "fn": "ArbV1.unpack",
      "offset": [
        1487,
        1639
      ],
      "op": "SWAP15",
      "path": "2"
    },
    "482": {
      "fn": "ArbV1.unpack",
      "offset": [
        1487,
        1639
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "483": {
      "fn": "ArbV1.unpack",
      "offset": [
        1487,
        1639
      ],
      "op": "SWAP14",
      "path": "2"
    },
    "484": {
      "op": "POP"
    },
    "485": {
      "fn": "ArbV1.unpack",
      "offset": [
        1487,
        1639
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "486": {
      "fn": "ArbV1.unpack",
      "offset": [
        1487,
        1639
      ],
      "op": "SWAP12",
      "path": "2"
    },
    "487": {
      "op": "POP"
    },
    "488": {
      "fn": "ArbV1.unpack",
      "offset": [
        1487,
        1639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "489": {
      "fn": "ArbV1.unpack",
      "offset": [
        1487,
        1639
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "490": {
      "op": "POP"
    },
    "491": {
      "fn": "ArbV1.unpack",
      "offset": [
        1487,
        1639
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "492": {
      "op": "POP"
    },
    "493": {
      "fn": "ArbV1.unpack",
      "offset": [
        1487,
        1639
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "494": {
      "op": "POP"
    },
    "495": {
      "fn": "ArbV1.unpack",
      "offset": [
        1487,
        1639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "496": {
      "fn": "ArbV1.unpack",
      "offset": [
        1487,
        1639
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "497": {
      "op": "POP"
    },
    "498": {
      "fn": "ArbV1.unpack",
      "offset": [
        1261,
        1646
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "499": {
      "op": "POP"
    },
    "500": {
      "op": "POP"
    },
    "501": {
      "fn": "ArbV1.unpack",
      "jump": "o",
      "offset": [
        1261,
        1646
      ],
      "op": "JUMP",
      "path": "2"
    },
    "502": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "503": {
      "fn": "ArbV1.start",
      "offset": [
        915,
        933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "505": {
      "fn": "ArbV1.start",
      "offset": [
        945,
        957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x201"
    },
    "508": {
      "fn": "ArbV1.start",
      "offset": [
        952,
        956
      ],
      "op": "DUP3",
      "path": "2"
    },
    "509": {
      "fn": "ArbV1.start",
      "offset": [
        945,
        951
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C0"
    },
    "512": {
      "fn": "ArbV1.start",
      "jump": "i",
      "offset": [
        945,
        957
      ],
      "op": "JUMP",
      "path": "2"
    },
    "513": {
      "fn": "ArbV1.start",
      "offset": [
        945,
        957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "514": {
      "fn": "ArbV1.start",
      "offset": [
        910,
        957
      ],
      "op": "POP",
      "path": "2"
    },
    "515": {
      "fn": "ArbV1.start",
      "offset": [
        910,
        957
      ],
      "op": "POP",
      "path": "2"
    },
    "516": {
      "fn": "ArbV1.start",
      "offset": [
        910,
        957
      ],
      "op": "POP",
      "path": "2"
    },
    "517": {
      "fn": "ArbV1.start",
      "offset": [
        910,
        957
      ],
      "op": "POP",
      "path": "2"
    },
    "518": {
      "fn": "ArbV1.start",
      "offset": [
        910,
        957
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "519": {
      "fn": "ArbV1.start",
      "offset": [
        910,
        957
      ],
      "op": "POP",
      "path": "2"
    },
    "520": {
      "fn": "ArbV1.start",
      "offset": [
        910,
        957
      ],
      "op": "POP",
      "path": "2"
    },
    "521": {
      "fn": "ArbV1.start",
      "offset": [
        910,
        957
      ],
      "op": "POP",
      "path": "2"
    },
    "522": {
      "fn": "ArbV1.start",
      "offset": [
        996,
        1006
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 1
    },
    "523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "529": {
      "op": "SHL"
    },
    "530": {
      "op": "SUB"
    },
    "531": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1014
      ],
      "op": "AND",
      "path": "2"
    },
    "532": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1014
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDFE1681"
    },
    "537": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "539": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "540": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "DUP2",
      "path": "2"
    },
    "541": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "546": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "AND",
      "path": "2"
    },
    "547": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "549": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "SHL",
      "path": "2"
    },
    "550": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "DUP2",
      "path": "2"
    },
    "551": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "552": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "554": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "ADD",
      "path": "2"
    },
    "555": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "557": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "559": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "560": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "DUP1",
      "path": "2"
    },
    "561": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "DUP4",
      "path": "2"
    },
    "562": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "SUB",
      "path": "2"
    },
    "563": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "DUP2",
      "path": "2"
    },
    "564": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "DUP7",
      "path": "2"
    },
    "565": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "GAS",
      "path": "2"
    },
    "566": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "567": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "568": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "DUP1",
      "path": "2"
    },
    "569": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "570": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x247"
    },
    "573": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "574": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "575": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "577": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "DUP1",
      "path": "2"
    },
    "578": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "579": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "580": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "582": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "583": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "584": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "POP",
      "path": "2"
    },
    "585": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "POP",
      "path": "2"
    },
    "586": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "POP",
      "path": "2"
    },
    "587": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "POP",
      "path": "2"
    },
    "588": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "590": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "591": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "592": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "594": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "NOT",
      "path": "2"
    },
    "595": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "597": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "DUP3",
      "path": "2"
    },
    "598": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "ADD",
      "path": "2"
    },
    "599": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "AND",
      "path": "2"
    },
    "600": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "DUP3",
      "path": "2"
    },
    "601": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "ADD",
      "path": "2"
    },
    "602": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "DUP1",
      "path": "2"
    },
    "603": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "605": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "606": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "POP",
      "path": "2"
    },
    "607": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "DUP2",
      "path": "2"
    },
    "608": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "ADD",
      "path": "2"
    },
    "609": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "610": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26B"
    },
    "613": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "614": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "615": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD3C"
    },
    "618": {
      "fn": "ArbV1.start",
      "jump": "i",
      "offset": [
        990,
        1016
      ],
      "op": "JUMP",
      "path": "2"
    },
    "619": {
      "fn": "ArbV1.start",
      "offset": [
        990,
        1016
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "626": {
      "op": "SHL"
    },
    "627": {
      "op": "SUB"
    },
    "628": {
      "fn": "ArbV1.start",
      "offset": [
        980,
        1016
      ],
      "op": "AND",
      "path": "2"
    },
    "629": {
      "fn": "ArbV1.start",
      "offset": [
        980,
        986
      ],
      "op": "DUP4",
      "path": "2"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "636": {
      "op": "SHL"
    },
    "637": {
      "op": "SUB"
    },
    "638": {
      "fn": "ArbV1.start",
      "offset": [
        980,
        1016
      ],
      "op": "AND",
      "path": "2"
    },
    "639": {
      "branch": 16,
      "fn": "ArbV1.start",
      "offset": [
        980,
        1016
      ],
      "op": "EQ",
      "path": "2"
    },
    "640": {
      "fn": "ArbV1.start",
      "offset": [
        980,
        1056
      ],
      "op": "DUP1",
      "path": "2"
    },
    "641": {
      "fn": "ArbV1.start",
      "offset": [
        980,
        1056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FC"
    },
    "644": {
      "branch": 16,
      "fn": "ArbV1.start",
      "offset": [
        980,
        1056
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "645": {
      "fn": "ArbV1.start",
      "offset": [
        980,
        1056
      ],
      "op": "POP",
      "path": "2"
    },
    "646": {
      "fn": "ArbV1.start",
      "offset": [
        1036,
        1046
      ],
      "op": "DUP1",
      "path": "2"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "653": {
      "op": "SHL"
    },
    "654": {
      "op": "SUB"
    },
    "655": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1054
      ],
      "op": "AND",
      "path": "2"
    },
    "656": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1054
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD21220A7"
    },
    "661": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "663": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "664": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "DUP2",
      "path": "2"
    },
    "665": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "670": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "AND",
      "path": "2"
    },
    "671": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "673": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "SHL",
      "path": "2"
    },
    "674": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "DUP2",
      "path": "2"
    },
    "675": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "676": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "678": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "ADD",
      "path": "2"
    },
    "679": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "681": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "683": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "684": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "DUP1",
      "path": "2"
    },
    "685": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "DUP4",
      "path": "2"
    },
    "686": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "SUB",
      "path": "2"
    },
    "687": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "DUP2",
      "path": "2"
    },
    "688": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "DUP7",
      "path": "2"
    },
    "689": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "GAS",
      "path": "2"
    },
    "690": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "691": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "692": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "DUP1",
      "path": "2"
    },
    "693": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "694": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C3"
    },
    "697": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "698": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "699": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "701": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "DUP1",
      "path": "2"
    },
    "702": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "703": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "704": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "706": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "REVERT",
      "path": "2"
    },
    "707": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "708": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "POP",
      "path": "2"
    },
    "709": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "POP",
      "path": "2"
    },
    "710": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "POP",
      "path": "2"
    },
    "711": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "POP",
      "path": "2"
    },
    "712": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "714": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "715": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "716": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "718": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "NOT",
      "path": "2"
    },
    "719": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "721": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "DUP3",
      "path": "2"
    },
    "722": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "ADD",
      "path": "2"
    },
    "723": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "AND",
      "path": "2"
    },
    "724": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "DUP3",
      "path": "2"
    },
    "725": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "ADD",
      "path": "2"
    },
    "726": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "DUP1",
      "path": "2"
    },
    "727": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "729": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "730": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "POP",
      "path": "2"
    },
    "731": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "DUP2",
      "path": "2"
    },
    "732": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "ADD",
      "path": "2"
    },
    "733": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "734": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E7"
    },
    "737": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "738": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "739": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD3C"
    },
    "742": {
      "fn": "ArbV1.start",
      "jump": "i",
      "offset": [
        1030,
        1056
      ],
      "op": "JUMP",
      "path": "2"
    },
    "743": {
      "fn": "ArbV1.start",
      "offset": [
        1030,
        1056
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "750": {
      "op": "SHL"
    },
    "751": {
      "op": "SUB"
    },
    "752": {
      "fn": "ArbV1.start",
      "offset": [
        1020,
        1056
      ],
      "op": "AND",
      "path": "2"
    },
    "753": {
      "fn": "ArbV1.start",
      "offset": [
        1020,
        1026
      ],
      "op": "DUP4",
      "path": "2"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "op": "SUB"
    },
    "762": {
      "fn": "ArbV1.start",
      "offset": [
        1020,
        1056
      ],
      "op": "AND",
      "path": "2"
    },
    "763": {
      "branch": 17,
      "fn": "ArbV1.start",
      "offset": [
        1020,
        1056
      ],
      "op": "EQ",
      "path": "2"
    },
    "764": {
      "fn": "ArbV1.start",
      "offset": [
        980,
        1056
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "765": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34D"
    },
    "768": {
      "branch": 17,
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "769": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "771": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "772": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "776": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "778": {
      "op": "SHL"
    },
    "779": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "780": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "783": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "785": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "DUP3",
      "path": "2"
    },
    "786": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "ADD",
      "path": "2"
    },
    "787": {
      "op": "MSTORE"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "792": {
      "op": "DUP3"
    },
    "793": {
      "op": "ADD"
    },
    "794": {
      "op": "MSTORE"
    },
    "795": {
      "op": "PUSH32",
      "value": "0x496E636F7272656374205061697220666F7220746F6B656E0000000000000000"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "830": {
      "op": "DUP3"
    },
    "831": {
      "op": "ADD"
    },
    "832": {
      "op": "MSTORE"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "835": {
      "op": "ADD"
    },
    "836": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "837": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "839": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "840": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "DUP1",
      "path": "2"
    },
    "841": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "842": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "SUB",
      "path": "2"
    },
    "843": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "844": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "REVERT",
      "path": "2"
    },
    "845": {
      "fn": "ArbV1.start",
      "offset": [
        972,
        1085
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "846": {
      "fn": "ArbV1.start",
      "offset": [
        1099,
        1104
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "848": {
      "fn": "ArbV1.start",
      "offset": [
        1099,
        1113
      ],
      "op": "DUP1",
      "path": "2"
    },
    "849": {
      "fn": "ArbV1.start",
      "offset": [
        1099,
        1113
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "856": {
      "op": "SHL"
    },
    "857": {
      "op": "SUB"
    },
    "858": {
      "op": "NOT"
    },
    "859": {
      "fn": "ArbV1.start",
      "offset": [
        1099,
        1113
      ],
      "op": "AND",
      "path": "2"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "866": {
      "op": "SHL"
    },
    "867": {
      "op": "SUB"
    },
    "868": {
      "fn": "ArbV1.start",
      "offset": [
        1099,
        1113
      ],
      "op": "DUP6",
      "path": "2"
    },
    "869": {
      "fn": "ArbV1.start",
      "offset": [
        1099,
        1113
      ],
      "op": "AND",
      "path": "2"
    },
    "870": {
      "fn": "ArbV1.start",
      "offset": [
        1099,
        1113
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "871": {
      "fn": "ArbV1.start",
      "offset": [
        1099,
        1113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "872": {
      "fn": "ArbV1.start",
      "offset": [
        1099,
        1113
      ],
      "op": "OR",
      "path": "2"
    },
    "873": {
      "fn": "ArbV1.start",
      "offset": [
        1099,
        1113
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "874": {
      "fn": "ArbV1.start",
      "offset": [
        1099,
        1113
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "875": {
      "fn": "ArbV1.start",
      "offset": [
        1099,
        1113
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "876": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x40"
    },
    "878": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "879": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "884": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "886": {
      "op": "SHL"
    },
    "887": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "888": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "889": {
      "fn": "ArbV1.start",
      "offset": [
        1169,
        1173
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "890": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "892": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "DUP3",
      "path": "2"
    },
    "893": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "ADD",
      "path": "2"
    },
    "894": {
      "op": "MSTORE"
    },
    "895": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1160
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "900": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1160
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "903": {
      "op": "ADD"
    },
    "904": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "906": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "908": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "909": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "910": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "DUP4",
      "path": "2"
    },
    "911": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "SUB",
      "path": "2"
    },
    "912": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "913": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "DUP7",
      "path": "2"
    },
    "914": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "GAS",
      "path": "2"
    },
    "915": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "916": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "917": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "918": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "919": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A4"
    },
    "922": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "923": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "924": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "926": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "927": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "928": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "929": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "931": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "REVERT",
      "path": "2"
    },
    "932": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "933": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "POP",
      "path": "2"
    },
    "934": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "POP",
      "path": "2"
    },
    "935": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "POP",
      "path": "2"
    },
    "936": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "POP",
      "path": "2"
    },
    "937": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "939": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "940": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "941": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "943": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "NOT",
      "path": "2"
    },
    "944": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "946": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "DUP3",
      "path": "2"
    },
    "947": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "ADD",
      "path": "2"
    },
    "948": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "AND",
      "path": "2"
    },
    "949": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "DUP3",
      "path": "2"
    },
    "950": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "ADD",
      "path": "2"
    },
    "951": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "952": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "954": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "955": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "POP",
      "path": "2"
    },
    "956": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "957": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "ADD",
      "path": "2"
    },
    "958": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "959": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C8"
    },
    "962": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "963": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "964": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD59"
    },
    "967": {
      "fn": "ArbV1.start",
      "jump": "i",
      "offset": [
        1137,
        1175
      ],
      "op": "JUMP",
      "path": "2"
    },
    "968": {
      "fn": "ArbV1.start",
      "offset": [
        1137,
        1175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "969": {
      "fn": "ArbV1.start",
      "offset": [
        1127,
        1134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "971": {
      "fn": "ArbV1.start",
      "offset": [
        1127,
        1175
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "972": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x40"
    },
    "974": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "975": {
      "op": "PUSH4",
      "value": "0x22C0D9F"
    },
    "980": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "982": {
      "op": "SHL"
    },
    "983": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "984": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "991": {
      "op": "SHL"
    },
    "992": {
      "op": "SUB"
    },
    "993": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1211
      ],
      "op": "DUP3",
      "path": "2"
    },
    "994": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1211
      ],
      "op": "AND",
      "path": "2"
    },
    "995": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1211
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "996": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1211
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x22C0D9F"
    },
    "1001": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1211
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1002": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FD"
    },
    "1005": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1006": {
      "fn": "ArbV1.start",
      "offset": [
        1212,
        1219
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1007": {
      "fn": "ArbV1.start",
      "offset": [
        1212,
        1219
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1008": {
      "fn": "ArbV1.start",
      "offset": [
        1220,
        1227
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1009": {
      "fn": "ArbV1.start",
      "offset": [
        1220,
        1227
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1010": {
      "fn": "ArbV1.start",
      "offset": [
        1228,
        1238
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1011": {
      "fn": "ArbV1.start",
      "offset": [
        1228,
        1238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1012": {
      "fn": "ArbV1.start",
      "offset": [
        1239,
        1243
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1013": {
      "fn": "ArbV1.start",
      "offset": [
        1239,
        1243
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1014": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1016": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "ADD",
      "path": "2"
    },
    "1017": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD72"
    },
    "1020": {
      "fn": "ArbV1.start",
      "jump": "i",
      "offset": [
        1189,
        1244
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1021": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1022": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1024": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1026": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1027": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1028": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1029": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "SUB",
      "path": "2"
    },
    "1030": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1031": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1033": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1034": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1035": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1036": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1037": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1038": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1039": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x417"
    },
    "1042": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1043": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1045": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1046": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1047": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1048": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "POP",
      "path": "2"
    },
    "1049": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "GAS",
      "path": "2"
    },
    "1050": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "CALL",
      "path": "2"
    },
    "1051": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1052": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1053": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1054": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42B"
    },
    "1057": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1058": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1059": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1061": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1062": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1063": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1064": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1066": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1067": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1068": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "POP",
      "path": "2"
    },
    "1069": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "POP",
      "path": "2"
    },
    "1070": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "POP",
      "path": "2"
    },
    "1071": {
      "fn": "ArbV1.start",
      "offset": [
        1189,
        1244
      ],
      "op": "POP",
      "path": "2"
    },
    "1072": {
      "fn": "ArbV1.start",
      "offset": [
        896,
        1255
      ],
      "op": "POP",
      "path": "2"
    },
    "1073": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "POP",
      "path": "2"
    },
    "1074": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "POP",
      "path": "2"
    },
    "1075": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "POP",
      "path": "2"
    },
    "1076": {
      "fn": "ArbV1.start",
      "offset": [
        777,
        1255
      ],
      "op": "POP",
      "path": "2"
    },
    "1077": {
      "fn": "ArbV1.start",
      "jump": "o",
      "offset": [
        777,
        1255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1078": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1079": {
      "offset": [
        645,
        650
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1081": {
      "fn": "ArbV1.sendToken",
      "offset": [
        645,
        650
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1088": {
      "op": "SHL"
    },
    "1089": {
      "op": "SUB"
    },
    "1090": {
      "offset": [
        645,
        650
      ],
      "op": "AND",
      "path": "2"
    },
    "1091": {
      "offset": [
        654,
        664
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1092": {
      "offset": [
        645,
        664
      ],
      "op": "EQ",
      "path": "2"
    },
    "1093": {
      "offset": [
        637,
        665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44D"
    },
    "1096": {
      "offset": [
        637,
        665
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1097": {
      "fn": "ArbV1.sendToken",
      "offset": [
        637,
        665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1099": {
      "fn": "ArbV1.sendToken",
      "offset": [
        637,
        665
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1100": {
      "fn": "ArbV1.sendToken",
      "offset": [
        637,
        665
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1101": {
      "fn": "ArbV1.sendToken",
      "offset": [
        637,
        665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1102": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3334,
        3372
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 5,
      "value": "0x458"
    },
    "1105": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3345,
        3353
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1106": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3354,
        3364
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1107": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3365,
        3371
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1108": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3334,
        3344
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x54C"
    },
    "1111": {
      "fn": "ArbV1.sendToken",
      "jump": "i",
      "offset": [
        3334,
        3372
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1112": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3334,
        3372
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1113": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "POP",
      "path": "2"
    },
    "1114": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "POP",
      "path": "2"
    },
    "1115": {
      "fn": "ArbV1.sendToken",
      "offset": [
        3236,
        3379
      ],
      "op": "POP",
      "path": "2"
    },
    "1116": {
      "fn": "ArbV1.sendToken",
      "jump": "o",
      "offset": [
        3236,
        3379
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1117": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1118": {
      "offset": [
        645,
        650
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1120": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        645,
        650
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1127": {
      "op": "SHL"
    },
    "1128": {
      "op": "SUB"
    },
    "1129": {
      "offset": [
        645,
        650
      ],
      "op": "AND",
      "path": "2"
    },
    "1130": {
      "offset": [
        654,
        664
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1131": {
      "offset": [
        645,
        664
      ],
      "op": "EQ",
      "path": "2"
    },
    "1132": {
      "offset": [
        637,
        665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x474"
    },
    "1135": {
      "offset": [
        637,
        665
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1136": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        637,
        665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1138": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        637,
        665
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1139": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        637,
        665
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1140": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        637,
        665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1141": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2904,
        2931
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 6,
      "value": "0x47E"
    },
    "1144": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2914,
        2923
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1145": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2924,
        2930
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1146": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2904,
        2913
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C2"
    },
    "1149": {
      "fn": "ArbV1.sendCoin",
      "jump": "i",
      "offset": [
        2904,
        2931
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1150": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2904,
        2931
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1151": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "POP",
      "path": "2"
    },
    "1152": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        2817,
        2938
      ],
      "op": "POP",
      "path": "2"
    },
    "1153": {
      "fn": "ArbV1.sendCoin",
      "jump": "o",
      "offset": [
        2817,
        2938
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1154": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3385,
        3473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1155": {
      "offset": [
        645,
        650
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1157": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        645,
        650
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1164": {
      "op": "SHL"
    },
    "1165": {
      "op": "SUB"
    },
    "1166": {
      "offset": [
        645,
        650
      ],
      "op": "AND",
      "path": "2"
    },
    "1167": {
      "offset": [
        654,
        664
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1168": {
      "offset": [
        645,
        664
      ],
      "op": "EQ",
      "path": "2"
    },
    "1169": {
      "offset": [
        637,
        665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x499"
    },
    "1172": {
      "offset": [
        637,
        665
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1173": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        637,
        665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1175": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        637,
        665
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1176": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        637,
        665
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1177": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        637,
        665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1178": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3452,
        3457
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 7,
      "value": "0x0"
    },
    "1180": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1181": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1188": {
      "op": "SHL"
    },
    "1189": {
      "op": "SUB"
    },
    "1190": {
      "op": "NOT"
    },
    "1191": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "AND",
      "path": "2"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1198": {
      "op": "SHL"
    },
    "1199": {
      "op": "SUB"
    },
    "1200": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1201": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1202": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1203": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "AND",
      "path": "2"
    },
    "1204": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1205": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1206": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1207": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "OR",
      "path": "2"
    },
    "1208": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1209": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        3452,
        3466
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1210": {
      "fn": "ArbV1.changeOwner",
      "jump": "o",
      "offset": [
        3385,
        3473
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1211": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3479,
        3586
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1212": {
      "offset": [
        645,
        650
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1214": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        645,
        650
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1221": {
      "op": "SHL"
    },
    "1222": {
      "op": "SUB"
    },
    "1223": {
      "offset": [
        645,
        650
      ],
      "op": "AND",
      "path": "2"
    },
    "1224": {
      "offset": [
        654,
        664
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1225": {
      "offset": [
        645,
        664
      ],
      "op": "EQ",
      "path": "2"
    },
    "1226": {
      "offset": [
        637,
        665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D2"
    },
    "1229": {
      "offset": [
        637,
        665
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1230": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        637,
        665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1232": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        637,
        665
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1233": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        637,
        665
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1234": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        637,
        665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1235": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3560
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x1"
    },
    "1237": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3570
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1238": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3570
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1239": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3570
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1240": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3570
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1241": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3570
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1246": {
      "op": "SHL"
    },
    "1247": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3570
      ],
      "op": "MUL",
      "path": "2"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1252": {
      "op": "SHL"
    },
    "1253": {
      "op": "NOT"
    },
    "1254": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1255": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3570
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1256": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3570
      ],
      "op": "AND",
      "path": "2"
    },
    "1257": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3570
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1258": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1259": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3570
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1260": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3570
      ],
      "op": "OR",
      "path": "2"
    },
    "1261": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1262": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        3546,
        3570
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1263": {
      "fn": "ArbV1.changeCashout",
      "jump": "o",
      "offset": [
        3479,
        3586
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1264": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1265": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x40"
    },
    "1267": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1268": {
      "op": "PUSH4",
      "value": "0xBC25CF77"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1275": {
      "op": "SHL"
    },
    "1276": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1277": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1278": {
      "fn": "ArbV1.skim",
      "offset": [
        3663,
        3673
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1279": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1281": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1282": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "ADD",
      "path": "2"
    },
    "1283": {
      "op": "MSTORE"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1290": {
      "op": "SHL"
    },
    "1291": {
      "op": "SUB"
    },
    "1292": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3662
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1293": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3662
      ],
      "op": "AND",
      "path": "2"
    },
    "1294": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3662
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1295": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3662
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBC25CF77"
    },
    "1300": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3662
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1303": {
      "op": "ADD"
    },
    "1304": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1306": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1308": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1309": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1310": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1311": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "SUB",
      "path": "2"
    },
    "1312": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1313": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1315": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1316": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1317": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1318": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1319": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1320": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1321": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x531"
    },
    "1324": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1325": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1327": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1328": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1329": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1330": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "POP",
      "path": "2"
    },
    "1331": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "GAS",
      "path": "2"
    },
    "1332": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "CALL",
      "path": "2"
    },
    "1333": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1334": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1335": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1336": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x545"
    },
    "1339": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1340": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1341": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1343": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1344": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1345": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1346": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1348": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1349": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1350": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "POP",
      "path": "2"
    },
    "1351": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "POP",
      "path": "2"
    },
    "1352": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "POP",
      "path": "2"
    },
    "1353": {
      "fn": "ArbV1.skim",
      "offset": [
        3642,
        3674
      ],
      "op": "POP",
      "path": "2"
    },
    "1354": {
      "fn": "ArbV1.skim",
      "offset": [
        3591,
        3681
      ],
      "op": "POP",
      "path": "2"
    },
    "1355": {
      "fn": "ArbV1.skim",
      "jump": "o",
      "offset": [
        3591,
        3681
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1356": {
      "fn": "ArbV1._sendToken",
      "offset": [
        2944,
        3231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1357": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 10,
      "value": "0x40"
    },
    "1359": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1360": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1367": {
      "op": "SHL"
    },
    "1368": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1369": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1370": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3076,
        3080
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "1371": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1373": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1374": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "ADD",
      "path": "2"
    },
    "1375": {
      "op": "MSTORE"
    },
    "1376": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3097,
        3098
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1378": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3097,
        3098
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1379": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3094
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C3"
    },
    "1382": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3094
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1383": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3087,
        3093
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1384": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3087,
        3093
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1391": {
      "op": "SHL"
    },
    "1392": {
      "op": "SUB"
    },
    "1393": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3067
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1394": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3067
      ],
      "op": "AND",
      "path": "2"
    },
    "1395": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1396": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3067
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "1401": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1404": {
      "op": "ADD"
    },
    "1405": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1407": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1409": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1410": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1411": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1412": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "SUB",
      "path": "2"
    },
    "1413": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1414": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1415": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "GAS",
      "path": "2"
    },
    "1416": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "1417": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1418": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1419": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1420": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x599"
    },
    "1423": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1424": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1425": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1427": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1428": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1429": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1430": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1432": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1433": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1434": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "POP",
      "path": "2"
    },
    "1435": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "POP",
      "path": "2"
    },
    "1436": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "POP",
      "path": "2"
    },
    "1437": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "POP",
      "path": "2"
    },
    "1438": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1440": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1441": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1442": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1444": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "NOT",
      "path": "2"
    },
    "1445": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1447": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1448": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "ADD",
      "path": "2"
    },
    "1449": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "AND",
      "path": "2"
    },
    "1450": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1451": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "ADD",
      "path": "2"
    },
    "1452": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1453": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1455": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1456": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "POP",
      "path": "2"
    },
    "1457": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1458": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "ADD",
      "path": "2"
    },
    "1459": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1460": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5BD"
    },
    "1463": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1464": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1465": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD59"
    },
    "1468": {
      "fn": "ArbV1._sendToken",
      "jump": "i",
      "offset": [
        3041,
        3082
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1469": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1470": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3086
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1471": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3086
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x79B"
    },
    "1474": {
      "fn": "ArbV1._sendToken",
      "jump": "i",
      "offset": [
        3041,
        3094
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1475": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3094
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1476": {
      "branch": 18,
      "fn": "ArbV1._sendToken",
      "offset": [
        3041,
        3098
      ],
      "op": "GT",
      "path": "2"
    },
    "1477": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3033,
        3120
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x605"
    },
    "1480": {
      "branch": 18,
      "fn": "ArbV1._sendToken",
      "offset": [
        3033,
        3120
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1481": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3033,
        3120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1483": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3033,
        3120
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1484": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1490": {
      "op": "SHL"
    },
    "1491": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3033,
        3120
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1492": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3033,
        3120
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1495": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3033,
        3120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1497": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3033,
        3120
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1498": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3033,
        3120
      ],
      "op": "ADD",
      "path": "2"
    },
    "1499": {
      "op": "MSTORE"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1504": {
      "op": "DUP3"
    },
    "1505": {
      "op": "ADD"
    },
    "1506": {
      "op": "MSTORE"
    },
    "1507": {
      "op": "PUSH18",
      "value": "0x496E73756666696369656E742066756E6473"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1528": {
      "op": "SHL"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1531": {
      "op": "DUP3"
    },
    "1532": {
      "op": "ADD"
    },
    "1533": {
      "op": "MSTORE"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1536": {
      "op": "ADD"
    },
    "1537": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3033,
        3120
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x344"
    },
    "1540": {
      "op": "JUMP"
    },
    "1541": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3033,
        3120
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1542": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0x40"
    },
    "1544": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1545": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1552": {
      "op": "SHL"
    },
    "1553": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1554": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1561": {
      "op": "SHL"
    },
    "1562": {
      "op": "SUB"
    },
    "1563": {
      "op": "DUP4"
    },
    "1564": {
      "op": "DUP2"
    },
    "1565": {
      "op": "AND"
    },
    "1566": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1568": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1569": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "ADD",
      "path": "2"
    },
    "1570": {
      "op": "MSTORE"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1573": {
      "op": "DUP3"
    },
    "1574": {
      "op": "ADD"
    },
    "1575": {
      "op": "DUP4"
    },
    "1576": {
      "op": "SWAP1"
    },
    "1577": {
      "op": "MSTORE"
    },
    "1578": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3155
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1579": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3155
      ],
      "op": "AND",
      "path": "2"
    },
    "1580": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3155
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1581": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3155
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "1586": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3155
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1589": {
      "op": "ADD"
    },
    "1590": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1592": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1594": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1595": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1596": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1597": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "SUB",
      "path": "2"
    },
    "1598": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1599": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1601": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1602": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "GAS",
      "path": "2"
    },
    "1603": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "CALL",
      "path": "2"
    },
    "1604": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1605": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1606": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1607": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x654"
    },
    "1610": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1611": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1612": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1614": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1615": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1616": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1617": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1619": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1620": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1621": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "POP",
      "path": "2"
    },
    "1622": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "POP",
      "path": "2"
    },
    "1623": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "POP",
      "path": "2"
    },
    "1624": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "POP",
      "path": "2"
    },
    "1625": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1627": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1628": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1629": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1631": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "NOT",
      "path": "2"
    },
    "1632": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1634": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1635": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "ADD",
      "path": "2"
    },
    "1636": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "AND",
      "path": "2"
    },
    "1637": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1638": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "ADD",
      "path": "2"
    },
    "1639": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1640": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1642": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1643": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "POP",
      "path": "2"
    },
    "1644": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1645": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "ADD",
      "path": "2"
    },
    "1646": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1647": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x678"
    },
    "1650": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1651": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1652": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA9"
    },
    "1655": {
      "fn": "ArbV1._sendToken",
      "jump": "i",
      "offset": [
        3130,
        3175
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1656": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3130,
        3175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1657": {
      "op": "POP"
    },
    "1658": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3190,
        3224
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x40"
    },
    "1660": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3190,
        3224
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1661": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3190,
        3224
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "op": "SUB"
    },
    "1670": {
      "op": "DUP1"
    },
    "1671": {
      "op": "DUP7"
    },
    "1672": {
      "op": "AND"
    },
    "1673": {
      "op": "DUP3"
    },
    "1674": {
      "op": "MSTORE"
    },
    "1675": {
      "op": "DUP5"
    },
    "1676": {
      "op": "AND"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1679": {
      "op": "DUP3"
    },
    "1680": {
      "op": "ADD"
    },
    "1681": {
      "op": "MSTORE"
    },
    "1682": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3190,
        3224
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x81FF37C0A846F0FA29FD65BC885AC344052231414004D0E16A59678C4018B3A3"
    },
    "1715": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3190,
        3224
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1716": {
      "op": "ADD"
    },
    "1717": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3190,
        3224
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1718": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3190,
        3224
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1720": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3190,
        3224
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1721": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3190,
        3224
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1722": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3190,
        3224
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1723": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3190,
        3224
      ],
      "op": "SUB",
      "path": "2"
    },
    "1724": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3190,
        3224
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1725": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3190,
        3224
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1726": {
      "fn": "ArbV1._sendToken",
      "offset": [
        2944,
        3231
      ],
      "op": "POP",
      "path": "2"
    },
    "1727": {
      "fn": "ArbV1._sendToken",
      "offset": [
        2944,
        3231
      ],
      "op": "POP",
      "path": "2"
    },
    "1728": {
      "fn": "ArbV1._sendToken",
      "offset": [
        2944,
        3231
      ],
      "op": "POP",
      "path": "2"
    },
    "1729": {
      "fn": "ArbV1._sendToken",
      "jump": "o",
      "offset": [
        2944,
        3231
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1730": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2581,
        2810
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1731": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2659,
        2668
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1733": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2683
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1740": {
      "op": "SHL"
    },
    "1741": {
      "op": "SUB"
    },
    "1742": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2688
      ],
      "op": "AND",
      "path": "2"
    },
    "1743": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2696,
        2702
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1744": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1746": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1747": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1749": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1751": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1752": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1753": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1754": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "SUB",
      "path": "2"
    },
    "1755": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1756": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1757": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1758": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "GAS",
      "path": "2"
    },
    "1759": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "CALL",
      "path": "2"
    },
    "1760": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1761": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "POP",
      "path": "2"
    },
    "1762": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "POP",
      "path": "2"
    },
    "1763": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "POP",
      "path": "2"
    },
    "1764": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1765": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1766": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1768": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1769": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "EQ",
      "path": "2"
    },
    "1770": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70F"
    },
    "1773": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1774": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1776": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1777": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1778": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "POP",
      "path": "2"
    },
    "1779": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1781": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "NOT",
      "path": "2"
    },
    "1782": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "1784": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1785": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "ADD",
      "path": "2"
    },
    "1786": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "AND",
      "path": "2"
    },
    "1787": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1788": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "ADD",
      "path": "2"
    },
    "1789": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1791": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1792": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1793": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1794": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1795": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1796": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1798": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1800": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1801": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "ADD",
      "path": "2"
    },
    "1802": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1803": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x714"
    },
    "1806": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1807": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1808": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1810": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1811": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "POP",
      "path": "2"
    },
    "1812": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1813": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2674,
        2707
      ],
      "op": "POP",
      "path": "2"
    },
    "1814": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2658,
        2707
      ],
      "op": "POP",
      "path": "2"
    },
    "1815": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2658,
        2707
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1816": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2658,
        2707
      ],
      "op": "POP",
      "path": "2"
    },
    "1817": {
      "branch": 19,
      "fn": "ArbV1._sendCoin",
      "offset": [
        2725,
        2729
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 13
    },
    "1818": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2717,
        2754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x75C"
    },
    "1821": {
      "branch": 19,
      "fn": "ArbV1._sendCoin",
      "offset": [
        2717,
        2754
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1822": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2717,
        2754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1824": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2717,
        2754
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1825": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1831": {
      "op": "SHL"
    },
    "1832": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2717,
        2754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1833": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2717,
        2754
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1836": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2717,
        2754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1838": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2717,
        2754
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1839": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2717,
        2754
      ],
      "op": "ADD",
      "path": "2"
    },
    "1840": {
      "op": "MSTORE"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1845": {
      "op": "DUP3"
    },
    "1846": {
      "op": "ADD"
    },
    "1847": {
      "op": "MSTORE"
    },
    "1848": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "1871": {
      "op": "SHL"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1874": {
      "op": "DUP3"
    },
    "1875": {
      "op": "ADD"
    },
    "1876": {
      "op": "MSTORE"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1879": {
      "op": "ADD"
    },
    "1880": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2717,
        2754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x344"
    },
    "1883": {
      "op": "JUMP"
    },
    "1884": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2717,
        2754
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1885": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2769,
        2803
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0x40"
    },
    "1887": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2769,
        2803
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1888": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2769,
        2803
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1889": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2790,
        2791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1891": {
      "op": "DUP2"
    },
    "1892": {
      "op": "MSTORE"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1899": {
      "op": "SHL"
    },
    "1900": {
      "op": "SUB"
    },
    "1901": {
      "op": "DUP6"
    },
    "1902": {
      "op": "AND"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1905": {
      "op": "DUP3"
    },
    "1906": {
      "op": "ADD"
    },
    "1907": {
      "op": "MSTORE"
    },
    "1908": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2769,
        2803
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x81FF37C0A846F0FA29FD65BC885AC344052231414004D0E16A59678C4018B3A3"
    },
    "1941": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2769,
        2803
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1942": {
      "op": "ADD"
    },
    "1943": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        2769,
        2803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B5"
    },
    "1946": {
      "op": "JUMP"
    },
    "1947": {
      "fn": "SafeMath.sub",
      "offset": [
        3108,
        3204
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1948": {
      "fn": "SafeMath.sub",
      "offset": [
        3166,
        3173
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1950": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 15,
      "value": "0x7A7"
    },
    "1953": {
      "fn": "SafeMath.sub",
      "offset": [
        3196,
        3197
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1954": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1955": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC6"
    },
    "1958": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3192,
        3197
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1959": {
      "fn": "SafeMath.sub",
      "offset": [
        3192,
        3197
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1960": {
      "fn": "SafeMath.sub",
      "offset": [
        3185,
        3197
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1961": {
      "fn": "SafeMath.sub",
      "offset": [
        3108,
        3204
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1962": {
      "op": "POP"
    },
    "1963": {
      "op": "POP"
    },
    "1964": {
      "op": "POP"
    },
    "1965": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3108,
        3204
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1966": {
      "op": "JUMPDEST"
    },
    "1967": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1974": {
      "op": "SHL"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1977": {
      "op": "MSTORE"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1982": {
      "op": "MSTORE"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1987": {
      "op": "REVERT"
    },
    "1988": {
      "op": "JUMPDEST"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1991": {
      "op": "MLOAD"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1994": {
      "op": "DUP3"
    },
    "1995": {
      "op": "ADD"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1998": {
      "op": "NOT"
    },
    "1999": {
      "op": "AND"
    },
    "2000": {
      "op": "DUP2"
    },
    "2001": {
      "op": "ADD"
    },
    "2002": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2011": {
      "op": "DUP2"
    },
    "2012": {
      "op": "GT"
    },
    "2013": {
      "op": "DUP3"
    },
    "2014": {
      "op": "DUP3"
    },
    "2015": {
      "op": "LT"
    },
    "2016": {
      "op": "OR"
    },
    "2017": {
      "op": "ISZERO"
    },
    "2018": {
      "op": "PUSH2",
      "value": "0x7ED"
    },
    "2021": {
      "op": "JUMPI"
    },
    "2022": {
      "op": "PUSH2",
      "value": "0x7ED"
    },
    "2025": {
      "op": "PUSH2",
      "value": "0x7AE"
    },
    "2028": {
      "jump": "i",
      "op": "JUMP"
    },
    "2029": {
      "op": "JUMPDEST"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2032": {
      "op": "MSTORE"
    },
    "2033": {
      "op": "SWAP2"
    },
    "2034": {
      "op": "SWAP1"
    },
    "2035": {
      "op": "POP"
    },
    "2036": {
      "jump": "o",
      "op": "JUMP"
    },
    "2037": {
      "op": "JUMPDEST"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2040": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2049": {
      "op": "DUP3"
    },
    "2050": {
      "op": "GT"
    },
    "2051": {
      "op": "ISZERO"
    },
    "2052": {
      "op": "PUSH2",
      "value": "0x80F"
    },
    "2055": {
      "op": "JUMPI"
    },
    "2056": {
      "op": "PUSH2",
      "value": "0x80F"
    },
    "2059": {
      "op": "PUSH2",
      "value": "0x7AE"
    },
    "2062": {
      "jump": "i",
      "op": "JUMP"
    },
    "2063": {
      "op": "JUMPDEST"
    },
    "2064": {
      "op": "POP"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2067": {
      "op": "ADD"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2070": {
      "op": "NOT"
    },
    "2071": {
      "op": "AND"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2074": {
      "op": "ADD"
    },
    "2075": {
      "op": "SWAP1"
    },
    "2076": {
      "jump": "o",
      "op": "JUMP"
    },
    "2077": {
      "op": "JUMPDEST"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2080": {
      "op": "DUP3"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2083": {
      "op": "DUP4"
    },
    "2084": {
      "op": "ADD"
    },
    "2085": {
      "op": "SLT"
    },
    "2086": {
      "op": "PUSH2",
      "value": "0x82E"
    },
    "2089": {
      "op": "JUMPI"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2092": {
      "op": "DUP1"
    },
    "2093": {
      "op": "REVERT"
    },
    "2094": {
      "op": "JUMPDEST"
    },
    "2095": {
      "op": "DUP2"
    },
    "2096": {
      "op": "CALLDATALOAD"
    },
    "2097": {
      "op": "PUSH2",
      "value": "0x841"
    },
    "2100": {
      "op": "PUSH2",
      "value": "0x83C"
    },
    "2103": {
      "op": "DUP3"
    },
    "2104": {
      "op": "PUSH2",
      "value": "0x7F5"
    },
    "2107": {
      "jump": "i",
      "op": "JUMP"
    },
    "2108": {
      "op": "JUMPDEST"
    },
    "2109": {
      "op": "PUSH2",
      "value": "0x7C4"
    },
    "2112": {
      "jump": "i",
      "op": "JUMP"
    },
    "2113": {
      "op": "JUMPDEST"
    },
    "2114": {
      "op": "DUP2"
    },
    "2115": {
      "op": "DUP2"
    },
    "2116": {
      "op": "MSTORE"
    },
    "2117": {
      "op": "DUP5"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2120": {
      "op": "DUP4"
    },
    "2121": {
      "op": "DUP7"
    },
    "2122": {
      "op": "ADD"
    },
    "2123": {
      "op": "ADD"
    },
    "2124": {
      "op": "GT"
    },
    "2125": {
      "op": "ISZERO"
    },
    "2126": {
      "op": "PUSH2",
      "value": "0x856"
    },
    "2129": {
      "op": "JUMPI"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2132": {
      "op": "DUP1"
    },
    "2133": {
      "op": "REVERT"
    },
    "2134": {
      "op": "JUMPDEST"
    },
    "2135": {
      "op": "DUP2"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2138": {
      "op": "DUP6"
    },
    "2139": {
      "op": "ADD"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2142": {
      "op": "DUP4"
    },
    "2143": {
      "op": "ADD"
    },
    "2144": {
      "op": "CALLDATACOPY"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2147": {
      "op": "SWAP2"
    },
    "2148": {
      "op": "DUP2"
    },
    "2149": {
      "op": "ADD"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2152": {
      "op": "ADD"
    },
    "2153": {
      "op": "SWAP2"
    },
    "2154": {
      "op": "SWAP1"
    },
    "2155": {
      "op": "SWAP2"
    },
    "2156": {
      "op": "MSTORE"
    },
    "2157": {
      "op": "SWAP4"
    },
    "2158": {
      "op": "SWAP3"
    },
    "2159": {
      "op": "POP"
    },
    "2160": {
      "op": "POP"
    },
    "2161": {
      "op": "POP"
    },
    "2162": {
      "jump": "o",
      "op": "JUMP"
    },
    "2163": {
      "op": "JUMPDEST"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2168": {
      "op": "DUP3"
    },
    "2169": {
      "op": "DUP5"
    },
    "2170": {
      "op": "SUB"
    },
    "2171": {
      "op": "SLT"
    },
    "2172": {
      "op": "ISZERO"
    },
    "2173": {
      "op": "PUSH2",
      "value": "0x885"
    },
    "2176": {
      "op": "JUMPI"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2179": {
      "op": "DUP1"
    },
    "2180": {
      "op": "REVERT"
    },
    "2181": {
      "op": "JUMPDEST"
    },
    "2182": {
      "op": "DUP2"
    },
    "2183": {
      "op": "CALLDATALOAD"
    },
    "2184": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2193": {
      "op": "DUP2"
    },
    "2194": {
      "op": "GT"
    },
    "2195": {
      "op": "ISZERO"
    },
    "2196": {
      "op": "PUSH2",
      "value": "0x89C"
    },
    "2199": {
      "op": "JUMPI"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2202": {
      "op": "DUP1"
    },
    "2203": {
      "op": "REVERT"
    },
    "2204": {
      "op": "JUMPDEST"
    },
    "2205": {
      "op": "PUSH2",
      "value": "0x8A8"
    },
    "2208": {
      "op": "DUP5"
    },
    "2209": {
      "op": "DUP3"
    },
    "2210": {
      "op": "DUP6"
    },
    "2211": {
      "op": "ADD"
    },
    "2212": {
      "op": "PUSH2",
      "value": "0x81D"
    },
    "2215": {
      "jump": "i",
      "op": "JUMP"
    },
    "2216": {
      "op": "JUMPDEST"
    },
    "2217": {
      "op": "SWAP5"
    },
    "2218": {
      "op": "SWAP4"
    },
    "2219": {
      "op": "POP"
    },
    "2220": {
      "op": "POP"
    },
    "2221": {
      "op": "POP"
    },
    "2222": {
      "op": "POP"
    },
    "2223": {
      "jump": "o",
      "op": "JUMP"
    },
    "2224": {
      "op": "JUMPDEST"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2227": {
      "op": "JUMPDEST"
    },
    "2228": {
      "op": "DUP4"
    },
    "2229": {
      "op": "DUP2"
    },
    "2230": {
      "op": "LT"
    },
    "2231": {
      "op": "ISZERO"
    },
    "2232": {
      "op": "PUSH2",
      "value": "0x8CB"
    },
    "2235": {
      "op": "JUMPI"
    },
    "2236": {
      "op": "DUP2"
    },
    "2237": {
      "op": "DUP2"
    },
    "2238": {
      "op": "ADD"
    },
    "2239": {
      "op": "MLOAD"
    },
    "2240": {
      "op": "DUP4"
    },
    "2241": {
      "op": "DUP3"
    },
    "2242": {
      "op": "ADD"
    },
    "2243": {
      "op": "MSTORE"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2246": {
      "op": "ADD"
    },
    "2247": {
      "op": "PUSH2",
      "value": "0x8B3"
    },
    "2250": {
      "op": "JUMP"
    },
    "2251": {
      "op": "JUMPDEST"
    },
    "2252": {
      "op": "DUP4"
    },
    "2253": {
      "op": "DUP2"
    },
    "2254": {
      "op": "GT"
    },
    "2255": {
      "op": "ISZERO"
    },
    "2256": {
      "op": "PUSH2",
      "value": "0x8DA"
    },
    "2259": {
      "op": "JUMPI"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2262": {
      "op": "DUP5"
    },
    "2263": {
      "op": "DUP5"
    },
    "2264": {
      "op": "ADD"
    },
    "2265": {
      "op": "MSTORE"
    },
    "2266": {
      "op": "JUMPDEST"
    },
    "2267": {
      "op": "POP"
    },
    "2268": {
      "op": "POP"
    },
    "2269": {
      "op": "POP"
    },
    "2270": {
      "op": "POP"
    },
    "2271": {
      "jump": "o",
      "op": "JUMP"
    },
    "2272": {
      "op": "JUMPDEST"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2275": {
      "op": "DUP2"
    },
    "2276": {
      "op": "MLOAD"
    },
    "2277": {
      "op": "DUP1"
    },
    "2278": {
      "op": "DUP5"
    },
    "2279": {
      "op": "MSTORE"
    },
    "2280": {
      "op": "PUSH2",
      "value": "0x8F8"
    },
    "2283": {
      "op": "DUP2"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2286": {
      "op": "DUP7"
    },
    "2287": {
      "op": "ADD"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2290": {
      "op": "DUP7"
    },
    "2291": {
      "op": "ADD"
    },
    "2292": {
      "op": "PUSH2",
      "value": "0x8B0"
    },
    "2295": {
      "jump": "i",
      "op": "JUMP"
    },
    "2296": {
      "op": "JUMPDEST"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2299": {
      "op": "ADD"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2302": {
      "op": "NOT"
    },
    "2303": {
      "op": "AND"
    },
    "2304": {
      "op": "SWAP3"
    },
    "2305": {
      "op": "SWAP1"
    },
    "2306": {
      "op": "SWAP3"
    },
    "2307": {
      "op": "ADD"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2310": {
      "op": "ADD"
    },
    "2311": {
      "op": "SWAP3"
    },
    "2312": {
      "op": "SWAP2"
    },
    "2313": {
      "op": "POP"
    },
    "2314": {
      "op": "POP"
    },
    "2315": {
      "jump": "o",
      "op": "JUMP"
    },
    "2316": {
      "op": "JUMPDEST"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2319": {
      "op": "DUP3"
    },
    "2320": {
      "op": "DUP3"
    },
    "2321": {
      "op": "MLOAD"
    },
    "2322": {
      "op": "DUP1"
    },
    "2323": {
      "op": "DUP6"
    },
    "2324": {
      "op": "MSTORE"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2327": {
      "op": "DUP1"
    },
    "2328": {
      "op": "DUP7"
    },
    "2329": {
      "op": "ADD"
    },
    "2330": {
      "op": "SWAP6"
    },
    "2331": {
      "op": "POP"
    },
    "2332": {
      "op": "DUP1"
    },
    "2333": {
      "op": "DUP3"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2336": {
      "op": "SHL"
    },
    "2337": {
      "op": "DUP5"
    },
    "2338": {
      "op": "ADD"
    },
    "2339": {
      "op": "ADD"
    },
    "2340": {
      "op": "DUP2"
    },
    "2341": {
      "op": "DUP7"
    },
    "2342": {
      "op": "ADD"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2345": {
      "op": "JUMPDEST"
    },
    "2346": {
      "op": "DUP5"
    },
    "2347": {
      "op": "DUP2"
    },
    "2348": {
      "op": "LT"
    },
    "2349": {
      "op": "ISZERO"
    },
    "2350": {
      "op": "PUSH2",
      "value": "0x957"
    },
    "2353": {
      "op": "JUMPI"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2356": {
      "op": "NOT"
    },
    "2357": {
      "op": "DUP7"
    },
    "2358": {
      "op": "DUP5"
    },
    "2359": {
      "op": "SUB"
    },
    "2360": {
      "op": "ADD"
    },
    "2361": {
      "op": "DUP10"
    },
    "2362": {
      "op": "MSTORE"
    },
    "2363": {
      "op": "PUSH2",
      "value": "0x945"
    },
    "2366": {
      "op": "DUP4"
    },
    "2367": {
      "op": "DUP4"
    },
    "2368": {
      "op": "MLOAD"
    },
    "2369": {
      "op": "PUSH2",
      "value": "0x8E0"
    },
    "2372": {
      "jump": "i",
      "op": "JUMP"
    },
    "2373": {
      "op": "JUMPDEST"
    },
    "2374": {
      "op": "SWAP9"
    },
    "2375": {
      "op": "DUP5"
    },
    "2376": {
      "op": "ADD"
    },
    "2377": {
      "op": "SWAP9"
    },
    "2378": {
      "op": "SWAP3"
    },
    "2379": {
      "op": "POP"
    },
    "2380": {
      "op": "SWAP1"
    },
    "2381": {
      "op": "DUP4"
    },
    "2382": {
      "op": "ADD"
    },
    "2383": {
      "op": "SWAP1"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2386": {
      "op": "ADD"
    },
    "2387": {
      "op": "PUSH2",
      "value": "0x929"
    },
    "2390": {
      "op": "JUMP"
    },
    "2391": {
      "op": "JUMPDEST"
    },
    "2392": {
      "op": "POP"
    },
    "2393": {
      "op": "SWAP1"
    },
    "2394": {
      "op": "SWAP8"
    },
    "2395": {
      "op": "SWAP7"
    },
    "2396": {
      "op": "POP"
    },
    "2397": {
      "op": "POP"
    },
    "2398": {
      "op": "POP"
    },
    "2399": {
      "op": "POP"
    },
    "2400": {
      "op": "POP"
    },
    "2401": {
      "op": "POP"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "jump": "o",
      "op": "JUMP"
    },
    "2404": {
      "op": "JUMPDEST"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2407": {
      "op": "DUP1"
    },
    "2408": {
      "op": "DUP3"
    },
    "2409": {
      "op": "MSTORE"
    },
    "2410": {
      "op": "DUP9"
    },
    "2411": {
      "op": "MLOAD"
    },
    "2412": {
      "op": "SWAP1"
    },
    "2413": {
      "op": "DUP3"
    },
    "2414": {
      "op": "ADD"
    },
    "2415": {
      "op": "DUP2"
    },
    "2416": {
      "op": "SWAP1"
    },
    "2417": {
      "op": "MSTORE"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2420": {
      "op": "SWAP1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2423": {
      "op": "SWAP1"
    },
    "2424": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2427": {
      "op": "DUP5"
    },
    "2428": {
      "op": "ADD"
    },
    "2429": {
      "op": "SWAP1"
    },
    "2430": {
      "op": "DUP3"
    },
    "2431": {
      "op": "DUP13"
    },
    "2432": {
      "op": "ADD"
    },
    "2433": {
      "op": "DUP5"
    },
    "2434": {
      "op": "JUMPDEST"
    },
    "2435": {
      "op": "DUP3"
    },
    "2436": {
      "op": "DUP2"
    },
    "2437": {
      "op": "LT"
    },
    "2438": {
      "op": "ISZERO"
    },
    "2439": {
      "op": "PUSH2",
      "value": "0x9A7"
    },
    "2442": {
      "op": "JUMPI"
    },
    "2443": {
      "op": "DUP2"
    },
    "2444": {
      "op": "MLOAD"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2451": {
      "op": "SHL"
    },
    "2452": {
      "op": "SUB"
    },
    "2453": {
      "op": "AND"
    },
    "2454": {
      "op": "DUP5"
    },
    "2455": {
      "op": "MSTORE"
    },
    "2456": {
      "op": "SWAP3"
    },
    "2457": {
      "op": "DUP5"
    },
    "2458": {
      "op": "ADD"
    },
    "2459": {
      "op": "SWAP3"
    },
    "2460": {
      "op": "SWAP1"
    },
    "2461": {
      "op": "DUP5"
    },
    "2462": {
      "op": "ADD"
    },
    "2463": {
      "op": "SWAP1"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2466": {
      "op": "ADD"
    },
    "2467": {
      "op": "PUSH2",
      "value": "0x982"
    },
    "2470": {
      "op": "JUMP"
    },
    "2471": {
      "op": "JUMPDEST"
    },
    "2472": {
      "op": "POP"
    },
    "2473": {
      "op": "POP"
    },
    "2474": {
      "op": "POP"
    },
    "2475": {
      "op": "DUP4"
    },
    "2476": {
      "op": "DUP2"
    },
    "2477": {
      "op": "SUB"
    },
    "2478": {
      "op": "DUP3"
    },
    "2479": {
      "op": "DUP6"
    },
    "2480": {
      "op": "ADD"
    },
    "2481": {
      "op": "MSTORE"
    },
    "2482": {
      "op": "PUSH2",
      "value": "0x9BB"
    },
    "2485": {
      "op": "DUP2"
    },
    "2486": {
      "op": "DUP12"
    },
    "2487": {
      "op": "PUSH2",
      "value": "0x90C"
    },
    "2490": {
      "jump": "i",
      "op": "JUMP"
    },
    "2491": {
      "op": "JUMPDEST"
    },
    "2492": {
      "op": "SWAP3"
    },
    "2493": {
      "op": "POP"
    },
    "2494": {
      "op": "POP"
    },
    "2495": {
      "op": "POP"
    },
    "2496": {
      "op": "PUSH2",
      "value": "0x9D4"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2501": {
      "op": "DUP4"
    },
    "2502": {
      "op": "ADD"
    },
    "2503": {
      "op": "DUP9"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2510": {
      "op": "SHL"
    },
    "2511": {
      "op": "SUB"
    },
    "2512": {
      "op": "AND"
    },
    "2513": {
      "op": "SWAP1"
    },
    "2514": {
      "op": "MSTORE"
    },
    "2515": {
      "op": "JUMP"
    },
    "2516": {
      "op": "JUMPDEST"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2523": {
      "op": "SHL"
    },
    "2524": {
      "op": "SUB"
    },
    "2525": {
      "op": "DUP7"
    },
    "2526": {
      "op": "AND"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2529": {
      "op": "DUP4"
    },
    "2530": {
      "op": "ADD"
    },
    "2531": {
      "op": "MSTORE"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2538": {
      "op": "SHL"
    },
    "2539": {
      "op": "SUB"
    },
    "2540": {
      "op": "DUP6"
    },
    "2541": {
      "op": "AND"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2544": {
      "op": "DUP4"
    },
    "2545": {
      "op": "ADD"
    },
    "2546": {
      "op": "MSTORE"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2549": {
      "op": "DUP3"
    },
    "2550": {
      "op": "ADD"
    },
    "2551": {
      "op": "SWAP4"
    },
    "2552": {
      "op": "SWAP1"
    },
    "2553": {
      "op": "SWAP4"
    },
    "2554": {
      "op": "MSTORE"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2557": {
      "op": "ADD"
    },
    "2558": {
      "op": "MSTORE"
    },
    "2559": {
      "op": "SWAP6"
    },
    "2560": {
      "op": "SWAP5"
    },
    "2561": {
      "op": "POP"
    },
    "2562": {
      "op": "POP"
    },
    "2563": {
      "op": "POP"
    },
    "2564": {
      "op": "POP"
    },
    "2565": {
      "op": "POP"
    },
    "2566": {
      "jump": "o",
      "op": "JUMP"
    },
    "2567": {
      "op": "JUMPDEST"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2574": {
      "op": "SHL"
    },
    "2575": {
      "op": "SUB"
    },
    "2576": {
      "op": "DUP2"
    },
    "2577": {
      "op": "AND"
    },
    "2578": {
      "op": "DUP2"
    },
    "2579": {
      "op": "EQ"
    },
    "2580": {
      "op": "PUSH2",
      "value": "0xA1C"
    },
    "2583": {
      "op": "JUMPI"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2586": {
      "op": "DUP1"
    },
    "2587": {
      "op": "REVERT"
    },
    "2588": {
      "op": "JUMPDEST"
    },
    "2589": {
      "op": "POP"
    },
    "2590": {
      "jump": "o",
      "op": "JUMP"
    },
    "2591": {
      "op": "JUMPDEST"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2594": {
      "op": "DUP1"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2597": {
      "op": "DUP1"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2600": {
      "op": "DUP6"
    },
    "2601": {
      "op": "DUP8"
    },
    "2602": {
      "op": "SUB"
    },
    "2603": {
      "op": "SLT"
    },
    "2604": {
      "op": "ISZERO"
    },
    "2605": {
      "op": "PUSH2",
      "value": "0xA35"
    },
    "2608": {
      "op": "JUMPI"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2611": {
      "op": "DUP1"
    },
    "2612": {
      "op": "REVERT"
    },
    "2613": {
      "op": "JUMPDEST"
    },
    "2614": {
      "op": "DUP5"
    },
    "2615": {
      "op": "CALLDATALOAD"
    },
    "2616": {
      "op": "SWAP4"
    },
    "2617": {
      "op": "POP"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2620": {
      "op": "DUP6"
    },
    "2621": {
      "op": "ADD"
    },
    "2622": {
      "op": "CALLDATALOAD"
    },
    "2623": {
      "op": "SWAP3"
    },
    "2624": {
      "op": "POP"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2627": {
      "op": "DUP6"
    },
    "2628": {
      "op": "ADD"
    },
    "2629": {
      "op": "CALLDATALOAD"
    },
    "2630": {
      "op": "PUSH2",
      "value": "0xA4E"
    },
    "2633": {
      "op": "DUP2"
    },
    "2634": {
      "op": "PUSH2",
      "value": "0xA07"
    },
    "2637": {
      "jump": "i",
      "op": "JUMP"
    },
    "2638": {
      "op": "JUMPDEST"
    },
    "2639": {
      "op": "SWAP2"
    },
    "2640": {
      "op": "POP"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2643": {
      "op": "DUP6"
    },
    "2644": {
      "op": "ADD"
    },
    "2645": {
      "op": "CALLDATALOAD"
    },
    "2646": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2655": {
      "op": "DUP2"
    },
    "2656": {
      "op": "GT"
    },
    "2657": {
      "op": "ISZERO"
    },
    "2658": {
      "op": "PUSH2",
      "value": "0xA6A"
    },
    "2661": {
      "op": "JUMPI"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2664": {
      "op": "DUP1"
    },
    "2665": {
      "op": "REVERT"
    },
    "2666": {
      "op": "JUMPDEST"
    },
    "2667": {
      "op": "PUSH2",
      "value": "0xA76"
    },
    "2670": {
      "op": "DUP8"
    },
    "2671": {
      "op": "DUP3"
    },
    "2672": {
      "op": "DUP9"
    },
    "2673": {
      "op": "ADD"
    },
    "2674": {
      "op": "PUSH2",
      "value": "0x81D"
    },
    "2677": {
      "jump": "i",
      "op": "JUMP"
    },
    "2678": {
      "op": "JUMPDEST"
    },
    "2679": {
      "op": "SWAP2"
    },
    "2680": {
      "op": "POP"
    },
    "2681": {
      "op": "POP"
    },
    "2682": {
      "op": "SWAP3"
    },
    "2683": {
      "op": "SWAP6"
    },
    "2684": {
      "op": "SWAP2"
    },
    "2685": {
      "op": "SWAP5"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "op": "SWAP3"
    },
    "2688": {
      "op": "POP"
    },
    "2689": {
      "jump": "o",
      "op": "JUMP"
    },
    "2690": {
      "op": "JUMPDEST"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2693": {
      "op": "DUP1"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2698": {
      "op": "DUP5"
    },
    "2699": {
      "op": "DUP7"
    },
    "2700": {
      "op": "SUB"
    },
    "2701": {
      "op": "SLT"
    },
    "2702": {
      "op": "ISZERO"
    },
    "2703": {
      "op": "PUSH2",
      "value": "0xA97"
    },
    "2706": {
      "op": "JUMPI"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2709": {
      "op": "DUP1"
    },
    "2710": {
      "op": "REVERT"
    },
    "2711": {
      "op": "JUMPDEST"
    },
    "2712": {
      "op": "DUP4"
    },
    "2713": {
      "op": "CALLDATALOAD"
    },
    "2714": {
      "op": "PUSH2",
      "value": "0xAA2"
    },
    "2717": {
      "op": "DUP2"
    },
    "2718": {
      "op": "PUSH2",
      "value": "0xA07"
    },
    "2721": {
      "jump": "i",
      "op": "JUMP"
    },
    "2722": {
      "op": "JUMPDEST"
    },
    "2723": {
      "op": "SWAP3"
    },
    "2724": {
      "op": "POP"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2727": {
      "op": "DUP5"
    },
    "2728": {
      "op": "ADD"
    },
    "2729": {
      "op": "CALLDATALOAD"
    },
    "2730": {
      "op": "PUSH2",
      "value": "0xAB2"
    },
    "2733": {
      "op": "DUP2"
    },
    "2734": {
      "op": "PUSH2",
      "value": "0xA07"
    },
    "2737": {
      "jump": "i",
      "op": "JUMP"
    },
    "2738": {
      "op": "JUMPDEST"
    },
    "2739": {
      "op": "SWAP3"
    },
    "2740": {
      "op": "SWAP6"
    },
    "2741": {
      "op": "SWAP3"
    },
    "2742": {
      "op": "SWAP5"
    },
    "2743": {
      "op": "POP"
    },
    "2744": {
      "op": "POP"
    },
    "2745": {
      "op": "POP"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2748": {
      "op": "SWAP2"
    },
    "2749": {
      "op": "SWAP1"
    },
    "2750": {
      "op": "SWAP2"
    },
    "2751": {
      "op": "ADD"
    },
    "2752": {
      "op": "CALLDATALOAD"
    },
    "2753": {
      "op": "SWAP1"
    },
    "2754": {
      "jump": "o",
      "op": "JUMP"
    },
    "2755": {
      "op": "JUMPDEST"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2758": {
      "op": "DUP1"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2761": {
      "op": "DUP4"
    },
    "2762": {
      "op": "DUP6"
    },
    "2763": {
      "op": "SUB"
    },
    "2764": {
      "op": "SLT"
    },
    "2765": {
      "op": "ISZERO"
    },
    "2766": {
      "op": "PUSH2",
      "value": "0xAD6"
    },
    "2769": {
      "op": "JUMPI"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2772": {
      "op": "DUP1"
    },
    "2773": {
      "op": "REVERT"
    },
    "2774": {
      "op": "JUMPDEST"
    },
    "2775": {
      "op": "DUP3"
    },
    "2776": {
      "op": "CALLDATALOAD"
    },
    "2777": {
      "op": "PUSH2",
      "value": "0xAE1"
    },
    "2780": {
      "op": "DUP2"
    },
    "2781": {
      "op": "PUSH2",
      "value": "0xA07"
    },
    "2784": {
      "jump": "i",
      "op": "JUMP"
    },
    "2785": {
      "op": "JUMPDEST"
    },
    "2786": {
      "op": "SWAP5"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2789": {
      "op": "SWAP4"
    },
    "2790": {
      "op": "SWAP1"
    },
    "2791": {
      "op": "SWAP4"
    },
    "2792": {
      "op": "ADD"
    },
    "2793": {
      "op": "CALLDATALOAD"
    },
    "2794": {
      "op": "SWAP4"
    },
    "2795": {
      "op": "POP"
    },
    "2796": {
      "op": "POP"
    },
    "2797": {
      "op": "POP"
    },
    "2798": {
      "jump": "o",
      "op": "JUMP"
    },
    "2799": {
      "op": "JUMPDEST"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2804": {
      "op": "DUP3"
    },
    "2805": {
      "op": "DUP5"
    },
    "2806": {
      "op": "SUB"
    },
    "2807": {
      "op": "SLT"
    },
    "2808": {
      "op": "ISZERO"
    },
    "2809": {
      "op": "PUSH2",
      "value": "0xB01"
    },
    "2812": {
      "op": "JUMPI"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2815": {
      "op": "DUP1"
    },
    "2816": {
      "op": "REVERT"
    },
    "2817": {
      "op": "JUMPDEST"
    },
    "2818": {
      "op": "DUP2"
    },
    "2819": {
      "op": "CALLDATALOAD"
    },
    "2820": {
      "op": "PUSH2",
      "value": "0x7A7"
    },
    "2823": {
      "op": "DUP2"
    },
    "2824": {
      "op": "PUSH2",
      "value": "0xA07"
    },
    "2827": {
      "jump": "i",
      "op": "JUMP"
    },
    "2828": {
      "op": "JUMPDEST"
    },
    "2829": {
      "op": "DUP1"
    },
    "2830": {
      "op": "ISZERO"
    },
    "2831": {
      "op": "ISZERO"
    },
    "2832": {
      "op": "DUP2"
    },
    "2833": {
      "op": "EQ"
    },
    "2834": {
      "op": "PUSH2",
      "value": "0xA1C"
    },
    "2837": {
      "op": "JUMPI"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2840": {
      "op": "DUP1"
    },
    "2841": {
      "op": "REVERT"
    },
    "2842": {
      "op": "JUMPDEST"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2847": {
      "op": "DUP3"
    },
    "2848": {
      "op": "DUP5"
    },
    "2849": {
      "op": "SUB"
    },
    "2850": {
      "op": "SLT"
    },
    "2851": {
      "op": "ISZERO"
    },
    "2852": {
      "op": "PUSH2",
      "value": "0xB2C"
    },
    "2855": {
      "op": "JUMPI"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2858": {
      "op": "DUP1"
    },
    "2859": {
      "op": "REVERT"
    },
    "2860": {
      "op": "JUMPDEST"
    },
    "2861": {
      "op": "DUP2"
    },
    "2862": {
      "op": "CALLDATALOAD"
    },
    "2863": {
      "op": "PUSH2",
      "value": "0x7A7"
    },
    "2866": {
      "op": "DUP2"
    },
    "2867": {
      "op": "PUSH2",
      "value": "0xB0C"
    },
    "2870": {
      "jump": "i",
      "op": "JUMP"
    },
    "2871": {
      "op": "JUMPDEST"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2874": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2883": {
      "op": "DUP3"
    },
    "2884": {
      "op": "GT"
    },
    "2885": {
      "op": "ISZERO"
    },
    "2886": {
      "op": "PUSH2",
      "value": "0xB51"
    },
    "2889": {
      "op": "JUMPI"
    },
    "2890": {
      "op": "PUSH2",
      "value": "0xB51"
    },
    "2893": {
      "op": "PUSH2",
      "value": "0x7AE"
    },
    "2896": {
      "jump": "i",
      "op": "JUMP"
    },
    "2897": {
      "op": "JUMPDEST"
    },
    "2898": {
      "op": "POP"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2901": {
      "op": "SHL"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2904": {
      "op": "ADD"
    },
    "2905": {
      "op": "SWAP1"
    },
    "2906": {
      "jump": "o",
      "op": "JUMP"
    },
    "2907": {
      "op": "JUMPDEST"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2910": {
      "op": "DUP3"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2913": {
      "op": "DUP4"
    },
    "2914": {
      "op": "ADD"
    },
    "2915": {
      "op": "SLT"
    },
    "2916": {
      "op": "PUSH2",
      "value": "0xB6C"
    },
    "2919": {
      "op": "JUMPI"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2922": {
      "op": "DUP1"
    },
    "2923": {
      "op": "REVERT"
    },
    "2924": {
      "op": "JUMPDEST"
    },
    "2925": {
      "op": "DUP2"
    },
    "2926": {
      "op": "MLOAD"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2929": {
      "op": "PUSH2",
      "value": "0xB7C"
    },
    "2932": {
      "op": "PUSH2",
      "value": "0x83C"
    },
    "2935": {
      "op": "DUP4"
    },
    "2936": {
      "op": "PUSH2",
      "value": "0xB37"
    },
    "2939": {
      "jump": "i",
      "op": "JUMP"
    },
    "2940": {
      "op": "JUMPDEST"
    },
    "2941": {
      "op": "DUP3"
    },
    "2942": {
      "op": "DUP2"
    },
    "2943": {
      "op": "MSTORE"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2946": {
      "op": "SWAP3"
    },
    "2947": {
      "op": "SWAP1"
    },
    "2948": {
      "op": "SWAP3"
    },
    "2949": {
      "op": "SHL"
    },
    "2950": {
      "op": "DUP5"
    },
    "2951": {
      "op": "ADD"
    },
    "2952": {
      "op": "DUP2"
    },
    "2953": {
      "op": "ADD"
    },
    "2954": {
      "op": "SWAP2"
    },
    "2955": {
      "op": "DUP2"
    },
    "2956": {
      "op": "DUP2"
    },
    "2957": {
      "op": "ADD"
    },
    "2958": {
      "op": "SWAP1"
    },
    "2959": {
      "op": "DUP7"
    },
    "2960": {
      "op": "DUP5"
    },
    "2961": {
      "op": "GT"
    },
    "2962": {
      "op": "ISZERO"
    },
    "2963": {
      "op": "PUSH2",
      "value": "0xB9B"
    },
    "2966": {
      "op": "JUMPI"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2969": {
      "op": "DUP1"
    },
    "2970": {
      "op": "REVERT"
    },
    "2971": {
      "op": "JUMPDEST"
    },
    "2972": {
      "op": "DUP3"
    },
    "2973": {
      "op": "DUP7"
    },
    "2974": {
      "op": "ADD"
    },
    "2975": {
      "op": "JUMPDEST"
    },
    "2976": {
      "op": "DUP5"
    },
    "2977": {
      "op": "DUP2"
    },
    "2978": {
      "op": "LT"
    },
    "2979": {
      "op": "ISZERO"
    },
    "2980": {
      "op": "PUSH2",
      "value": "0xC17"
    },
    "2983": {
      "op": "JUMPI"
    },
    "2984": {
      "op": "DUP1"
    },
    "2985": {
      "op": "MLOAD"
    },
    "2986": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2995": {
      "op": "DUP2"
    },
    "2996": {
      "op": "GT"
    },
    "2997": {
      "op": "ISZERO"
    },
    "2998": {
      "op": "PUSH2",
      "value": "0xBBF"
    },
    "3001": {
      "op": "JUMPI"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3004": {
      "op": "DUP1"
    },
    "3005": {
      "op": "DUP2"
    },
    "3006": {
      "op": "REVERT"
    },
    "3007": {
      "op": "JUMPDEST"
    },
    "3008": {
      "op": "DUP8"
    },
    "3009": {
      "op": "ADD"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3012": {
      "op": "DUP2"
    },
    "3013": {
      "op": "ADD"
    },
    "3014": {
      "op": "DUP10"
    },
    "3015": {
      "op": "SGT"
    },
    "3016": {
      "op": "PUSH2",
      "value": "0xBD1"
    },
    "3019": {
      "op": "JUMPI"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3022": {
      "op": "DUP1"
    },
    "3023": {
      "op": "DUP2"
    },
    "3024": {
      "op": "REVERT"
    },
    "3025": {
      "op": "JUMPDEST"
    },
    "3026": {
      "op": "DUP5"
    },
    "3027": {
      "op": "DUP2"
    },
    "3028": {
      "op": "ADD"
    },
    "3029": {
      "op": "MLOAD"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3032": {
      "op": "PUSH2",
      "value": "0xBE3"
    },
    "3035": {
      "op": "PUSH2",
      "value": "0x83C"
    },
    "3038": {
      "op": "DUP4"
    },
    "3039": {
      "op": "PUSH2",
      "value": "0x7F5"
    },
    "3042": {
      "jump": "i",
      "op": "JUMP"
    },
    "3043": {
      "op": "JUMPDEST"
    },
    "3044": {
      "op": "DUP3"
    },
    "3045": {
      "op": "DUP2"
    },
    "3046": {
      "op": "MSTORE"
    },
    "3047": {
      "op": "DUP12"
    },
    "3048": {
      "op": "DUP3"
    },
    "3049": {
      "op": "DUP5"
    },
    "3050": {
      "op": "DUP7"
    },
    "3051": {
      "op": "ADD"
    },
    "3052": {
      "op": "ADD"
    },
    "3053": {
      "op": "GT"
    },
    "3054": {
      "op": "ISZERO"
    },
    "3055": {
      "op": "PUSH2",
      "value": "0xBF8"
    },
    "3058": {
      "op": "JUMPI"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3061": {
      "op": "DUP1"
    },
    "3062": {
      "op": "DUP2"
    },
    "3063": {
      "op": "REVERT"
    },
    "3064": {
      "op": "JUMPDEST"
    },
    "3065": {
      "op": "PUSH2",
      "value": "0xC07"
    },
    "3068": {
      "op": "DUP4"
    },
    "3069": {
      "op": "DUP10"
    },
    "3070": {
      "op": "DUP4"
    },
    "3071": {
      "op": "ADD"
    },
    "3072": {
      "op": "DUP5"
    },
    "3073": {
      "op": "DUP8"
    },
    "3074": {
      "op": "ADD"
    },
    "3075": {
      "op": "PUSH2",
      "value": "0x8B0"
    },
    "3078": {
      "jump": "i",
      "op": "JUMP"
    },
    "3079": {
      "op": "JUMPDEST"
    },
    "3080": {
      "op": "DUP7"
    },
    "3081": {
      "op": "MSTORE"
    },
    "3082": {
      "op": "POP"
    },
    "3083": {
      "op": "POP"
    },
    "3084": {
      "op": "POP"
    },
    "3085": {
      "op": "SWAP2"
    },
    "3086": {
      "op": "DUP4"
    },
    "3087": {
      "op": "ADD"
    },
    "3088": {
      "op": "SWAP2"
    },
    "3089": {
      "op": "DUP4"
    },
    "3090": {
      "op": "ADD"
    },
    "3091": {
      "op": "PUSH2",
      "value": "0xB9F"
    },
    "3094": {
      "op": "JUMP"
    },
    "3095": {
      "op": "JUMPDEST"
    },
    "3096": {
      "op": "POP"
    },
    "3097": {
      "op": "SWAP7"
    },
    "3098": {
      "op": "SWAP6"
    },
    "3099": {
      "op": "POP"
    },
    "3100": {
      "op": "POP"
    },
    "3101": {
      "op": "POP"
    },
    "3102": {
      "op": "POP"
    },
    "3103": {
      "op": "POP"
    },
    "3104": {
      "op": "POP"
    },
    "3105": {
      "jump": "o",
      "op": "JUMP"
    },
    "3106": {
      "op": "JUMPDEST"
    },
    "3107": {
      "op": "DUP1"
    },
    "3108": {
      "op": "MLOAD"
    },
    "3109": {
      "op": "PUSH2",
      "value": "0xC2D"
    },
    "3112": {
      "op": "DUP2"
    },
    "3113": {
      "op": "PUSH2",
      "value": "0xA07"
    },
    "3116": {
      "jump": "i",
      "op": "JUMP"
    },
    "3117": {
      "op": "JUMPDEST"
    },
    "3118": {
      "op": "SWAP2"
    },
    "3119": {
      "op": "SWAP1"
    },
    "3120": {
      "op": "POP"
    },
    "3121": {
      "jump": "o",
      "op": "JUMP"
    },
    "3122": {
      "op": "JUMPDEST"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3125": {
      "op": "DUP1"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3128": {
      "op": "DUP1"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3131": {
      "op": "DUP1"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3136": {
      "op": "DUP9"
    },
    "3137": {
      "op": "DUP11"
    },
    "3138": {
      "op": "SUB"
    },
    "3139": {
      "op": "SLT"
    },
    "3140": {
      "op": "ISZERO"
    },
    "3141": {
      "op": "PUSH2",
      "value": "0xC4D"
    },
    "3144": {
      "op": "JUMPI"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3147": {
      "op": "DUP1"
    },
    "3148": {
      "op": "REVERT"
    },
    "3149": {
      "op": "JUMPDEST"
    },
    "3150": {
      "op": "DUP8"
    },
    "3151": {
      "op": "MLOAD"
    },
    "3152": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3161": {
      "op": "DUP1"
    },
    "3162": {
      "op": "DUP3"
    },
    "3163": {
      "op": "GT"
    },
    "3164": {
      "op": "ISZERO"
    },
    "3165": {
      "op": "PUSH2",
      "value": "0xC65"
    },
    "3168": {
      "op": "JUMPI"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3171": {
      "op": "DUP1"
    },
    "3172": {
      "op": "REVERT"
    },
    "3173": {
      "op": "JUMPDEST"
    },
    "3174": {
      "op": "DUP2"
    },
    "3175": {
      "op": "DUP11"
    },
    "3176": {
      "op": "ADD"
    },
    "3177": {
      "op": "SWAP2"
    },
    "3178": {
      "op": "POP"
    },
    "3179": {
      "op": "DUP11"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3182": {
      "op": "DUP4"
    },
    "3183": {
      "op": "ADD"
    },
    "3184": {
      "op": "SLT"
    },
    "3185": {
      "op": "PUSH2",
      "value": "0xC79"
    },
    "3188": {
      "op": "JUMPI"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3191": {
      "op": "DUP1"
    },
    "3192": {
      "op": "REVERT"
    },
    "3193": {
      "op": "JUMPDEST"
    },
    "3194": {
      "op": "DUP2"
    },
    "3195": {
      "op": "MLOAD"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3198": {
      "op": "PUSH2",
      "value": "0xC89"
    },
    "3201": {
      "op": "PUSH2",
      "value": "0x83C"
    },
    "3204": {
      "op": "DUP4"
    },
    "3205": {
      "op": "PUSH2",
      "value": "0xB37"
    },
    "3208": {
      "jump": "i",
      "op": "JUMP"
    },
    "3209": {
      "op": "JUMPDEST"
    },
    "3210": {
      "op": "DUP3"
    },
    "3211": {
      "op": "DUP2"
    },
    "3212": {
      "op": "MSTORE"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3215": {
      "op": "SWAP3"
    },
    "3216": {
      "op": "SWAP1"
    },
    "3217": {
      "op": "SWAP3"
    },
    "3218": {
      "op": "SHL"
    },
    "3219": {
      "op": "DUP5"
    },
    "3220": {
      "op": "ADD"
    },
    "3221": {
      "op": "DUP2"
    },
    "3222": {
      "op": "ADD"
    },
    "3223": {
      "op": "SWAP2"
    },
    "3224": {
      "op": "DUP2"
    },
    "3225": {
      "op": "DUP2"
    },
    "3226": {
      "op": "ADD"
    },
    "3227": {
      "op": "SWAP1"
    },
    "3228": {
      "op": "DUP15"
    },
    "3229": {
      "op": "DUP5"
    },
    "3230": {
      "op": "GT"
    },
    "3231": {
      "op": "ISZERO"
    },
    "3232": {
      "op": "PUSH2",
      "value": "0xCA8"
    },
    "3235": {
      "op": "JUMPI"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3238": {
      "op": "DUP1"
    },
    "3239": {
      "op": "REVERT"
    },
    "3240": {
      "op": "JUMPDEST"
    },
    "3241": {
      "op": "SWAP5"
    },
    "3242": {
      "op": "DUP3"
    },
    "3243": {
      "op": "ADD"
    },
    "3244": {
      "op": "SWAP5"
    },
    "3245": {
      "op": "JUMPDEST"
    },
    "3246": {
      "op": "DUP4"
    },
    "3247": {
      "op": "DUP7"
    },
    "3248": {
      "op": "LT"
    },
    "3249": {
      "op": "ISZERO"
    },
    "3250": {
      "op": "PUSH2",
      "value": "0xCCF"
    },
    "3253": {
      "op": "JUMPI"
    },
    "3254": {
      "op": "DUP6"
    },
    "3255": {
      "op": "MLOAD"
    },
    "3256": {
      "op": "PUSH2",
      "value": "0xCC0"
    },
    "3259": {
      "op": "DUP2"
    },
    "3260": {
      "op": "PUSH2",
      "value": "0xA07"
    },
    "3263": {
      "jump": "i",
      "op": "JUMP"
    },
    "3264": {
      "op": "JUMPDEST"
    },
    "3265": {
      "op": "DUP3"
    },
    "3266": {
      "op": "MSTORE"
    },
    "3267": {
      "op": "SWAP5"
    },
    "3268": {
      "op": "DUP3"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "op": "SWAP5"
    },
    "3271": {
      "op": "SWAP1"
    },
    "3272": {
      "op": "DUP3"
    },
    "3273": {
      "op": "ADD"
    },
    "3274": {
      "op": "SWAP1"
    },
    "3275": {
      "op": "PUSH2",
      "value": "0xCAD"
    },
    "3278": {
      "op": "JUMP"
    },
    "3279": {
      "op": "JUMPDEST"
    },
    "3280": {
      "op": "SWAP2"
    },
    "3281": {
      "op": "DUP14"
    },
    "3282": {
      "op": "ADD"
    },
    "3283": {
      "op": "MLOAD"
    },
    "3284": {
      "op": "SWAP2"
    },
    "3285": {
      "op": "SWAP12"
    },
    "3286": {
      "op": "POP"
    },
    "3287": {
      "op": "SWAP1"
    },
    "3288": {
      "op": "SWAP4"
    },
    "3289": {
      "op": "POP"
    },
    "3290": {
      "op": "POP"
    },
    "3291": {
      "op": "POP"
    },
    "3292": {
      "op": "DUP1"
    },
    "3293": {
      "op": "DUP3"
    },
    "3294": {
      "op": "GT"
    },
    "3295": {
      "op": "ISZERO"
    },
    "3296": {
      "op": "PUSH2",
      "value": "0xCE8"
    },
    "3299": {
      "op": "JUMPI"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3302": {
      "op": "DUP1"
    },
    "3303": {
      "op": "REVERT"
    },
    "3304": {
      "op": "JUMPDEST"
    },
    "3305": {
      "op": "POP"
    },
    "3306": {
      "op": "PUSH2",
      "value": "0xCF5"
    },
    "3309": {
      "op": "DUP11"
    },
    "3310": {
      "op": "DUP3"
    },
    "3311": {
      "op": "DUP12"
    },
    "3312": {
      "op": "ADD"
    },
    "3313": {
      "op": "PUSH2",
      "value": "0xB5B"
    },
    "3316": {
      "jump": "i",
      "op": "JUMP"
    },
    "3317": {
      "op": "JUMPDEST"
    },
    "3318": {
      "op": "SWAP7"
    },
    "3319": {
      "op": "POP"
    },
    "3320": {
      "op": "POP"
    },
    "3321": {
      "op": "PUSH2",
      "value": "0xD04"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3326": {
      "op": "DUP10"
    },
    "3327": {
      "op": "ADD"
    },
    "3328": {
      "op": "PUSH2",
      "value": "0xC22"
    },
    "3331": {
      "jump": "i",
      "op": "JUMP"
    },
    "3332": {
      "op": "JUMPDEST"
    },
    "3333": {
      "op": "SWAP5"
    },
    "3334": {
      "op": "POP"
    },
    "3335": {
      "op": "PUSH2",
      "value": "0xD12"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3340": {
      "op": "DUP10"
    },
    "3341": {
      "op": "ADD"
    },
    "3342": {
      "op": "PUSH2",
      "value": "0xC22"
    },
    "3345": {
      "jump": "i",
      "op": "JUMP"
    },
    "3346": {
      "op": "JUMPDEST"
    },
    "3347": {
      "op": "SWAP4"
    },
    "3348": {
      "op": "POP"
    },
    "3349": {
      "op": "PUSH2",
      "value": "0xD20"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3354": {
      "op": "DUP10"
    },
    "3355": {
      "op": "ADD"
    },
    "3356": {
      "op": "PUSH2",
      "value": "0xC22"
    },
    "3359": {
      "jump": "i",
      "op": "JUMP"
    },
    "3360": {
      "op": "JUMPDEST"
    },
    "3361": {
      "op": "SWAP3"
    },
    "3362": {
      "op": "POP"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3365": {
      "op": "DUP9"
    },
    "3366": {
      "op": "ADD"
    },
    "3367": {
      "op": "MLOAD"
    },
    "3368": {
      "op": "SWAP2"
    },
    "3369": {
      "op": "POP"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3372": {
      "op": "DUP9"
    },
    "3373": {
      "op": "ADD"
    },
    "3374": {
      "op": "MLOAD"
    },
    "3375": {
      "op": "SWAP1"
    },
    "3376": {
      "op": "POP"
    },
    "3377": {
      "op": "SWAP3"
    },
    "3378": {
      "op": "SWAP6"
    },
    "3379": {
      "op": "SWAP9"
    },
    "3380": {
      "op": "SWAP2"
    },
    "3381": {
      "op": "SWAP5"
    },
    "3382": {
      "op": "SWAP8"
    },
    "3383": {
      "op": "POP"
    },
    "3384": {
      "op": "SWAP3"
    },
    "3385": {
      "op": "SWAP6"
    },
    "3386": {
      "op": "POP"
    },
    "3387": {
      "jump": "o",
      "op": "JUMP"
    },
    "3388": {
      "op": "JUMPDEST"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3393": {
      "op": "DUP3"
    },
    "3394": {
      "op": "DUP5"
    },
    "3395": {
      "op": "SUB"
    },
    "3396": {
      "op": "SLT"
    },
    "3397": {
      "op": "ISZERO"
    },
    "3398": {
      "op": "PUSH2",
      "value": "0xD4E"
    },
    "3401": {
      "op": "JUMPI"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3404": {
      "op": "DUP1"
    },
    "3405": {
      "op": "REVERT"
    },
    "3406": {
      "op": "JUMPDEST"
    },
    "3407": {
      "op": "DUP2"
    },
    "3408": {
      "op": "MLOAD"
    },
    "3409": {
      "op": "PUSH2",
      "value": "0x7A7"
    },
    "3412": {
      "op": "DUP2"
    },
    "3413": {
      "op": "PUSH2",
      "value": "0xA07"
    },
    "3416": {
      "jump": "i",
      "op": "JUMP"
    },
    "3417": {
      "op": "JUMPDEST"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3422": {
      "op": "DUP3"
    },
    "3423": {
      "op": "DUP5"
    },
    "3424": {
      "op": "SUB"
    },
    "3425": {
      "op": "SLT"
    },
    "3426": {
      "op": "ISZERO"
    },
    "3427": {
      "op": "PUSH2",
      "value": "0xD6B"
    },
    "3430": {
      "op": "JUMPI"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3433": {
      "op": "DUP1"
    },
    "3434": {
      "op": "REVERT"
    },
    "3435": {
      "op": "JUMPDEST"
    },
    "3436": {
      "op": "POP"
    },
    "3437": {
      "op": "MLOAD"
    },
    "3438": {
      "op": "SWAP2"
    },
    "3439": {
      "op": "SWAP1"
    },
    "3440": {
      "op": "POP"
    },
    "3441": {
      "jump": "o",
      "op": "JUMP"
    },
    "3442": {
      "op": "JUMPDEST"
    },
    "3443": {
      "op": "DUP5"
    },
    "3444": {
      "op": "DUP2"
    },
    "3445": {
      "op": "MSTORE"
    },
    "3446": {
      "op": "DUP4"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3449": {
      "op": "DUP3"
    },
    "3450": {
      "op": "ADD"
    },
    "3451": {
      "op": "MSTORE"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3454": {
      "op": "DUP1"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3457": {
      "op": "SHL"
    },
    "3458": {
      "op": "SUB"
    },
    "3459": {
      "op": "DUP4"
    },
    "3460": {
      "op": "AND"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3463": {
      "op": "DUP3"
    },
    "3464": {
      "op": "ADD"
    },
    "3465": {
      "op": "MSTORE"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3470": {
      "op": "DUP3"
    },
    "3471": {
      "op": "ADD"
    },
    "3472": {
      "op": "MSTORE"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3475": {
      "op": "PUSH2",
      "value": "0xD9F"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3480": {
      "op": "DUP4"
    },
    "3481": {
      "op": "ADD"
    },
    "3482": {
      "op": "DUP5"
    },
    "3483": {
      "op": "PUSH2",
      "value": "0x8E0"
    },
    "3486": {
      "jump": "i",
      "op": "JUMP"
    },
    "3487": {
      "op": "JUMPDEST"
    },
    "3488": {
      "op": "SWAP7"
    },
    "3489": {
      "op": "SWAP6"
    },
    "3490": {
      "op": "POP"
    },
    "3491": {
      "op": "POP"
    },
    "3492": {
      "op": "POP"
    },
    "3493": {
      "op": "POP"
    },
    "3494": {
      "op": "POP"
    },
    "3495": {
      "op": "POP"
    },
    "3496": {
      "jump": "o",
      "op": "JUMP"
    },
    "3497": {
      "op": "JUMPDEST"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3502": {
      "op": "DUP3"
    },
    "3503": {
      "op": "DUP5"
    },
    "3504": {
      "op": "SUB"
    },
    "3505": {
      "op": "SLT"
    },
    "3506": {
      "op": "ISZERO"
    },
    "3507": {
      "op": "PUSH2",
      "value": "0xDBB"
    },
    "3510": {
      "op": "JUMPI"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3513": {
      "op": "DUP1"
    },
    "3514": {
      "op": "REVERT"
    },
    "3515": {
      "op": "JUMPDEST"
    },
    "3516": {
      "op": "DUP2"
    },
    "3517": {
      "op": "MLOAD"
    },
    "3518": {
      "op": "PUSH2",
      "value": "0x7A7"
    },
    "3521": {
      "op": "DUP2"
    },
    "3522": {
      "op": "PUSH2",
      "value": "0xB0C"
    },
    "3525": {
      "jump": "i",
      "op": "JUMP"
    },
    "3526": {
      "op": "JUMPDEST"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3529": {
      "op": "DUP3"
    },
    "3530": {
      "op": "DUP3"
    },
    "3531": {
      "op": "LT"
    },
    "3532": {
      "op": "ISZERO"
    },
    "3533": {
      "op": "PUSH2",
      "value": "0xDE6"
    },
    "3536": {
      "op": "JUMPI"
    },
    "3537": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3544": {
      "op": "SHL"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3547": {
      "op": "MSTORE"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3552": {
      "op": "MSTORE"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3557": {
      "op": "REVERT"
    },
    "3558": {
      "op": "JUMPDEST"
    },
    "3559": {
      "op": "POP"
    },
    "3560": {
      "op": "SUB"
    },
    "3561": {
      "op": "SWAP1"
    },
    "3562": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "151cd3df4a247899f7958474d12d91ab43c088ec",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\n\nimport '../interfaces/IFactory.sol';\nimport '../interfaces/IPair.sol';\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n\ncontract ArbV1 {\n    \n    using SafeMath for uint;\n\n    address public owner;\n    address internal token;\n    bool internal instantCashout;\n    uint internal balance;\n\n    event arbSuccesful (uint Gain, address Token, address initiator);\n    event transferSent (address Token, address to);\n    event CaleeResponse (uint amount, address exchange);\n\n    modifier OnlyOwner () {\n        require(owner == msg.sender);\n        _;\n    }\n\n    constructor () {\n        owner = msg.sender;\n        instantCashout = false;\n    }\n\n    function start (\n        uint amount0,\n        uint amount1,\n        address _token,\n        bytes memory data) public {\n            (, , address tokensPair, , , , ) = unpack(data);\n\n            require(_token == IPair(tokensPair).token0() || _token == IPair(tokensPair).token1(), \"Incorrect Pair for token\");\n            token = _token;\n            balance = IERC20(token).balanceOf(address(this));\n            IPair(tokensPair).swap(amount0,amount1,msg.sender,data);\n        }\n\n    function unpack (bytes memory data) public pure returns (\n        address[] memory addresses,bytes[] memory dataAddrs,address pairAddress,\n        address factory,address initiator,uint amount,uint fee) {\n            \n        (addresses, dataAddrs, pairAddress,factory,initiator,amount, fee) = abi.decode(\n            data, (address[],bytes[],address,address,address,uint,uint));\n    }\n\n\n    function execute (address sender, address[] memory tokens, bytes[] memory data,\n        address initiator,uint amount,uint fee) internal {\n        require(tokens.length > 2 && tokens.length == data.length,\"incongruent arrays!\");\n        \n        emit CaleeResponse(amount, msg.sender);\n\n        for (uint i; i < tokens.length; i++) {\n            (bool success, ) = tokens[i].call(data[i]);\n            require(success,\"Failed to execute swap!\");\n        }\n\n        uint amountGot = IERC20(token).balanceOf(address(this));\n        uint amountExpected = balance.add(amount.mul(fee).div(100000));\n        require (amountGot > amountExpected,\"Unsuccesful Arb!\");\n        uint gain = amountGot - amountExpected;\n        emit arbSuccesful(gain,token,initiator);\n        \n        _sendToken(token, msg.sender, amount.mul(fee).div(100000));\n\n        if (instantCashout) {\n            _sendToken(token,sender,gain);\n        }\n    }\n\n    function _sendCoin(address payable recipient, uint amount) private {\n        (bool sent, ) = recipient.call{value: amount}(\"\");\n        require(sent, \"Failed to send Ether\");\n        emit transferSent(address(0),recipient);\n    }\n\n\n    function sendCoin(address payable recipient, uint amount) public OnlyOwner() {\n        _sendCoin(recipient,amount);\n    }\n\n    function _sendToken(address tokenAdd, address reciepient, uint amount) private {\n        require(IERC20(tokenAdd).balanceOf(address(this)).sub(amount) > 0,\"Insufficient funds\");\n        IERC20(tokenAdd).transfer(reciepient, amount);\n        emit transferSent(tokenAdd, reciepient);\n    }\n    function sendToken(address tokenAdd, address reciepient,uint amount) public OnlyOwner() {\n        _sendToken(tokenAdd,reciepient,amount);\n    }\n\n    function changeOwner (address _owner) public OnlyOwner() {\n        owner = _owner;\n    }\n\n    function changeCashout (bool _method) public OnlyOwner() {\n        instantCashout = _method;\n        \n    }\n    function skim(address skimPair) external {\n        IPair(skimPair).skim(msg.sender);\n    }\n\n    receive() external payable {}\n}\n\n",
  "sourceMap": "253:3465:2:-:0;;;689:82;;;;;;;;;-1:-1:-1;714:5:2;:18;;-1:-1:-1;;;;;;714:18:2;722:10;714:18;;;;742:22;;-1:-1:-1;;;;742:22:2;;;253:3465;;;;;;",
  "sourcePath": "contracts/ArbV1.sol",
  "type": "contract"
}