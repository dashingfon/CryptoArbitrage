{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "exchange",
          "type": "address"
        }
      ],
      "name": "CaleeResponse",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gain",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        }
      ],
      "name": "arbSuccesful",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "cashOut",
          "type": "bool"
        }
      ],
      "name": "cashoutChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "ownerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferSent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_method",
          "type": "bool"
        }
      ],
      "name": "changeCashout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sendCoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAdd",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reciepient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sendToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "skimPair",
          "type": "address"
        }
      ],
      "name": "skim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "start",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "unpack",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "routers",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "bytesList",
          "type": "bytes[]"
        },
        {
          "internalType": "address",
          "name": "pairAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Mfon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol",
    "1": "C:/Users/Mfon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/math/SafeMath.sol",
    "2": "contracts/ArbV1.sol",
    "5": "interfaces/IPair.sol"
  },
  "ast": {
    "absolutePath": "contracts/ArbV1.sol",
    "exportedSymbols": {
      "ArbV1": [
        569
      ],
      "IERC20": [
        829
      ],
      "IPair": [
        1224
      ],
      "IV2ERC20": [
        1342
      ],
      "SafeMath": [
        1141
      ]
    },
    "id": 570,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:2"
      },
      {
        "absolutePath": "interfaces/IPair.sol",
        "file": "../interfaces/IPair.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 570,
        "sourceUnit": 1225,
        "src": "65:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Mfon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 570,
        "sourceUnit": 1142,
        "src": "99:57:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Mfon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 570,
        "sourceUnit": 830,
        "src": "157:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ArbV1",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 569,
        "linearizedBaseContracts": [
          569
        ],
        "name": "ArbV1",
        "nameLocation": "225:5:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 7,
            "libraryName": {
              "id": 5,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1141,
              "src": "248:8:2"
            },
            "nodeType": "UsingForDirective",
            "src": "242:24:2",
            "typeName": {
              "id": 6,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "261:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 18,
            "mutability": "constant",
            "name": "swapFuncSelector",
            "nameLocation": "288:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 569,
            "src": "272:130:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 8,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "272:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "arguments": [
                        {
                          "hexValue": "737761704578616374546f6b656e73466f72546f6b656e732875696e743235362c75696e743235362c616464726573735b5d2c616464726573732c75696e7432353629",
                          "id": 14,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "330:69:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_38ed1739ee07daf49933f1800d1a9bc8d39a6876ea11e643f9c4c39c66df0ee8",
                            "typeString": "literal_string \"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\""
                          },
                          "value": "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_38ed1739ee07daf49933f1800d1a9bc8d39a6876ea11e643f9c4c39c66df0ee8",
                            "typeString": "literal_string \"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\""
                          }
                        ],
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "324:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        },
                        "typeName": {
                          "id": 12,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "324:5:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 15,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "324:76:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "id": 11,
                    "name": "keccak256",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": -8,
                    "src": "314:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                      "typeString": "function (bytes memory) pure returns (bytes32)"
                    }
                  },
                  "id": 16,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "314:87:2",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                ],
                "id": 10,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "307:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes4_$",
                  "typeString": "type(bytes4)"
                },
                "typeName": {
                  "id": 9,
                  "name": "bytes4",
                  "nodeType": "ElementaryTypeName",
                  "src": "307:6:2",
                  "typeDescriptions": {}
                }
              },
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "307:95:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 29,
            "mutability": "constant",
            "name": "approveFuncSelector",
            "nameLocation": "424:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 569,
            "src": "408:90:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 19,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "408:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "arguments": [
                        {
                          "hexValue": "617070726f766528616464726573732c75696e7432353629",
                          "id": 25,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "469:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_095ea7b334ae44009aa867bfb386f5c3b4b443ac6f0ee573fa91c4608fbadfba",
                            "typeString": "literal_string \"approve(address,uint256)\""
                          },
                          "value": "approve(address,uint256)"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_095ea7b334ae44009aa867bfb386f5c3b4b443ac6f0ee573fa91c4608fbadfba",
                            "typeString": "literal_string \"approve(address,uint256)\""
                          }
                        ],
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "463:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "463:5:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "463:33:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "id": 22,
                    "name": "keccak256",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": -8,
                    "src": "453:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                      "typeString": "function (bytes memory) pure returns (bytes32)"
                    }
                  },
                  "id": 27,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "453:44:2",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                ],
                "id": 21,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "446:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes4_$",
                  "typeString": "type(bytes4)"
                },
                "typeName": {
                  "id": 20,
                  "name": "bytes4",
                  "nodeType": "ElementaryTypeName",
                  "src": "446:6:2",
                  "typeDescriptions": {}
                }
              },
              "id": 28,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "446:52:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 31,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "520:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 569,
            "src": "505:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 33,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "548:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 569,
            "src": "531:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "531:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "instantCashout",
            "nameLocation": "573:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 569,
            "src": "559:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 34,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "559:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "f1f6f2cd70edad69b7e9b884a3141e6c6814d3bda57d1989684f625aef2f9204",
            "id": 43,
            "name": "arbSuccesful",
            "nameLocation": "600:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gain",
                  "nameLocation": "619:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "614:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "633:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "625:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initiator",
                  "nameLocation": "648:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "640:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "613:45:2"
            },
            "src": "594:65:2"
          },
          {
            "anonymous": false,
            "eventSelector": "232fba693394e47cdbc6f4760e24687abfb144ddca4600a356321757a0a129fb",
            "id": 49,
            "name": "ownerChanged",
            "nameLocation": "670:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldOwner",
                  "nameLocation": "692:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "684:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "710:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "702:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "683:36:2"
            },
            "src": "664:56:2"
          },
          {
            "anonymous": false,
            "eventSelector": "def6a336109929d202eddcbd7197cf06df5633223229a6eb5b0b8ffb5e8d75e9",
            "id": 55,
            "name": "cashoutChanged",
            "nameLocation": "731:14:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "755:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "747:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cashOut",
                  "nameLocation": "767:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "762:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "746:29:2"
            },
            "src": "725:51:2"
          },
          {
            "anonymous": false,
            "eventSelector": "81ff37c0a846f0fa29fd65bc885ac344052231414004d0e16a59678c4018b3a3",
            "id": 61,
            "name": "transferSent",
            "nameLocation": "787:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "809:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "801:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "824:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "816:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "800:27:2"
            },
            "src": "781:47:2"
          },
          {
            "anonymous": false,
            "eventSelector": "e6721a7a09bf2789e54804e7e36bceb8bf71e370eafc03b486c7f706a50b0c83",
            "id": 67,
            "name": "CaleeResponse",
            "nameLocation": "839:13:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "859:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "854:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "854:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "exchange",
                  "nameLocation": "875:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "867:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "853:31:2"
            },
            "src": "833:52:2"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "912:56:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 70,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "930:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 71,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "939:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "939:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "930:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "922:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "922:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "922:28:2"
                },
                {
                  "id": 76,
                  "nodeType": "PlaceholderStatement",
                  "src": "960:1:2"
                }
              ]
            },
            "id": 78,
            "name": "OnlyOwner",
            "nameLocation": "900:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:2:2"
            },
            "src": "891:77:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "989:66:2",
              "statements": [
                {
                  "expression": {
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 81,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "999:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 82,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1007:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1007:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "999:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "999:18:2"
                },
                {
                  "expression": {
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86,
                      "name": "instantCashout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1027:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1044:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1027:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1027:21:2"
                }
              ]
            },
            "id": 91,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "986:2:2"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "989:0:2"
            },
            "scope": 569,
            "src": "974:81:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "1180:315:2",
              "statements": [
                {
                  "assignments": [
                    null,
                    null,
                    103,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 103,
                      "mutability": "mutable",
                      "name": "tokensPair",
                      "nameLocation": "1208:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 144,
                      "src": "1200:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 102,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1200:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 107,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 105,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1233:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 104,
                      "name": "unpack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "1226:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (bytes memory) pure returns (address[] memory,bytes memory[] memory,address,uint256,uint256)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1226:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address[] memory,bytes memory[] memory,address,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1194:44:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 109,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "1261:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 111,
                                    "name": "tokensPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 103,
                                    "src": "1277:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 110,
                                  "name": "IPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1224,
                                  "src": "1271:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IPair_$1224_$",
                                    "typeString": "type(contract IPair)"
                                  }
                                },
                                "id": 112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1271:17:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$1224",
                                  "typeString": "contract IPair"
                                }
                              },
                              "id": 113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token0",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1174,
                              "src": "1271:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1271:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1261:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 116,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "1301:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 118,
                                    "name": "tokensPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 103,
                                    "src": "1317:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 117,
                                  "name": "IPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1224,
                                  "src": "1311:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IPair_$1224_$",
                                    "typeString": "type(contract IPair)"
                                  }
                                },
                                "id": 119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1311:17:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPair_$1224",
                                  "typeString": "contract IPair"
                                }
                              },
                              "id": 120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1179,
                              "src": "1311:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1311:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1301:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1261:76:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374205061697220666f7220746f6b656e",
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1356:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_babab38959d8841be3ce0f0eeb1994c964824f4b9e80a6e74a7b2e2f3e67802c",
                          "typeString": "literal_string \"Incorrect Pair for token\""
                        },
                        "value": "Incorrect Pair for token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_babab38959d8841be3ce0f0eeb1994c964824f4b9e80a6e74a7b2e2f3e67802c",
                          "typeString": "literal_string \"Incorrect Pair for token\""
                        }
                      ],
                      "id": 108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1253:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1253:130:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1253:130:2"
                },
                {
                  "expression": {
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 127,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1398:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 128,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "1406:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1398:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1398:14:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "1449:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 136,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "1457:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 139,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1473:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArbV1_$569",
                              "typeString": "contract ArbV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ArbV1_$569",
                              "typeString": "contract ArbV1"
                            }
                          ],
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1465:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 137,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1465:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1465:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 141,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1479:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 132,
                            "name": "tokensPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "1432:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 131,
                          "name": "IPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1224,
                          "src": "1426:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPair_$1224_$",
                            "typeString": "type(contract IPair)"
                          }
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1426:17:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPair_$1224",
                          "typeString": "contract IPair"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1215,
                      "src": "1426:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address,bytes memory) external"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1426:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1426:58:2"
                }
              ]
            },
            "functionSelector": "10f2aa41",
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "start",
            "nameLocation": "1070:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "1091:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1086:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1086:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "1113:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1108:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1138:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1130:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1130:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1167:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1154:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1076:96:2"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1180:0:2"
            },
            "scope": 569,
            "src": "1061:434:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "1669:147:2",
              "statements": [
                {
                  "expression": {
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 162,
                          "name": "routers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "1693:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 163,
                          "name": "bytesList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 154,
                          "src": "1702:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        },
                        {
                          "id": 164,
                          "name": "pairAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "1713:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 165,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 158,
                          "src": "1726:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 166,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 160,
                          "src": "1734:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 167,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1692:46:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(address[] memory,bytes memory[] memory,address,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 170,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 147,
                          "src": "1765:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "baseExpression": {
                                "id": 172,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1772:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 171,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1772:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1772:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                                "typeString": "type(address[] memory)"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1782:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 174,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1782:5:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1782:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "type(bytes memory[] memory)"
                              }
                            },
                            {
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1790:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 177,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1790:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            {
                              "id": 180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1798:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 179,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1798:4:2",
                                "typeDescriptions": {}
                              }
                            },
                            {
                              "id": 182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1803:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 181,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1803:4:2",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 183,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1771:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                            "typeString": "tuple(type(address[] memory),type(bytes memory[] memory),type(address),type(uint256),type(uint256))"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                            "typeString": "tuple(type(address[] memory),type(bytes memory[] memory),type(address),type(uint256),type(uint256))"
                          }
                        ],
                        "expression": {
                          "id": 168,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "1741:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "1741:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1741:68:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_address_payable_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(address[] memory,bytes memory[] memory,address payable,uint256,uint256)"
                      }
                    },
                    "src": "1692:117:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "1692:117:2"
                }
              ]
            },
            "functionSelector": "0017ea80",
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpack",
            "nameLocation": "1510:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1531:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "1518:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1517:19:2"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "routers",
                  "nameLocation": "1584:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "1567:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 149,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1567:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 150,
                    "nodeType": "ArrayTypeName",
                    "src": "1567:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "bytesList",
                  "nameLocation": "1608:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "1593:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 152,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1593:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 153,
                    "nodeType": "ArrayTypeName",
                    "src": "1593:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "pairAddress",
                  "nameLocation": "1635:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "1627:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1627:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1652:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "1647:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1664:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "1659:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1557:111:2"
            },
            "scope": 569,
            "src": "1501:315:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "1920:1256:2",
              "statements": [
                {
                  "assignments": [
                    202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "swapAmount",
                      "nameLocation": "1947:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "1939:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1939:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 203,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1939:18:2"
                },
                {
                  "assignments": [
                    208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 208,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "1984:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "1967:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1967:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 207,
                        "nodeType": "ArrayTypeName",
                        "src": "1967:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 209,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1967:21:2"
                },
                {
                  "assignments": [
                    211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 211,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2003:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "1998:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 210,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1998:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 212,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1998:12:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 214,
                            "name": "routers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "2029:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2029:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 216,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "2047:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                              "typeString": "bytes memory[] memory"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2047:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2029:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f6e677275656e742061727261797321",
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2059:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aac95bced093ed71c90a62a4fecdd0631645108dd6d9b469b5fa3385c4ee5ec2",
                          "typeString": "literal_string \"incongruent arrays!\""
                        },
                        "value": "incongruent arrays!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aac95bced093ed71c90a62a4fecdd0631645108dd6d9b469b5fa3385c4ee5ec2",
                          "typeString": "literal_string \"incongruent arrays!\""
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2021:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2021:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "2021:60:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 223,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "2110:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 224,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2118:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2118:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 222,
                      "name": "CaleeResponse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "2096:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "EmitStatement",
                  "src": "2091:38:2"
                },
                {
                  "body": {
                    "id": 316,
                    "nodeType": "Block",
                    "src": "2178:489:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 238,
                            "name": "path",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 208,
                            "src": "2192:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 241,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 194,
                                  "src": "2210:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "bytes memory[] memory"
                                  }
                                },
                                "id": 243,
                                "indexExpression": {
                                  "id": 242,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 229,
                                  "src": "2215:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2210:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "baseExpression": {
                                      "id": 245,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2219:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 244,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2219:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 246,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2219:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                                      "typeString": "type(address[] memory)"
                                    }
                                  }
                                ],
                                "id": 247,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2218:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                                  "typeString": "type(address[] memory)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                                  "typeString": "type(address[] memory)"
                                }
                              ],
                              "expression": {
                                "id": 239,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2199:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "src": "2199:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2199:31:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "src": "2192:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 250,
                        "nodeType": "ExpressionStatement",
                        "src": "2192:38:2"
                      },
                      {
                        "expression": {
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 251,
                            "name": "swapAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "2244:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 260,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2291:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ArbV1_$569",
                                      "typeString": "contract ArbV1"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ArbV1_$569",
                                      "typeString": "contract ArbV1"
                                    }
                                  ],
                                  "id": 259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2283:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 258,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2283:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2283:13:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 253,
                                      "name": "path",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 208,
                                      "src": "2264:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 255,
                                    "indexExpression": {
                                      "hexValue": "30",
                                      "id": 254,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2269:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2264:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 252,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 829,
                                  "src": "2257:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$829_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2257:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$829",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 768,
                              "src": "2257:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2257:40:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2244:53:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 264,
                        "nodeType": "ExpressionStatement",
                        "src": "2244:53:2"
                      },
                      {
                        "expression": {
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 265,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 211,
                                "src": "2312:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 266,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2311:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 273,
                                    "name": "approveFuncSelector",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29,
                                    "src": "2360:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 274,
                                      "name": "routers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 191,
                                      "src": "2380:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 276,
                                    "indexExpression": {
                                      "id": 275,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 229,
                                      "src": "2388:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2380:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 277,
                                    "name": "swapAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 202,
                                    "src": "2391:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 271,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2337:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 272,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "2337:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2337:65:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 267,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 208,
                                  "src": "2324:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 269,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 268,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2329:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2324:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2324:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2324:79:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "2311:92:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 281,
                        "nodeType": "ExpressionStatement",
                        "src": "2311:92:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 283,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 211,
                              "src": "2425:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f20617070726f7665",
                              "id": 284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2433:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ac30dbb587132a1896f10516bd1060a1d1e4aac08b0af4e532621eeb850d0dcc",
                                "typeString": "literal_string \"Failed to approve\""
                              },
                              "value": "Failed to approve"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ac30dbb587132a1896f10516bd1060a1d1e4aac08b0af4e532621eeb850d0dcc",
                                "typeString": "literal_string \"Failed to approve\""
                              }
                            ],
                            "id": 282,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2417:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2417:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 286,
                        "nodeType": "ExpressionStatement",
                        "src": "2417:36:2"
                      },
                      {
                        "expression": {
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 287,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 211,
                                "src": "2469:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 288,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2468:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 295,
                                    "name": "swapFuncSelector",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 18,
                                    "src": "2537:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 296,
                                    "name": "swapAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 202,
                                    "src": "2555:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 297,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2566:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "id": 298,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 208,
                                    "src": "2568:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 301,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "2581:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ArbV1_$569",
                                          "typeString": "contract ArbV1"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ArbV1_$569",
                                          "typeString": "contract ArbV1"
                                        }
                                      ],
                                      "id": 300,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2573:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 299,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2573:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 302,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2573:13:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 306,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 303,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "2587:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 304,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "2587:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "3630",
                                      "id": 305,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2605:2:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_60_by_1",
                                        "typeString": "int_const 60"
                                      },
                                      "value": "60"
                                    },
                                    "src": "2587:20:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 293,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2497:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 294,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "2497:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2497:111:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 289,
                                  "name": "routers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 191,
                                  "src": "2481:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 291,
                                "indexExpression": {
                                  "id": 290,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 229,
                                  "src": "2489:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2481:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2481:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2481:128:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "2468:141:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 310,
                        "nodeType": "ExpressionStatement",
                        "src": "2468:141:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 312,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 211,
                              "src": "2631:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073776170",
                              "id": 313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2639:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_885e881c4bdc730d88145a35cae7749eada61ce1b298bbd932214f82d4a67c3a",
                                "typeString": "literal_string \"Failed to swap\""
                              },
                              "value": "Failed to swap"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_885e881c4bdc730d88145a35cae7749eada61ce1b298bbd932214f82d4a67c3a",
                                "typeString": "literal_string \"Failed to swap\""
                              }
                            ],
                            "id": 311,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2623:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2623:33:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 315,
                        "nodeType": "ExpressionStatement",
                        "src": "2623:33:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 231,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "2153:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 232,
                        "name": "routers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "2157:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2157:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2153:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 317,
                  "initializationExpression": {
                    "assignments": [
                      229
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2150:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "2145:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2145:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 230,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2145:6:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2173:3:2",
                      "subExpression": {
                        "id": 235,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "2173:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 237,
                    "nodeType": "ExpressionStatement",
                    "src": "2173:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "2140:527:2"
                },
                {
                  "assignments": [
                    319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 319,
                      "mutability": "mutable",
                      "name": "amountGot",
                      "nameLocation": "2682:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "2677:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 318,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2677:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 329,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 326,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2726:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ArbV1_$569",
                              "typeString": "contract ArbV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ArbV1_$569",
                              "typeString": "contract ArbV1"
                            }
                          ],
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2718:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 324,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2718:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2718:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 321,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "2701:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 320,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 829,
                          "src": "2694:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$829_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2694:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$829",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 768,
                      "src": "2694:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2694:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2677:55:2"
                },
                {
                  "assignments": [
                    331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 331,
                      "mutability": "mutable",
                      "name": "amountExpected",
                      "nameLocation": "2747:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "2742:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 330,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2742:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 339,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "313030303030",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2784:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 334,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "2775:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 332,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 196,
                            "src": "2764:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1035,
                          "src": "2764:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2764:15:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1050,
                      "src": "2764:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2764:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2742:49:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 341,
                          "name": "amountGot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "2810:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 342,
                          "name": "amountExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 331,
                          "src": "2822:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2810:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e73756363657366756c2041726221",
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2837:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35a59f1d98857a701795cbe727216d66e9ed64d45b5155ff76d0f156ed53eb34",
                          "typeString": "literal_string \"Unsuccesful Arb!\""
                        },
                        "value": "Unsuccesful Arb!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35a59f1d98857a701795cbe727216d66e9ed64d45b5155ff76d0f156ed53eb34",
                          "typeString": "literal_string \"Unsuccesful Arb!\""
                        }
                      ],
                      "id": 340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2801:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:55:2"
                },
                {
                  "assignments": [
                    348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 348,
                      "mutability": "mutable",
                      "name": "gain",
                      "nameLocation": "2871:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "2866:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 347,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2866:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 353,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 351,
                        "name": "amountExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "2892:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 349,
                        "name": "amountGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "2878:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1020,
                      "src": "2878:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2878:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2866:41:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 355,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2937:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 356,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2944:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2944:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 358,
                        "name": "amountExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "2956:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 354,
                      "name": "_sendToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 508,
                      "src": "2926:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2926:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "2926:45:2"
                },
                {
                  "condition": {
                    "id": 361,
                    "name": "instantCashout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "2985:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 376,
                    "nodeType": "Block",
                    "src": "3066:55:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 371,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "3091:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 372,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "3098:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 373,
                              "name": "gain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 348,
                              "src": "3105:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 370,
                            "name": "_sendToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 508,
                            "src": "3080:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3080:30:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 375,
                        "nodeType": "ExpressionStatement",
                        "src": "3080:30:2"
                      }
                    ]
                  },
                  "id": 377,
                  "nodeType": "IfStatement",
                  "src": "2981:140:2",
                  "trueBody": {
                    "id": 369,
                    "nodeType": "Block",
                    "src": "3001:59:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 363,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "3026:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 364,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -26,
                                "src": "3033:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "src": "3033:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 366,
                              "name": "gain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 348,
                              "src": "3044:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 362,
                            "name": "_sendToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 508,
                            "src": "3015:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3015:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 368,
                        "nodeType": "ExpressionStatement",
                        "src": "3015:34:2"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 379,
                        "name": "gain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "3148:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 380,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3153:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 381,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "3159:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "3159:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 378,
                      "name": "arbSuccesful",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "3135:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address)"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3135:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "EmitStatement",
                  "src": "3130:39:2"
                }
              ]
            },
            "id": 386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_execute",
            "nameLocation": "1832:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "routers",
                  "nameLocation": "1859:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "1842:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 189,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1842:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 190,
                    "nodeType": "ArrayTypeName",
                    "src": "1842:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1883:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "1868:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 192,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1868:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 193,
                    "nodeType": "ArrayTypeName",
                    "src": "1868:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1894:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "1889:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1889:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1907:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "1902:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1902:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1841:70:2"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1920:0:2"
            },
            "scope": 569,
            "src": "1823:1353:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 424,
              "nodeType": "Block",
              "src": "3230:234:2",
              "statements": [
                {
                  "assignments": [
                    395,
                    398,
                    400,
                    402,
                    404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 395,
                      "mutability": "mutable",
                      "name": "addresses",
                      "nameLocation": "3258:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 424,
                      "src": "3241:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 393,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3241:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 394,
                        "nodeType": "ArrayTypeName",
                        "src": "3241:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 398,
                      "mutability": "mutable",
                      "name": "Data",
                      "nameLocation": "3284:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 424,
                      "src": "3269:19:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 396,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3269:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 397,
                        "nodeType": "ArrayTypeName",
                        "src": "3269:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 400,
                      "mutability": "mutable",
                      "name": "pairAddress",
                      "nameLocation": "3298:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 424,
                      "src": "3290:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 399,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3290:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 402,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3316:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 424,
                      "src": "3311:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 401,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3311:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 404,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "3329:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 424,
                      "src": "3324:8:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 403,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3324:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 408,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 406,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 388,
                        "src": "3343:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 405,
                      "name": "unpack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "3336:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (bytes memory) pure returns (address[] memory,bytes memory[] memory,address,uint256,uint256)"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3336:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address[] memory,bytes memory[] memory,address,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3240:108:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 410,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3367:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3367:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 412,
                          "name": "pairAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 400,
                          "src": "3381:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3367:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466f7262696464656e2043616c6c6572",
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3393:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f64b39215dda0f270205f7600176362fe4ca1e863aaa46849e3f9e3bfec6b232",
                          "typeString": "literal_string \"Forbidden Caller\""
                        },
                        "value": "Forbidden Caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f64b39215dda0f270205f7600176362fe4ca1e863aaa46849e3f9e3bfec6b232",
                          "typeString": "literal_string \"Forbidden Caller\""
                        }
                      ],
                      "id": 409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3359:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3359:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "3359:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 418,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "3431:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 419,
                        "name": "Data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "3441:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "id": 420,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "3446:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 421,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "3453:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 417,
                      "name": "_execute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "3422:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,bytes memory[] memory,uint256,uint256)"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3422:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "3422:35:2"
                }
              ]
            },
            "id": 425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_respond",
            "nameLocation": "3191:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3215:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "3200:19:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3200:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3199:21:2"
            },
            "returnParameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3230:0:2"
            },
            "scope": 569,
            "src": "3182:282:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "3537:162:2",
              "statements": [
                {
                  "assignments": [
                    433,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 433,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "3553:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 454,
                      "src": "3548:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 432,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3548:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 440,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3593:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 434,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 427,
                          "src": "3563:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3563:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 436,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "3585:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3563:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3563:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3547:49:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 442,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "3614:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3620:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3606:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3606:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "3606:37:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3679:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3671:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 447,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3671:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3671:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 451,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "3682:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 446,
                      "name": "transferSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "3658:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3658:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "EmitStatement",
                  "src": "3653:39:2"
                }
              ]
            },
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendCoin",
            "nameLocation": "3479:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 427,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3505:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "3489:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3489:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3521:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "3516:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3516:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3488:40:2"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3537:0:2"
            },
            "scope": 569,
            "src": "3470:229:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 469,
              "nodeType": "Block",
              "src": "3788:44:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 465,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "3808:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 466,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 459,
                        "src": "3818:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 464,
                      "name": "_sendCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 455,
                      "src": "3798:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3798:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "3798:27:2"
                }
              ]
            },
            "functionSelector": "90b98a11",
            "id": 470,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 462,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 461,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78,
                  "src": "3776:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3776:11:2"
              }
            ],
            "name": "sendCoin",
            "nameLocation": "3718:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3743:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 470,
                  "src": "3727:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3727:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3759:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 470,
                  "src": "3754:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3754:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3726:40:2"
            },
            "returnParameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3788:0:2"
            },
            "scope": 569,
            "src": "3709:123:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "3917:202:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 486,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3970:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ArbV1_$569",
                                    "typeString": "contract ArbV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ArbV1_$569",
                                    "typeString": "contract ArbV1"
                                  }
                                ],
                                "id": 485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3962:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 484,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3962:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3962:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 481,
                                  "name": "tokenAdd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 472,
                                  "src": "3942:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 480,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 829,
                                "src": "3935:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$829_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3935:16:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$829",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 768,
                            "src": "3935:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3935:41:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 489,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 476,
                          "src": "3980:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3935:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742046756e6473",
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3987:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092",
                          "typeString": "literal_string \"Insufficient Funds\""
                        },
                        "value": "Insufficient Funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f96070838a802b00711e63911cb51cdbd018900fa6d34d5ff764f6299488092",
                          "typeString": "literal_string \"Insufficient Funds\""
                        }
                      ],
                      "id": 479,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3927:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3927:81:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "3927:81:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 498,
                        "name": "reciepient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "4044:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 499,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "4056:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 495,
                            "name": "tokenAdd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "4025:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 494,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 829,
                          "src": "4018:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$829_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4018:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$829",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 778,
                      "src": "4018:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4018:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "4018:45:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 503,
                        "name": "tokenAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "4091:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 504,
                        "name": "reciepient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "4101:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 502,
                      "name": "transferSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "4078:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4078:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "EmitStatement",
                  "src": "4073:39:2"
                }
              ]
            },
            "id": 508,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendToken",
            "nameLocation": "3847:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 472,
                  "mutability": "mutable",
                  "name": "tokenAdd",
                  "nameLocation": "3866:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "3858:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3858:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "reciepient",
                  "nameLocation": "3884:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "3876:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3876:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 476,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3901:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "3896:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3896:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3857:51:2"
            },
            "returnParameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3917:0:2"
            },
            "scope": 569,
            "src": "3838:281:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 525,
              "nodeType": "Block",
              "src": "4214:55:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 520,
                        "name": "tokenAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "4235:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 521,
                        "name": "reciepient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "4244:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 522,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "4255:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 519,
                      "name": "_sendToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 508,
                      "src": "4224:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4224:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "4224:38:2"
                }
              ]
            },
            "functionSelector": "2fdcfbd2",
            "id": 526,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 517,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 516,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78,
                  "src": "4202:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4202:11:2"
              }
            ],
            "name": "sendToken",
            "nameLocation": "4133:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 510,
                  "mutability": "mutable",
                  "name": "tokenAdd",
                  "nameLocation": "4151:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "4143:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4143:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "reciepient",
                  "nameLocation": "4169:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "4161:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4161:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4185:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "4180:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4180:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4142:50:2"
            },
            "returnParameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4214:0:2"
            },
            "scope": 569,
            "src": "4124:145:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 537,
              "nodeType": "Block",
              "src": "4334:31:2",
              "statements": [
                {
                  "expression": {
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 533,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "4344:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 534,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 528,
                      "src": "4352:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4344:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "4344:14:2"
                }
              ]
            },
            "functionSelector": "a6f9dae1",
            "id": 538,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 531,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 530,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78,
                  "src": "4322:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4322:11:2"
              }
            ],
            "name": "changeOwner",
            "nameLocation": "4284:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "4305:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "4297:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4297:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4296:16:2"
            },
            "returnParameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4334:0:2"
            },
            "scope": 569,
            "src": "4275:90:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 549,
              "nodeType": "Block",
              "src": "4430:50:2",
              "statements": [
                {
                  "expression": {
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 545,
                      "name": "instantCashout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "4440:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 546,
                      "name": "_method",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 540,
                      "src": "4457:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4440:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "4440:24:2"
                }
              ]
            },
            "functionSelector": "af02f2b5",
            "id": 550,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 543,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 542,
                  "name": "OnlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78,
                  "src": "4418:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4418:11:2"
              }
            ],
            "name": "changeCashout",
            "nameLocation": "4380:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 540,
                  "mutability": "mutable",
                  "name": "_method",
                  "nameLocation": "4400:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 550,
                  "src": "4395:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4395:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4394:14:2"
            },
            "returnParameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4430:0:2"
            },
            "scope": 569,
            "src": "4371:109:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 563,
              "nodeType": "Block",
              "src": "4526:49:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 559,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4557:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4557:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 556,
                            "name": "skimPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 552,
                            "src": "4542:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 555,
                          "name": "IPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1224,
                          "src": "4536:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPair_$1224_$",
                            "typeString": "type(contract IPair)"
                          }
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4536:15:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPair_$1224",
                          "typeString": "contract IPair"
                        }
                      },
                      "id": 558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "skim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1220,
                      "src": "4536:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4536:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 562,
                  "nodeType": "ExpressionStatement",
                  "src": "4536:32:2"
                }
              ]
            },
            "functionSelector": "bc25cf77",
            "id": 564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "skim",
            "nameLocation": "4494:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 552,
                  "mutability": "mutable",
                  "name": "skimPair",
                  "nameLocation": "4507:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 564,
                  "src": "4499:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4499:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4498:18:2"
            },
            "returnParameters": {
              "id": 554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4526:0:2"
            },
            "scope": 569,
            "src": "4485:90:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 567,
              "nodeType": "Block",
              "src": "4608:2:2",
              "statements": []
            },
            "id": 568,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4588:2:2"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4608:0:2"
            },
            "scope": 569,
            "src": "4581:29:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 570,
        "src": "216:4396:2",
        "usedErrors": []
      }
    ],
    "src": "40:4574:2"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b031916331790556001805460ff60a01b1916600160a01b179055610d18806100456000396000f3fe60806040526004361061007e5760003560e01c806390b98a111161004e57806390b98a111461013e578063a6f9dae11461015e578063af02f2b51461017e578063bc25cf771461019e57600080fd5b806217ea801461008a57806310f2aa41146100c45780632fdcfbd2146100e65780638da5cb5b1461010657600080fd5b3661008557005b600080fd5b34801561009657600080fd5b506100aa6100a53660046107e3565b6101be565b6040516100bb95949392919061087c565b60405180910390f35b3480156100d057600080fd5b506100e46100df366004610956565b6101ec565b005b3480156100f257600080fd5b506100e46101013660046109b9565b6103c5565b34801561011257600080fd5b50600054610126906001600160a01b031681565b6040516001600160a01b0390911681526020016100bb565b34801561014a57600080fd5b506100e46101593660046109fa565b6103ec565b34801561016a57600080fd5b506100e4610179366004610a26565b610411565b34801561018a57600080fd5b506100e4610199366004610a58565b61044a565b3480156101aa57600080fd5b506100e46101b9366004610a26565b61047f565b6060806000806000858060200190518101906101da9190610b70565b939a9299509097509550909350915050565b60006101f7826101be565b505092505050806001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561023b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025f9190610c58565b6001600160a01b0316836001600160a01b031614806102f05750806001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102db9190610c58565b6001600160a01b0316836001600160a01b0316145b6103415760405162461bcd60e51b815260206004820152601860248201527f496e636f7272656374205061697220666f7220746f6b656e000000000000000060448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b038581169190911790915560405163022c0d9f60e01b81529082169063022c0d9f9061038c908890889030908890600401610c75565b600060405180830381600087803b1580156103a657600080fd5b505af11580156103ba573d6000803e3d6000fd5b505050505050505050565b6000546001600160a01b031633146103dc57600080fd5b6103e78383836104db565b505050565b6000546001600160a01b0316331461040357600080fd5b61040d8282610645565b5050565b6000546001600160a01b0316331461042857600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461046157600080fd5b60018054911515600160a01b0260ff60a01b19909216919091179055565b60405163bc25cf7760e01b81523360048201526001600160a01b0382169063bc25cf7790602401600060405180830381600087803b1580156104c057600080fd5b505af11580156104d4573d6000803e3d6000fd5b5050505050565b6040516370a0823160e01b815230600482015281906001600160a01b038516906370a0823190602401602060405180830381865afa158015610521573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105459190610cac565b10156105885760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742046756e647360701b6044820152606401610338565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156105d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fb9190610cc5565b50604080516001600160a01b038086168252841660208201527f81ff37c0a846f0fa29fd65bc885ac344052231414004d0e16a59678c4018b3a391015b60405180910390a1505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610692576040519150601f19603f3d011682016040523d82523d6000602084013e610697565b606091505b50509050806106df5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610338565b60408051600081526001600160a01b03851660208201527f81ff37c0a846f0fa29fd65bc885ac344052231414004d0e16a59678c4018b3a39101610638565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561075d5761075d61071e565b604052919050565b600067ffffffffffffffff82111561077f5761077f61071e565b50601f01601f191660200190565b600082601f83011261079e57600080fd5b81356107b16107ac82610765565b610734565b8181528460208386010111156107c657600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156107f557600080fd5b813567ffffffffffffffff81111561080c57600080fd5b6108188482850161078d565b949350505050565b60005b8381101561083b578181015183820152602001610823565b8381111561084a576000848401525b50505050565b60008151808452610868816020860160208601610820565b601f01601f19169290920160200192915050565b60a0808252865190820181905260009060209060c0840190828a01845b828110156108be5781516001600160a01b031684529284019290840190600101610899565b50505083810382850152875180825282820190600581901b830184018a850160005b8381101561090e57601f198684030185526108fc838351610850565b948701949250908601906001016108e0565b50506001600160a01b038a166040880152945061092b9350505050565b6060820193909352608001529392505050565b6001600160a01b038116811461095357600080fd5b50565b6000806000806080858703121561096c57600080fd5b843593506020850135925060408501356109858161093e565b9150606085013567ffffffffffffffff8111156109a157600080fd5b6109ad8782880161078d565b91505092959194509250565b6000806000606084860312156109ce57600080fd5b83356109d98161093e565b925060208401356109e98161093e565b929592945050506040919091013590565b60008060408385031215610a0d57600080fd5b8235610a188161093e565b946020939093013593505050565b600060208284031215610a3857600080fd5b8135610a438161093e565b9392505050565b801515811461095357600080fd5b600060208284031215610a6a57600080fd5b8135610a4381610a4a565b600067ffffffffffffffff821115610a8f57610a8f61071e565b5060051b60200190565b600082601f830112610aaa57600080fd5b81516020610aba6107ac83610a75565b82815260059290921b84018101918181019086841115610ad957600080fd5b8286015b84811015610b5557805167ffffffffffffffff811115610afd5760008081fd5b8701603f81018913610b0f5760008081fd5b848101516040610b216107ac83610765565b8281528b82848601011115610b365760008081fd5b610b4583898301848701610820565b8652505050918301918301610add565b509695505050505050565b8051610b6b8161093e565b919050565b600080600080600060a08688031215610b8857600080fd5b855167ffffffffffffffff80821115610ba057600080fd5b818801915088601f830112610bb457600080fd5b81516020610bc46107ac83610a75565b82815260059290921b8401810191818101908c841115610be357600080fd5b948201945b83861015610c0a578551610bfb8161093e565b82529482019490820190610be8565b918b0151919950909350505080821115610c2357600080fd5b50610c3088828901610a99565b945050610c3f60408701610b60565b6060870151608090970151959894975095949392505050565b600060208284031215610c6a57600080fd5b8151610a438161093e565b84815283602082015260018060a01b0383166040820152608060608201526000610ca26080830184610850565b9695505050505050565b600060208284031215610cbe57600080fd5b5051919050565b600060208284031215610cd757600080fd5b8151610a4381610a4a56fea26469706673582212203238a3e5a2e79bad38dbf416dd2c5d25eb815298c1c2f272074c61765ec398e764736f6c634300080e0033",
  "bytecodeSha1": "fd2bed320d69aeeccf37b87832e7c14a95d70231",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "ArbV1",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {
        "ArbV1._sendCoin": {
          "17": [
            3614,
            3618,
            true
          ]
        },
        "ArbV1._sendToken": {
          "16": [
            3935,
            3986,
            true
          ]
        },
        "ArbV1.start": {
          "14": [
            1261,
            1297,
            true
          ],
          "15": [
            1301,
            1337,
            true
          ]
        }
      },
      "5": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {
        "ArbV1._sendCoin": {
          "12": [
            3606,
            3643
          ],
          "13": [
            3653,
            3692
          ]
        },
        "ArbV1._sendToken": {
          "9": [
            3927,
            4008
          ],
          "10": [
            4018,
            4063
          ],
          "11": [
            4073,
            4112
          ]
        },
        "ArbV1.changeCashout": {
          "7": [
            4440,
            4464
          ]
        },
        "ArbV1.changeOwner": {
          "6": [
            4344,
            4358
          ]
        },
        "ArbV1.sendCoin": {
          "5": [
            3798,
            3825
          ]
        },
        "ArbV1.sendToken": {
          "4": [
            4224,
            4262
          ]
        },
        "ArbV1.skim": {
          "8": [
            4536,
            4568
          ]
        },
        "ArbV1.start": {
          "1": [
            1253,
            1383
          ],
          "2": [
            1398,
            1412
          ],
          "3": [
            1426,
            1484
          ]
        },
        "ArbV1.unpack": {
          "0": [
            1692,
            1809
          ]
        }
      },
      "5": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.0/IERC20",
    "IPair",
    "OpenZeppelin/openzeppelin-contracts@4.4.0/SafeMath"
  ],
  "deployedBytecode": "60806040526004361061007e5760003560e01c806390b98a111161004e57806390b98a111461013e578063a6f9dae11461015e578063af02f2b51461017e578063bc25cf771461019e57600080fd5b806217ea801461008a57806310f2aa41146100c45780632fdcfbd2146100e65780638da5cb5b1461010657600080fd5b3661008557005b600080fd5b34801561009657600080fd5b506100aa6100a53660046107e3565b6101be565b6040516100bb95949392919061087c565b60405180910390f35b3480156100d057600080fd5b506100e46100df366004610956565b6101ec565b005b3480156100f257600080fd5b506100e46101013660046109b9565b6103c5565b34801561011257600080fd5b50600054610126906001600160a01b031681565b6040516001600160a01b0390911681526020016100bb565b34801561014a57600080fd5b506100e46101593660046109fa565b6103ec565b34801561016a57600080fd5b506100e4610179366004610a26565b610411565b34801561018a57600080fd5b506100e4610199366004610a58565b61044a565b3480156101aa57600080fd5b506100e46101b9366004610a26565b61047f565b6060806000806000858060200190518101906101da9190610b70565b939a9299509097509550909350915050565b60006101f7826101be565b505092505050806001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561023b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025f9190610c58565b6001600160a01b0316836001600160a01b031614806102f05750806001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102db9190610c58565b6001600160a01b0316836001600160a01b0316145b6103415760405162461bcd60e51b815260206004820152601860248201527f496e636f7272656374205061697220666f7220746f6b656e000000000000000060448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b038581169190911790915560405163022c0d9f60e01b81529082169063022c0d9f9061038c908890889030908890600401610c75565b600060405180830381600087803b1580156103a657600080fd5b505af11580156103ba573d6000803e3d6000fd5b505050505050505050565b6000546001600160a01b031633146103dc57600080fd5b6103e78383836104db565b505050565b6000546001600160a01b0316331461040357600080fd5b61040d8282610645565b5050565b6000546001600160a01b0316331461042857600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461046157600080fd5b60018054911515600160a01b0260ff60a01b19909216919091179055565b60405163bc25cf7760e01b81523360048201526001600160a01b0382169063bc25cf7790602401600060405180830381600087803b1580156104c057600080fd5b505af11580156104d4573d6000803e3d6000fd5b5050505050565b6040516370a0823160e01b815230600482015281906001600160a01b038516906370a0823190602401602060405180830381865afa158015610521573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105459190610cac565b10156105885760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742046756e647360701b6044820152606401610338565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156105d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fb9190610cc5565b50604080516001600160a01b038086168252841660208201527f81ff37c0a846f0fa29fd65bc885ac344052231414004d0e16a59678c4018b3a391015b60405180910390a1505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610692576040519150601f19603f3d011682016040523d82523d6000602084013e610697565b606091505b50509050806106df5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610338565b60408051600081526001600160a01b03851660208201527f81ff37c0a846f0fa29fd65bc885ac344052231414004d0e16a59678c4018b3a39101610638565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561075d5761075d61071e565b604052919050565b600067ffffffffffffffff82111561077f5761077f61071e565b50601f01601f191660200190565b600082601f83011261079e57600080fd5b81356107b16107ac82610765565b610734565b8181528460208386010111156107c657600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156107f557600080fd5b813567ffffffffffffffff81111561080c57600080fd5b6108188482850161078d565b949350505050565b60005b8381101561083b578181015183820152602001610823565b8381111561084a576000848401525b50505050565b60008151808452610868816020860160208601610820565b601f01601f19169290920160200192915050565b60a0808252865190820181905260009060209060c0840190828a01845b828110156108be5781516001600160a01b031684529284019290840190600101610899565b50505083810382850152875180825282820190600581901b830184018a850160005b8381101561090e57601f198684030185526108fc838351610850565b948701949250908601906001016108e0565b50506001600160a01b038a166040880152945061092b9350505050565b6060820193909352608001529392505050565b6001600160a01b038116811461095357600080fd5b50565b6000806000806080858703121561096c57600080fd5b843593506020850135925060408501356109858161093e565b9150606085013567ffffffffffffffff8111156109a157600080fd5b6109ad8782880161078d565b91505092959194509250565b6000806000606084860312156109ce57600080fd5b83356109d98161093e565b925060208401356109e98161093e565b929592945050506040919091013590565b60008060408385031215610a0d57600080fd5b8235610a188161093e565b946020939093013593505050565b600060208284031215610a3857600080fd5b8135610a438161093e565b9392505050565b801515811461095357600080fd5b600060208284031215610a6a57600080fd5b8135610a4381610a4a565b600067ffffffffffffffff821115610a8f57610a8f61071e565b5060051b60200190565b600082601f830112610aaa57600080fd5b81516020610aba6107ac83610a75565b82815260059290921b84018101918181019086841115610ad957600080fd5b8286015b84811015610b5557805167ffffffffffffffff811115610afd5760008081fd5b8701603f81018913610b0f5760008081fd5b848101516040610b216107ac83610765565b8281528b82848601011115610b365760008081fd5b610b4583898301848701610820565b8652505050918301918301610add565b509695505050505050565b8051610b6b8161093e565b919050565b600080600080600060a08688031215610b8857600080fd5b855167ffffffffffffffff80821115610ba057600080fd5b818801915088601f830112610bb457600080fd5b81516020610bc46107ac83610a75565b82815260059290921b8401810191818101908c841115610be357600080fd5b948201945b83861015610c0a578551610bfb8161093e565b82529482019490820190610be8565b918b0151919950909350505080821115610c2357600080fd5b50610c3088828901610a99565b945050610c3f60408701610b60565b6060870151608090970151959894975095949392505050565b600060208284031215610c6a57600080fd5b8151610a438161093e565b84815283602082015260018060a01b0383166040820152608060608201526000610ca26080830184610850565b9695505050505050565b600060208284031215610cbe57600080fd5b5051919050565b600060208284031215610cd757600080fd5b8151610a4381610a4a56fea26469706673582212203238a3e5a2e79bad38dbf416dd2c5d25eb815298c1c2f272074c61765ec398e764736f6c634300080e0033",
  "deployedSourceMap": "216:4396:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1501:315;;;;;;;;;;-1:-1:-1;1501:315:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1061:434;;;;;;;;;;-1:-1:-1;1061:434:2;;;;;:::i;:::-;;:::i;:::-;;4124:145;;;;;;;;;;-1:-1:-1;4124:145:2;;;;;:::i;:::-;;:::i;505:20::-;;;;;;;;;;-1:-1:-1;505:20:2;;;;-1:-1:-1;;;;;505:20:2;;;;;;-1:-1:-1;;;;;4969:32:7;;;4951:51;;4939:2;4924:18;505:20:2;4805:203:7;3709:123:2;;;;;;;;;;-1:-1:-1;3709:123:2;;;;;:::i;:::-;;:::i;4275:90::-;;;;;;;;;;-1:-1:-1;4275:90:2;;;;;:::i;:::-;;:::i;4371:109::-;;;;;;;;;;-1:-1:-1;4371:109:2;;;;;:::i;:::-;;:::i;4485:90::-;;;;;;;;;;-1:-1:-1;4485:90:2;;;;;:::i;:::-;;:::i;1501:315::-;1567:24;1593;1627:19;1647:11;1659:8;1765:4;1741:68;;;;;;;;;;;;:::i;:::-;1692:117;;;;-1:-1:-1;1692:117:2;;-1:-1:-1;1692:117:2;-1:-1:-1;1692:117:2;;-1:-1:-1;1501:315:2;-1:-1:-1;;1501:315:2:o;1061:434::-;1200:18;1226:12;1233:4;1226:6;:12::i;:::-;1194:44;;;;;;1277:10;-1:-1:-1;;;;;1271:24:2;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1261:36:2;:6;-1:-1:-1;;;;;1261:36:2;;:76;;;;1317:10;-1:-1:-1;;;;;1311:24:2;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1301:36:2;:6;-1:-1:-1;;;;;1301:36:2;;1261:76;1253:130;;;;-1:-1:-1;;;1253:130:2;;9598:2:7;1253:130:2;;;9580:21:7;9637:2;9617:18;;;9610:30;9676:26;9656:18;;;9649:54;9720:18;;1253:130:2;;;;;;;;;1398:5;:14;;-1:-1:-1;;;;;;1398:14:2;-1:-1:-1;;;;;1398:14:2;;;;;;;;;;1426:58;;-1:-1:-1;;;1426:58:2;;:22;;;;;;:58;;1449:7;;1457;;1473:4;;1479;;1426:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1180:315;1061:434;;;;:::o;4124:145::-;930:5;;-1:-1:-1;;;;;930:5:2;939:10;930:19;922:28;;;;;;4224:38:::1;4235:8;4244:10;4255:6;4224:10;:38::i;:::-;4124:145:::0;;;:::o;3709:123::-;930:5;;-1:-1:-1;;;;;930:5:2;939:10;930:19;922:28;;;;;;3798:27:::1;3808:9;3818:6;3798:9;:27::i;:::-;3709:123:::0;;:::o;4275:90::-;930:5;;-1:-1:-1;;;;;930:5:2;939:10;930:19;922:28;;;;;;4344:5:::1;:14:::0;;-1:-1:-1;;;;;;4344:14:2::1;-1:-1:-1::0;;;;;4344:14:2;;;::::1;::::0;;;::::1;::::0;;4275:90::o;4371:109::-;930:5;;-1:-1:-1;;;;;930:5:2;939:10;930:19;922:28;;;;;;4440:14:::1;:24:::0;;;::::1;;-1:-1:-1::0;;;4440:24:2::1;-1:-1:-1::0;;;;4440:24:2;;::::1;::::0;;;::::1;::::0;;4371:109::o;4485:90::-;4536:32;;-1:-1:-1;;;4536:32:2;;4557:10;4536:32;;;4951:51:7;-1:-1:-1;;;;;4536:20:2;;;;;4924:18:7;;4536:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4485:90;:::o;3838:281::-;3935:41;;-1:-1:-1;;;3935:41:2;;3970:4;3935:41;;;4951:51:7;3980:6:2;;-1:-1:-1;;;;;3935:26:2;;;;;4924:18:7;;3935:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;3927:81;;;;-1:-1:-1;;;3927:81:2;;10603:2:7;3927:81:2;;;10585:21:7;10642:2;10622:18;;;10615:30;-1:-1:-1;;;10661:18:7;;;10654:48;10719:18;;3927:81:2;10401:342:7;3927:81:2;4018:45;;-1:-1:-1;;;4018:45:2;;-1:-1:-1;;;;;10940:32:7;;;4018:45:2;;;10922:51:7;10989:18;;;10982:34;;;4018:25:2;;;;;10895:18:7;;4018:45:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4078:34:2;;;-1:-1:-1;;;;;11507:15:7;;;11489:34;;11559:15;;11554:2;11539:18;;11532:43;4078:34:2;;11424:18:7;4078:34:2;;;;;;;;3838:281;;;:::o;3470:229::-;3548:9;3563;-1:-1:-1;;;;;3563:14:2;3585:6;3563:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3547:49;;;3614:4;3606:37;;;;-1:-1:-1;;;3606:37:2;;11998:2:7;3606:37:2;;;11980:21:7;12037:2;12017:18;;;12010:30;-1:-1:-1;;;12056:18:7;;;12049:50;12116:18;;3606:37:2;11796:344:7;3606:37:2;3658:34;;;3679:1;11489:34:7;;-1:-1:-1;;;;;11559:15:7;;11554:2;11539:18;;11532:43;3658:34:2;;11424:18:7;3658:34:2;11277:304:7;14:127;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:7;247:40;;317:18;302:34;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:7:o;426:186::-;474:4;507:18;499:6;496:30;493:56;;;529:18;;:::i;:::-;-1:-1:-1;595:2:7;574:15;-1:-1:-1;;570:29:7;601:4;566:40;;426:186::o;617:462::-;659:5;712:3;705:4;697:6;693:17;689:27;679:55;;730:1;727;720:12;679:55;766:6;753:20;797:48;813:31;841:2;813:31;:::i;:::-;797:48;:::i;:::-;870:2;861:7;854:19;916:3;909:4;904:2;896:6;892:15;888:26;885:35;882:55;;;933:1;930;923:12;882:55;998:2;991:4;983:6;979:17;972:4;963:7;959:18;946:55;1046:1;1021:16;;;1039:4;1017:27;1010:38;;;;1025:7;617:462;-1:-1:-1;;;617:462:7:o;1084:320::-;1152:6;1205:2;1193:9;1184:7;1180:23;1176:32;1173:52;;;1221:1;1218;1211:12;1173:52;1261:9;1248:23;1294:18;1286:6;1283:30;1280:50;;;1326:1;1323;1316:12;1280:50;1349:49;1390:7;1381:6;1370:9;1366:22;1349:49;:::i;:::-;1339:59;1084:320;-1:-1:-1;;;;1084:320:7:o;1518:258::-;1590:1;1600:113;1614:6;1611:1;1608:13;1600:113;;;1690:11;;;1684:18;1671:11;;;1664:39;1636:2;1629:10;1600:113;;;1731:6;1728:1;1725:13;1722:48;;;1766:1;1757:6;1752:3;1748:16;1741:27;1722:48;;1518:258;;;:::o;1781:257::-;1822:3;1860:5;1854:12;1887:6;1882:3;1875:19;1903:63;1959:6;1952:4;1947:3;1943:14;1936:4;1929:5;1925:16;1903:63;:::i;:::-;2020:2;1999:15;-1:-1:-1;;1995:29:7;1986:39;;;;2027:4;1982:50;;1781:257;-1:-1:-1;;1781:257:7:o;2043:1563::-;2413:3;2426:22;;;2497:13;;2398:19;;;2519:22;;;2365:4;;2595;;2572:3;2557:19;;;2622:15;;;2365:4;2665:195;2679:6;2676:1;2673:13;2665:195;;;2744:13;;-1:-1:-1;;;;;2740:39:7;2728:52;;2800:12;;;;2835:15;;;;2776:1;2694:9;2665:195;;;-1:-1:-1;;;2896:19:7;;;2876:18;;;2869:47;2966:13;;2988:21;;;3027:12;;;;3079:1;3075:16;;;3066:26;;3062:35;;3122:15;;;3157:1;3167:268;3183:8;3178:3;3175:17;3167:268;;;3278:2;3274:7;3268:3;3260:6;3256:16;3252:30;3245:5;3238:45;3306:41;3340:6;3329:8;3323:15;3306:41;:::i;:::-;3411:14;;;;3296:51;-1:-1:-1;3372:17:7;;;;3211:1;3202:11;3167:268;;;-1:-1:-1;;;;;;;1475:31:7;;3509:2;3494:18;;1463:44;3452:6;-1:-1:-1;3467:46:7;;-1:-1:-1;;;;1409:104:7;3467:46;3544:2;3529:18;;3522:34;;;;3587:3;3572:19;3565:35;2043:1563;;-1:-1:-1;;;2043:1563:7:o;3611:131::-;-1:-1:-1;;;;;3686:31:7;;3676:42;;3666:70;;3732:1;3729;3722:12;3666:70;3611:131;:::o;3747:592::-;3842:6;3850;3858;3866;3919:3;3907:9;3898:7;3894:23;3890:33;3887:53;;;3936:1;3933;3926:12;3887:53;3972:9;3959:23;3949:33;;4029:2;4018:9;4014:18;4001:32;3991:42;;4083:2;4072:9;4068:18;4055:32;4096:31;4121:5;4096:31;:::i;:::-;4146:5;-1:-1:-1;4202:2:7;4187:18;;4174:32;4229:18;4218:30;;4215:50;;;4261:1;4258;4251:12;4215:50;4284:49;4325:7;4316:6;4305:9;4301:22;4284:49;:::i;:::-;4274:59;;;3747:592;;;;;;;:::o;4344:456::-;4421:6;4429;4437;4490:2;4478:9;4469:7;4465:23;4461:32;4458:52;;;4506:1;4503;4496:12;4458:52;4545:9;4532:23;4564:31;4589:5;4564:31;:::i;:::-;4614:5;-1:-1:-1;4671:2:7;4656:18;;4643:32;4684:33;4643:32;4684:33;:::i;:::-;4344:456;;4736:7;;-1:-1:-1;;;4790:2:7;4775:18;;;;4762:32;;4344:456::o;5013:323::-;5089:6;5097;5150:2;5138:9;5129:7;5125:23;5121:32;5118:52;;;5166:1;5163;5156:12;5118:52;5205:9;5192:23;5224:31;5249:5;5224:31;:::i;:::-;5274:5;5326:2;5311:18;;;;5298:32;;-1:-1:-1;;;5013:323:7:o;5341:247::-;5400:6;5453:2;5441:9;5432:7;5428:23;5424:32;5421:52;;;5469:1;5466;5459:12;5421:52;5508:9;5495:23;5527:31;5552:5;5527:31;:::i;:::-;5577:5;5341:247;-1:-1:-1;;;5341:247:7:o;5593:118::-;5679:5;5672:13;5665:21;5658:5;5655:32;5645:60;;5701:1;5698;5691:12;5716:241;5772:6;5825:2;5813:9;5804:7;5800:23;5796:32;5793:52;;;5841:1;5838;5831:12;5793:52;5880:9;5867:23;5899:28;5921:5;5899:28;:::i;5962:183::-;6022:4;6055:18;6047:6;6044:30;6041:56;;;6077:18;;:::i;:::-;-1:-1:-1;6122:1:7;6118:14;6134:4;6114:25;;5962:183::o;6150:1388::-;6213:5;6266:3;6259:4;6251:6;6247:17;6243:27;6233:55;;6284:1;6281;6274:12;6233:55;6313:6;6307:13;6339:4;6363:60;6379:43;6419:2;6379:43;:::i;6363:60::-;6457:15;;;6543:1;6539:10;;;;6527:23;;6523:32;;;6488:12;;;;6567:15;;;6564:35;;;6595:1;6592;6585:12;6564:35;6631:2;6623:6;6619:15;6643:866;6659:6;6654:3;6651:15;6643:866;;;6738:3;6732:10;6774:18;6761:11;6758:35;6755:125;;;6834:1;6863:2;6859;6852:14;6755:125;6903:24;;6962:2;6954:11;;6950:21;-1:-1:-1;6940:119:7;;7013:1;7042:2;7038;7031:14;6940:119;7096:2;7092;7088:11;7082:18;7123:2;7153:48;7169:31;7197:2;7169:31;:::i;7153:48::-;7230:2;7221:7;7214:19;7274:3;7269:2;7264;7260;7256:11;7252:20;7249:29;7246:119;;;7319:1;7348:2;7344;7337:14;7246:119;7378:56;7431:2;7426;7417:7;7413:16;7408:2;7404;7400:11;7378:56;:::i;:::-;7447:20;;-1:-1:-1;;;7487:12:7;;;;6676;;6643:866;;;-1:-1:-1;7527:5:7;6150:1388;-1:-1:-1;;;;;;6150:1388:7:o;7543:146::-;7630:13;;7652:31;7630:13;7652:31;:::i;:::-;7543:146;;;:::o;7694:1441::-;7867:6;7875;7883;7891;7899;7952:3;7940:9;7931:7;7927:23;7923:33;7920:53;;;7969:1;7966;7959:12;7920:53;8002:9;7996:16;8031:18;8072:2;8064:6;8061:14;8058:34;;;8088:1;8085;8078:12;8058:34;8126:6;8115:9;8111:22;8101:32;;8171:7;8164:4;8160:2;8156:13;8152:27;8142:55;;8193:1;8190;8183:12;8142:55;8222:2;8216:9;8244:4;8268:60;8284:43;8324:2;8284:43;:::i;8268:60::-;8362:15;;;8444:1;8440:10;;;;8432:19;;8428:28;;;8393:12;;;;8468:19;;;8465:39;;;8500:1;8497;8490:12;8465:39;8524:11;;;;8544:210;8560:6;8555:3;8552:15;8544:210;;;8633:3;8627:10;8650:31;8675:5;8650:31;:::i;:::-;8694:18;;8577:12;;;;8732;;;;8544:210;;;8809:18;;;8803:25;8773:5;;-1:-1:-1;8803:25:7;;-1:-1:-1;;;8840:16:7;;;8837:36;;;8869:1;8866;8859:12;8837:36;;8892:72;8956:7;8945:8;8934:9;8930:24;8892:72;:::i;:::-;8882:82;;;8983:57;9036:2;9025:9;9021:18;8983:57;:::i;:::-;9080:2;9065:18;;9059:25;9124:3;9109:19;;;9103:26;7694:1441;;;;-1:-1:-1;8973:67:7;9059:25;9103:26;7694:1441;-1:-1:-1;;;7694:1441:7:o;9140:251::-;9210:6;9263:2;9251:9;9242:7;9238:23;9234:32;9231:52;;;9279:1;9276;9269:12;9231:52;9311:9;9305:16;9330:31;9355:5;9330:31;:::i;9749:458::-;9980:6;9969:9;9962:25;10023:6;10018:2;10007:9;10003:18;9996:34;10095:1;10091;10086:3;10082:11;10078:19;10070:6;10066:32;10061:2;10050:9;10046:18;10039:60;10135:3;10130:2;10119:9;10115:18;10108:31;9943:4;10156:45;10196:3;10185:9;10181:19;10173:6;10156:45;:::i;:::-;10148:53;9749:458;-1:-1:-1;;;;;;9749:458:7:o;10212:184::-;10282:6;10335:2;10323:9;10314:7;10310:23;10306:32;10303:52;;;10351:1;10348;10341:12;10303:52;-1:-1:-1;10374:16:7;;10212:184;-1:-1:-1;10212:184:7:o;11027:245::-;11094:6;11147:2;11135:9;11126:7;11122:23;11118:32;11115:52;;;11163:1;11160;11153:12;11115:52;11195:9;11189:16;11214:28;11236:5;11214:28;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    216,
    4612
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x90B98A11 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x90B98A11 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xAF02F2B5 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x17EA80 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x10F2AA41 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x2FDCFBD2 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x85 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x7E3 JUMP JUMPDEST PUSH2 0x1BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0xDF CALLDATASIZE PUSH1 0x4 PUSH2 0x956 JUMP JUMPDEST PUSH2 0x1EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x9B9 JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x126 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0xA58 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0xB70 JUMP JUMPDEST SWAP4 SWAP11 SWAP3 SWAP10 POP SWAP1 SWAP8 POP SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7 DUP3 PUSH2 0x1BE JUMP JUMPDEST POP POP SWAP3 POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2F0 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0xC58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374205061697220666F7220746F6B656E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x22C0D9F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0x38C SWAP1 DUP9 SWAP1 DUP9 SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E7 DUP4 DUP4 DUP4 PUSH2 0x4DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40D DUP3 DUP3 PUSH2 0x645 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xBC25CF77 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xBC25CF77 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x545 SWAP2 SWAP1 PUSH2 0xCAC JUMP JUMPDEST LT ISZERO PUSH2 0x588 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742046756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FB SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x81FF37C0A846F0FA29FD65BC885AC344052231414004D0E16A59678C4018B3A3 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x692 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x697 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x81FF37C0A846F0FA29FD65BC885AC344052231414004D0E16A59678C4018B3A3 SWAP2 ADD PUSH2 0x638 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x75D JUMPI PUSH2 0x75D PUSH2 0x71E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x71E JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x79E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7B1 PUSH2 0x7AC DUP3 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x818 DUP5 DUP3 DUP6 ADD PUSH2 0x78D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x83B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x823 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x84A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x868 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x820 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP1 DUP3 MSTORE DUP7 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0xC0 DUP5 ADD SWAP1 DUP3 DUP11 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8BE JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x899 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP8 MLOAD DUP1 DUP3 MSTORE DUP3 DUP3 ADD SWAP1 PUSH1 0x5 DUP2 SWAP1 SHL DUP4 ADD DUP5 ADD DUP11 DUP6 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x90E JUMPI PUSH1 0x1F NOT DUP7 DUP5 SUB ADD DUP6 MSTORE PUSH2 0x8FC DUP4 DUP4 MLOAD PUSH2 0x850 JUMP JUMPDEST SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x8E0 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x40 DUP9 ADD MSTORE SWAP5 POP PUSH2 0x92B SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x96C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x985 DUP2 PUSH2 0x93E JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9AD DUP8 DUP3 DUP9 ADD PUSH2 0x78D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x9D9 DUP2 PUSH2 0x93E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x9E9 DUP2 PUSH2 0x93E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xA18 DUP2 PUSH2 0x93E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA43 DUP2 PUSH2 0x93E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA43 DUP2 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA8F JUMPI PUSH2 0xA8F PUSH2 0x71E JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0xABA PUSH2 0x7AC DUP4 PUSH2 0xA75 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xB55 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 ADD PUSH1 0x3F DUP2 ADD DUP10 SGT PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP5 DUP2 ADD MLOAD PUSH1 0x40 PUSH2 0xB21 PUSH2 0x7AC DUP4 PUSH2 0x765 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP12 DUP3 DUP5 DUP7 ADD ADD GT ISZERO PUSH2 0xB36 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB45 DUP4 DUP10 DUP4 ADD DUP5 DUP8 ADD PUSH2 0x820 JUMP JUMPDEST DUP7 MSTORE POP POP POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xADD JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xB6B DUP2 PUSH2 0x93E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0xBC4 PUSH2 0x7AC DUP4 PUSH2 0xA75 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP13 DUP5 GT ISZERO PUSH2 0xBE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xC0A JUMPI DUP6 MLOAD PUSH2 0xBFB DUP2 PUSH2 0x93E JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xBE8 JUMP JUMPDEST SWAP2 DUP12 ADD MLOAD SWAP2 SWAP10 POP SWAP1 SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC30 DUP9 DUP3 DUP10 ADD PUSH2 0xA99 JUMP JUMPDEST SWAP5 POP POP PUSH2 0xC3F PUSH1 0x40 DUP8 ADD PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x80 SWAP1 SWAP8 ADD MLOAD SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA43 DUP2 PUSH2 0x93E JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xCA2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x850 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA43 DUP2 PUSH2 0xA4A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN CODESIZE LOG3 0xE5 LOG2 0xE7 SWAP12 0xAD CODESIZE 0xDB DELEGATECALL AND 0xDD 0x2C 0x5D 0x25 0xEB DUP2 MSTORE SWAP9 0xC1 0xC2 CALLCODE PUSH19 0x74C61765EC398E764736F6C634300080E0033 ",
  "pcMap": {
    "0": {
      "offset": [
        216,
        4612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E"
    },
    "12": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x90B98A11"
    },
    "25": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x90B98A11"
    },
    "36": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "EQ",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13E"
    },
    "40": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA6F9DAE1"
    },
    "47": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "EQ",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15E"
    },
    "51": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAF02F2B5"
    },
    "58": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17E"
    },
    "62": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBC25CF77"
    },
    "69": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19E"
    },
    "73": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "REVERT",
      "path": "2"
    },
    "78": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "79": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "80": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x17EA80"
    },
    "84": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "EQ",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A"
    },
    "88": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "89": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "90": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x10F2AA41"
    },
    "95": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "EQ",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4"
    },
    "99": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "100": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "101": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2FDCFBD2"
    },
    "106": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "EQ",
      "path": "2"
    },
    "107": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6"
    },
    "110": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "111": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "117": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "EQ",
      "path": "2"
    },
    "118": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x106"
    },
    "121": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "122": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "124": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "REVERT",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "127": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "128": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85"
    },
    "131": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "STOP",
      "path": "2"
    },
    "133": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "136": {
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "first_revert": true,
      "fn": null,
      "offset": [
        216,
        4612
      ],
      "op": "REVERT",
      "path": "2"
    },
    "138": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "139": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "140": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "DUP1",
      "path": "2"
    },
    "141": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "142": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x96"
    },
    "145": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "146": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "148": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "DUP1",
      "path": "2"
    },
    "149": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "REVERT",
      "path": "2"
    },
    "150": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "151": {
      "op": "POP"
    },
    "152": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAA"
    },
    "155": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA5"
    },
    "158": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "159": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "161": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E3"
    },
    "164": {
      "fn": "ArbV1.unpack",
      "jump": "i",
      "offset": [
        1501,
        1816
      ],
      "op": "JUMP",
      "path": "2"
    },
    "165": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "166": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BE"
    },
    "169": {
      "fn": "ArbV1.unpack",
      "jump": "i",
      "offset": [
        1501,
        1816
      ],
      "op": "JUMP",
      "path": "2"
    },
    "170": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "171": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "173": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "174": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB"
    },
    "177": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "178": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "179": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "180": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "181": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "182": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "183": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x87C"
    },
    "186": {
      "fn": "ArbV1.unpack",
      "jump": "i",
      "offset": [
        1501,
        1816
      ],
      "op": "JUMP",
      "path": "2"
    },
    "187": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "188": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "190": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "191": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "DUP1",
      "path": "2"
    },
    "192": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "193": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "SUB",
      "path": "2"
    },
    "194": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "195": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "RETURN",
      "path": "2"
    },
    "196": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "197": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "198": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "199": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "200": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD0"
    },
    "203": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "204": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "206": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "207": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "REVERT",
      "path": "2"
    },
    "208": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "209": {
      "op": "POP"
    },
    "210": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE4"
    },
    "213": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "216": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "217": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "219": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x956"
    },
    "222": {
      "fn": "ArbV1.start",
      "jump": "i",
      "offset": [
        1061,
        1495
      ],
      "op": "JUMP",
      "path": "2"
    },
    "223": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "224": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EC"
    },
    "227": {
      "fn": "ArbV1.start",
      "jump": "i",
      "offset": [
        1061,
        1495
      ],
      "op": "JUMP",
      "path": "2"
    },
    "228": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "229": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "STOP",
      "path": "2"
    },
    "230": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "231": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "232": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "DUP1",
      "path": "2"
    },
    "233": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "234": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF2"
    },
    "237": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "238": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "240": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "DUP1",
      "path": "2"
    },
    "241": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "REVERT",
      "path": "2"
    },
    "242": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "243": {
      "op": "POP"
    },
    "244": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE4"
    },
    "247": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101"
    },
    "250": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "251": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "253": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B9"
    },
    "256": {
      "fn": "ArbV1.sendToken",
      "jump": "i",
      "offset": [
        4124,
        4269
      ],
      "op": "JUMP",
      "path": "2"
    },
    "257": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "258": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5"
    },
    "261": {
      "fn": "ArbV1.sendToken",
      "jump": "i",
      "offset": [
        4124,
        4269
      ],
      "op": "JUMP",
      "path": "2"
    },
    "262": {
      "offset": [
        505,
        525
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "263": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "264": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "DUP1",
      "path": "2"
    },
    "265": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "266": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x112"
    },
    "269": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "270": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "272": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "DUP1",
      "path": "2"
    },
    "273": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "REVERT",
      "path": "2"
    },
    "274": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "275": {
      "op": "POP"
    },
    "276": {
      "offset": [
        505,
        525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "278": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "279": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x126"
    },
    "282": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "289": {
      "op": "SHL"
    },
    "290": {
      "op": "SUB"
    },
    "291": {
      "offset": [
        505,
        525
      ],
      "op": "AND",
      "path": "2"
    },
    "292": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "DUP2",
      "path": "2"
    },
    "293": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "JUMP",
      "path": "2"
    },
    "294": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "295": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "297": {
      "fn": "ArbV1.sendToken",
      "offset": [
        505,
        525
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "304": {
      "op": "SHL"
    },
    "305": {
      "op": "SUB"
    },
    "306": {
      "op": "SWAP1"
    },
    "307": {
      "op": "SWAP2"
    },
    "308": {
      "op": "AND"
    },
    "309": {
      "op": "DUP2"
    },
    "310": {
      "op": "MSTORE"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "313": {
      "op": "ADD"
    },
    "314": {
      "offset": [
        505,
        525
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB"
    },
    "317": {
      "op": "JUMP"
    },
    "318": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "319": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "320": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "DUP1",
      "path": "2"
    },
    "321": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "322": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "325": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "326": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "328": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "DUP1",
      "path": "2"
    },
    "329": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "REVERT",
      "path": "2"
    },
    "330": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "331": {
      "op": "POP"
    },
    "332": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE4"
    },
    "335": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x159"
    },
    "338": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "339": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "341": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9FA"
    },
    "344": {
      "fn": "ArbV1.sendCoin",
      "jump": "i",
      "offset": [
        3709,
        3832
      ],
      "op": "JUMP",
      "path": "2"
    },
    "345": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "346": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EC"
    },
    "349": {
      "fn": "ArbV1.sendCoin",
      "jump": "i",
      "offset": [
        3709,
        3832
      ],
      "op": "JUMP",
      "path": "2"
    },
    "350": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "351": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "352": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "DUP1",
      "path": "2"
    },
    "353": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "354": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16A"
    },
    "357": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "358": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "360": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "DUP1",
      "path": "2"
    },
    "361": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "REVERT",
      "path": "2"
    },
    "362": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "363": {
      "op": "POP"
    },
    "364": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE4"
    },
    "367": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x179"
    },
    "370": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "371": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "373": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA26"
    },
    "376": {
      "fn": "ArbV1.changeOwner",
      "jump": "i",
      "offset": [
        4275,
        4365
      ],
      "op": "JUMP",
      "path": "2"
    },
    "377": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "378": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x411"
    },
    "381": {
      "fn": "ArbV1.changeOwner",
      "jump": "i",
      "offset": [
        4275,
        4365
      ],
      "op": "JUMP",
      "path": "2"
    },
    "382": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "383": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "384": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "385": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "386": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A"
    },
    "389": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "390": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "392": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "393": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "REVERT",
      "path": "2"
    },
    "394": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "395": {
      "op": "POP"
    },
    "396": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE4"
    },
    "399": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x199"
    },
    "402": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "403": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "405": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA58"
    },
    "408": {
      "fn": "ArbV1.changeCashout",
      "jump": "i",
      "offset": [
        4371,
        4480
      ],
      "op": "JUMP",
      "path": "2"
    },
    "409": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "410": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44A"
    },
    "413": {
      "fn": "ArbV1.changeCashout",
      "jump": "i",
      "offset": [
        4371,
        4480
      ],
      "op": "JUMP",
      "path": "2"
    },
    "414": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "415": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "416": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "417": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "418": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA"
    },
    "421": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "422": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "424": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "425": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "REVERT",
      "path": "2"
    },
    "426": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "427": {
      "op": "POP"
    },
    "428": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE4"
    },
    "431": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B9"
    },
    "434": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "435": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "437": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA26"
    },
    "440": {
      "fn": "ArbV1.skim",
      "jump": "i",
      "offset": [
        4485,
        4575
      ],
      "op": "JUMP",
      "path": "2"
    },
    "441": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "442": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x47F"
    },
    "445": {
      "fn": "ArbV1.skim",
      "jump": "i",
      "offset": [
        4485,
        4575
      ],
      "op": "JUMP",
      "path": "2"
    },
    "446": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "447": {
      "fn": "ArbV1.unpack",
      "offset": [
        1567,
        1591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "449": {
      "fn": "ArbV1.unpack",
      "offset": [
        1593,
        1617
      ],
      "op": "DUP1",
      "path": "2"
    },
    "450": {
      "fn": "ArbV1.unpack",
      "offset": [
        1627,
        1646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "452": {
      "fn": "ArbV1.unpack",
      "offset": [
        1647,
        1658
      ],
      "op": "DUP1",
      "path": "2"
    },
    "453": {
      "fn": "ArbV1.unpack",
      "offset": [
        1659,
        1667
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "455": {
      "fn": "ArbV1.unpack",
      "offset": [
        1765,
        1769
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 0
    },
    "456": {
      "fn": "ArbV1.unpack",
      "offset": [
        1741,
        1809
      ],
      "op": "DUP1",
      "path": "2"
    },
    "457": {
      "fn": "ArbV1.unpack",
      "offset": [
        1741,
        1809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "459": {
      "fn": "ArbV1.unpack",
      "offset": [
        1741,
        1809
      ],
      "op": "ADD",
      "path": "2"
    },
    "460": {
      "fn": "ArbV1.unpack",
      "offset": [
        1741,
        1809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "461": {
      "fn": "ArbV1.unpack",
      "offset": [
        1741,
        1809
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "462": {
      "fn": "ArbV1.unpack",
      "offset": [
        1741,
        1809
      ],
      "op": "DUP2",
      "path": "2"
    },
    "463": {
      "fn": "ArbV1.unpack",
      "offset": [
        1741,
        1809
      ],
      "op": "ADD",
      "path": "2"
    },
    "464": {
      "fn": "ArbV1.unpack",
      "offset": [
        1741,
        1809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "465": {
      "fn": "ArbV1.unpack",
      "offset": [
        1741,
        1809
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA"
    },
    "468": {
      "fn": "ArbV1.unpack",
      "offset": [
        1741,
        1809
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "469": {
      "fn": "ArbV1.unpack",
      "offset": [
        1741,
        1809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "470": {
      "fn": "ArbV1.unpack",
      "offset": [
        1741,
        1809
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB70"
    },
    "473": {
      "fn": "ArbV1.unpack",
      "jump": "i",
      "offset": [
        1741,
        1809
      ],
      "op": "JUMP",
      "path": "2"
    },
    "474": {
      "fn": "ArbV1.unpack",
      "offset": [
        1741,
        1809
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "475": {
      "fn": "ArbV1.unpack",
      "offset": [
        1692,
        1809
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "476": {
      "fn": "ArbV1.unpack",
      "offset": [
        1692,
        1809
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "477": {
      "fn": "ArbV1.unpack",
      "offset": [
        1692,
        1809
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "478": {
      "fn": "ArbV1.unpack",
      "offset": [
        1692,
        1809
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "479": {
      "op": "POP"
    },
    "480": {
      "fn": "ArbV1.unpack",
      "offset": [
        1692,
        1809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "481": {
      "fn": "ArbV1.unpack",
      "offset": [
        1692,
        1809
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "fn": "ArbV1.unpack",
      "offset": [
        1692,
        1809
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "484": {
      "op": "POP"
    },
    "485": {
      "fn": "ArbV1.unpack",
      "offset": [
        1692,
        1809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "486": {
      "fn": "ArbV1.unpack",
      "offset": [
        1692,
        1809
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "487": {
      "op": "POP"
    },
    "488": {
      "fn": "ArbV1.unpack",
      "offset": [
        1501,
        1816
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "489": {
      "op": "POP"
    },
    "490": {
      "op": "POP"
    },
    "491": {
      "fn": "ArbV1.unpack",
      "jump": "o",
      "offset": [
        1501,
        1816
      ],
      "op": "JUMP",
      "path": "2"
    },
    "492": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "493": {
      "fn": "ArbV1.start",
      "offset": [
        1200,
        1218
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "495": {
      "fn": "ArbV1.start",
      "offset": [
        1226,
        1238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F7"
    },
    "498": {
      "fn": "ArbV1.start",
      "offset": [
        1233,
        1237
      ],
      "op": "DUP3",
      "path": "2"
    },
    "499": {
      "fn": "ArbV1.start",
      "offset": [
        1226,
        1232
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BE"
    },
    "502": {
      "fn": "ArbV1.start",
      "jump": "i",
      "offset": [
        1226,
        1238
      ],
      "op": "JUMP",
      "path": "2"
    },
    "503": {
      "fn": "ArbV1.start",
      "offset": [
        1226,
        1238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "504": {
      "fn": "ArbV1.start",
      "offset": [
        1194,
        1238
      ],
      "op": "POP",
      "path": "2"
    },
    "505": {
      "fn": "ArbV1.start",
      "offset": [
        1194,
        1238
      ],
      "op": "POP",
      "path": "2"
    },
    "506": {
      "fn": "ArbV1.start",
      "offset": [
        1194,
        1238
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "507": {
      "fn": "ArbV1.start",
      "offset": [
        1194,
        1238
      ],
      "op": "POP",
      "path": "2"
    },
    "508": {
      "fn": "ArbV1.start",
      "offset": [
        1194,
        1238
      ],
      "op": "POP",
      "path": "2"
    },
    "509": {
      "fn": "ArbV1.start",
      "offset": [
        1194,
        1238
      ],
      "op": "POP",
      "path": "2"
    },
    "510": {
      "fn": "ArbV1.start",
      "offset": [
        1277,
        1287
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 1
    },
    "511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "517": {
      "op": "SHL"
    },
    "518": {
      "op": "SUB"
    },
    "519": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1295
      ],
      "op": "AND",
      "path": "2"
    },
    "520": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1295
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDFE1681"
    },
    "525": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "527": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "528": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "DUP2",
      "path": "2"
    },
    "529": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "534": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "AND",
      "path": "2"
    },
    "535": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "537": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "SHL",
      "path": "2"
    },
    "538": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "DUP2",
      "path": "2"
    },
    "539": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "540": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "542": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "ADD",
      "path": "2"
    },
    "543": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "545": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "547": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "548": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "DUP1",
      "path": "2"
    },
    "549": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "DUP4",
      "path": "2"
    },
    "550": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "SUB",
      "path": "2"
    },
    "551": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "DUP2",
      "path": "2"
    },
    "552": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "DUP7",
      "path": "2"
    },
    "553": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "GAS",
      "path": "2"
    },
    "554": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "555": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "556": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "DUP1",
      "path": "2"
    },
    "557": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "558": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23B"
    },
    "561": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "562": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "563": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "565": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "DUP1",
      "path": "2"
    },
    "566": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "567": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "568": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "570": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "571": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "572": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "POP",
      "path": "2"
    },
    "573": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "POP",
      "path": "2"
    },
    "574": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "POP",
      "path": "2"
    },
    "575": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "POP",
      "path": "2"
    },
    "576": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "578": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "579": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "580": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "582": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "NOT",
      "path": "2"
    },
    "583": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "585": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "DUP3",
      "path": "2"
    },
    "586": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "ADD",
      "path": "2"
    },
    "587": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "AND",
      "path": "2"
    },
    "588": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "DUP3",
      "path": "2"
    },
    "589": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "ADD",
      "path": "2"
    },
    "590": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "DUP1",
      "path": "2"
    },
    "591": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "593": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "594": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "POP",
      "path": "2"
    },
    "595": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "DUP2",
      "path": "2"
    },
    "596": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "ADD",
      "path": "2"
    },
    "597": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "598": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25F"
    },
    "601": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "602": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "603": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC58"
    },
    "606": {
      "fn": "ArbV1.start",
      "jump": "i",
      "offset": [
        1271,
        1297
      ],
      "op": "JUMP",
      "path": "2"
    },
    "607": {
      "fn": "ArbV1.start",
      "offset": [
        1271,
        1297
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "614": {
      "op": "SHL"
    },
    "615": {
      "op": "SUB"
    },
    "616": {
      "fn": "ArbV1.start",
      "offset": [
        1261,
        1297
      ],
      "op": "AND",
      "path": "2"
    },
    "617": {
      "fn": "ArbV1.start",
      "offset": [
        1261,
        1267
      ],
      "op": "DUP4",
      "path": "2"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "624": {
      "op": "SHL"
    },
    "625": {
      "op": "SUB"
    },
    "626": {
      "fn": "ArbV1.start",
      "offset": [
        1261,
        1297
      ],
      "op": "AND",
      "path": "2"
    },
    "627": {
      "branch": 14,
      "fn": "ArbV1.start",
      "offset": [
        1261,
        1297
      ],
      "op": "EQ",
      "path": "2"
    },
    "628": {
      "fn": "ArbV1.start",
      "offset": [
        1261,
        1337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "629": {
      "fn": "ArbV1.start",
      "offset": [
        1261,
        1337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F0"
    },
    "632": {
      "branch": 14,
      "fn": "ArbV1.start",
      "offset": [
        1261,
        1337
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "633": {
      "fn": "ArbV1.start",
      "offset": [
        1261,
        1337
      ],
      "op": "POP",
      "path": "2"
    },
    "634": {
      "fn": "ArbV1.start",
      "offset": [
        1317,
        1327
      ],
      "op": "DUP1",
      "path": "2"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "641": {
      "op": "SHL"
    },
    "642": {
      "op": "SUB"
    },
    "643": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1335
      ],
      "op": "AND",
      "path": "2"
    },
    "644": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1335
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD21220A7"
    },
    "649": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "651": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "652": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "DUP2",
      "path": "2"
    },
    "653": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "658": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "AND",
      "path": "2"
    },
    "659": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "661": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "SHL",
      "path": "2"
    },
    "662": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "DUP2",
      "path": "2"
    },
    "663": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "664": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "666": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "ADD",
      "path": "2"
    },
    "667": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "669": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "671": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "672": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "673": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "DUP4",
      "path": "2"
    },
    "674": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "SUB",
      "path": "2"
    },
    "675": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "DUP2",
      "path": "2"
    },
    "676": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "DUP7",
      "path": "2"
    },
    "677": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "GAS",
      "path": "2"
    },
    "678": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "679": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "680": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "681": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "682": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B7"
    },
    "685": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "686": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "687": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "689": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "690": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "691": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "692": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "694": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "REVERT",
      "path": "2"
    },
    "695": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "696": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "POP",
      "path": "2"
    },
    "697": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "POP",
      "path": "2"
    },
    "698": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "POP",
      "path": "2"
    },
    "699": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "POP",
      "path": "2"
    },
    "700": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "702": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "703": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "704": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "706": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "NOT",
      "path": "2"
    },
    "707": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "709": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "DUP3",
      "path": "2"
    },
    "710": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "ADD",
      "path": "2"
    },
    "711": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "AND",
      "path": "2"
    },
    "712": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "DUP3",
      "path": "2"
    },
    "713": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "ADD",
      "path": "2"
    },
    "714": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "715": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "717": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "718": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "POP",
      "path": "2"
    },
    "719": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "DUP2",
      "path": "2"
    },
    "720": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "ADD",
      "path": "2"
    },
    "721": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "722": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DB"
    },
    "725": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "726": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "727": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC58"
    },
    "730": {
      "fn": "ArbV1.start",
      "jump": "i",
      "offset": [
        1311,
        1337
      ],
      "op": "JUMP",
      "path": "2"
    },
    "731": {
      "fn": "ArbV1.start",
      "offset": [
        1311,
        1337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "738": {
      "op": "SHL"
    },
    "739": {
      "op": "SUB"
    },
    "740": {
      "fn": "ArbV1.start",
      "offset": [
        1301,
        1337
      ],
      "op": "AND",
      "path": "2"
    },
    "741": {
      "fn": "ArbV1.start",
      "offset": [
        1301,
        1307
      ],
      "op": "DUP4",
      "path": "2"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "748": {
      "op": "SHL"
    },
    "749": {
      "op": "SUB"
    },
    "750": {
      "fn": "ArbV1.start",
      "offset": [
        1301,
        1337
      ],
      "op": "AND",
      "path": "2"
    },
    "751": {
      "branch": 15,
      "fn": "ArbV1.start",
      "offset": [
        1301,
        1337
      ],
      "op": "EQ",
      "path": "2"
    },
    "752": {
      "fn": "ArbV1.start",
      "offset": [
        1261,
        1337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "753": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x341"
    },
    "756": {
      "branch": 15,
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "757": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "759": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "766": {
      "op": "SHL"
    },
    "767": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "DUP2",
      "path": "2"
    },
    "768": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "771": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "773": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "DUP3",
      "path": "2"
    },
    "774": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "ADD",
      "path": "2"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "780": {
      "op": "DUP3"
    },
    "781": {
      "op": "ADD"
    },
    "782": {
      "op": "MSTORE"
    },
    "783": {
      "op": "PUSH32",
      "value": "0x496E636F7272656374205061697220666F7220746F6B656E0000000000000000"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "818": {
      "op": "DUP3"
    },
    "819": {
      "op": "ADD"
    },
    "820": {
      "op": "MSTORE"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "823": {
      "op": "ADD"
    },
    "824": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "825": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "827": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "828": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "DUP1",
      "path": "2"
    },
    "829": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "830": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "SUB",
      "path": "2"
    },
    "831": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "832": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "REVERT",
      "path": "2"
    },
    "833": {
      "fn": "ArbV1.start",
      "offset": [
        1253,
        1383
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "834": {
      "fn": "ArbV1.start",
      "offset": [
        1398,
        1403
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "836": {
      "fn": "ArbV1.start",
      "offset": [
        1398,
        1412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "837": {
      "fn": "ArbV1.start",
      "offset": [
        1398,
        1412
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "844": {
      "op": "SHL"
    },
    "845": {
      "op": "SUB"
    },
    "846": {
      "op": "NOT"
    },
    "847": {
      "fn": "ArbV1.start",
      "offset": [
        1398,
        1412
      ],
      "op": "AND",
      "path": "2"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "854": {
      "op": "SHL"
    },
    "855": {
      "op": "SUB"
    },
    "856": {
      "fn": "ArbV1.start",
      "offset": [
        1398,
        1412
      ],
      "op": "DUP6",
      "path": "2"
    },
    "857": {
      "fn": "ArbV1.start",
      "offset": [
        1398,
        1412
      ],
      "op": "DUP2",
      "path": "2"
    },
    "858": {
      "fn": "ArbV1.start",
      "offset": [
        1398,
        1412
      ],
      "op": "AND",
      "path": "2"
    },
    "859": {
      "fn": "ArbV1.start",
      "offset": [
        1398,
        1412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "860": {
      "fn": "ArbV1.start",
      "offset": [
        1398,
        1412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "861": {
      "fn": "ArbV1.start",
      "offset": [
        1398,
        1412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "862": {
      "fn": "ArbV1.start",
      "offset": [
        1398,
        1412
      ],
      "op": "OR",
      "path": "2"
    },
    "863": {
      "fn": "ArbV1.start",
      "offset": [
        1398,
        1412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "864": {
      "fn": "ArbV1.start",
      "offset": [
        1398,
        1412
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "865": {
      "fn": "ArbV1.start",
      "offset": [
        1398,
        1412
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "866": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x40"
    },
    "868": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "869": {
      "op": "PUSH4",
      "value": "0x22C0D9F"
    },
    "874": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "876": {
      "op": "SHL"
    },
    "877": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "DUP2",
      "path": "2"
    },
    "878": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "879": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "880": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1448
      ],
      "op": "DUP3",
      "path": "2"
    },
    "881": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1448
      ],
      "op": "AND",
      "path": "2"
    },
    "882": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "883": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1448
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x22C0D9F"
    },
    "888": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1448
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "889": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38C"
    },
    "892": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "893": {
      "fn": "ArbV1.start",
      "offset": [
        1449,
        1456
      ],
      "op": "DUP9",
      "path": "2"
    },
    "894": {
      "fn": "ArbV1.start",
      "offset": [
        1449,
        1456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "895": {
      "fn": "ArbV1.start",
      "offset": [
        1457,
        1464
      ],
      "op": "DUP9",
      "path": "2"
    },
    "896": {
      "fn": "ArbV1.start",
      "offset": [
        1457,
        1464
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "897": {
      "fn": "ArbV1.start",
      "offset": [
        1473,
        1477
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "898": {
      "fn": "ArbV1.start",
      "offset": [
        1473,
        1477
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "899": {
      "fn": "ArbV1.start",
      "offset": [
        1479,
        1483
      ],
      "op": "DUP9",
      "path": "2"
    },
    "900": {
      "fn": "ArbV1.start",
      "offset": [
        1479,
        1483
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "901": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "903": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "ADD",
      "path": "2"
    },
    "904": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC75"
    },
    "907": {
      "fn": "ArbV1.start",
      "jump": "i",
      "offset": [
        1426,
        1484
      ],
      "op": "JUMP",
      "path": "2"
    },
    "908": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "909": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "911": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "913": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "914": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "DUP1",
      "path": "2"
    },
    "915": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "DUP4",
      "path": "2"
    },
    "916": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "SUB",
      "path": "2"
    },
    "917": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "DUP2",
      "path": "2"
    },
    "918": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "920": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "DUP8",
      "path": "2"
    },
    "921": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "DUP1",
      "path": "2"
    },
    "922": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "923": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "924": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "DUP1",
      "path": "2"
    },
    "925": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "926": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A6"
    },
    "929": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "930": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "932": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "DUP1",
      "path": "2"
    },
    "933": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "REVERT",
      "path": "2"
    },
    "934": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "935": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "POP",
      "path": "2"
    },
    "936": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "GAS",
      "path": "2"
    },
    "937": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "CALL",
      "path": "2"
    },
    "938": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "939": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "DUP1",
      "path": "2"
    },
    "940": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "941": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BA"
    },
    "944": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "945": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "946": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "948": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "DUP1",
      "path": "2"
    },
    "949": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "950": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "951": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "953": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "REVERT",
      "path": "2"
    },
    "954": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "955": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "POP",
      "path": "2"
    },
    "956": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "POP",
      "path": "2"
    },
    "957": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "POP",
      "path": "2"
    },
    "958": {
      "fn": "ArbV1.start",
      "offset": [
        1426,
        1484
      ],
      "op": "POP",
      "path": "2"
    },
    "959": {
      "fn": "ArbV1.start",
      "offset": [
        1180,
        1495
      ],
      "op": "POP",
      "path": "2"
    },
    "960": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "POP",
      "path": "2"
    },
    "961": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "POP",
      "path": "2"
    },
    "962": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "POP",
      "path": "2"
    },
    "963": {
      "fn": "ArbV1.start",
      "offset": [
        1061,
        1495
      ],
      "op": "POP",
      "path": "2"
    },
    "964": {
      "fn": "ArbV1.start",
      "jump": "o",
      "offset": [
        1061,
        1495
      ],
      "op": "JUMP",
      "path": "2"
    },
    "965": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "966": {
      "offset": [
        930,
        935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "968": {
      "fn": "ArbV1.sendToken",
      "offset": [
        930,
        935
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "975": {
      "op": "SHL"
    },
    "976": {
      "op": "SUB"
    },
    "977": {
      "offset": [
        930,
        935
      ],
      "op": "AND",
      "path": "2"
    },
    "978": {
      "offset": [
        939,
        949
      ],
      "op": "CALLER",
      "path": "2"
    },
    "979": {
      "offset": [
        930,
        949
      ],
      "op": "EQ",
      "path": "2"
    },
    "980": {
      "offset": [
        922,
        950
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DC"
    },
    "983": {
      "offset": [
        922,
        950
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "984": {
      "fn": "ArbV1.sendToken",
      "offset": [
        922,
        950
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "986": {
      "fn": "ArbV1.sendToken",
      "offset": [
        922,
        950
      ],
      "op": "DUP1",
      "path": "2"
    },
    "987": {
      "fn": "ArbV1.sendToken",
      "offset": [
        922,
        950
      ],
      "op": "REVERT",
      "path": "2"
    },
    "988": {
      "fn": "ArbV1.sendToken",
      "offset": [
        922,
        950
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "989": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4224,
        4262
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 4,
      "value": "0x3E7"
    },
    "992": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4235,
        4243
      ],
      "op": "DUP4",
      "path": "2"
    },
    "993": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4244,
        4254
      ],
      "op": "DUP4",
      "path": "2"
    },
    "994": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4255,
        4261
      ],
      "op": "DUP4",
      "path": "2"
    },
    "995": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4224,
        4234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DB"
    },
    "998": {
      "fn": "ArbV1.sendToken",
      "jump": "i",
      "offset": [
        4224,
        4262
      ],
      "op": "JUMP",
      "path": "2"
    },
    "999": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4224,
        4262
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1000": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "POP",
      "path": "2"
    },
    "1001": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "POP",
      "path": "2"
    },
    "1002": {
      "fn": "ArbV1.sendToken",
      "offset": [
        4124,
        4269
      ],
      "op": "POP",
      "path": "2"
    },
    "1003": {
      "fn": "ArbV1.sendToken",
      "jump": "o",
      "offset": [
        4124,
        4269
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1004": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1005": {
      "offset": [
        930,
        935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1007": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        930,
        935
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1014": {
      "op": "SHL"
    },
    "1015": {
      "op": "SUB"
    },
    "1016": {
      "offset": [
        930,
        935
      ],
      "op": "AND",
      "path": "2"
    },
    "1017": {
      "offset": [
        939,
        949
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1018": {
      "offset": [
        930,
        949
      ],
      "op": "EQ",
      "path": "2"
    },
    "1019": {
      "offset": [
        922,
        950
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x403"
    },
    "1022": {
      "offset": [
        922,
        950
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1023": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        922,
        950
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1025": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        922,
        950
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1026": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        922,
        950
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1027": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        922,
        950
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1028": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3798,
        3825
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 5,
      "value": "0x40D"
    },
    "1031": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3808,
        3817
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1032": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3818,
        3824
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1033": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3798,
        3807
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x645"
    },
    "1036": {
      "fn": "ArbV1.sendCoin",
      "jump": "i",
      "offset": [
        3798,
        3825
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1037": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3798,
        3825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1038": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "POP",
      "path": "2"
    },
    "1039": {
      "fn": "ArbV1.sendCoin",
      "offset": [
        3709,
        3832
      ],
      "op": "POP",
      "path": "2"
    },
    "1040": {
      "fn": "ArbV1.sendCoin",
      "jump": "o",
      "offset": [
        3709,
        3832
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1041": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4275,
        4365
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1042": {
      "offset": [
        930,
        935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1044": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        930,
        935
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "op": "SUB"
    },
    "1053": {
      "offset": [
        930,
        935
      ],
      "op": "AND",
      "path": "2"
    },
    "1054": {
      "offset": [
        939,
        949
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1055": {
      "offset": [
        930,
        949
      ],
      "op": "EQ",
      "path": "2"
    },
    "1056": {
      "offset": [
        922,
        950
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x428"
    },
    "1059": {
      "offset": [
        922,
        950
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1060": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        922,
        950
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1062": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        922,
        950
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1063": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        922,
        950
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1064": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        922,
        950
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1065": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4344,
        4349
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x0"
    },
    "1067": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4344,
        4358
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1068": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4344,
        4358
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1075": {
      "op": "SHL"
    },
    "1076": {
      "op": "SUB"
    },
    "1077": {
      "op": "NOT"
    },
    "1078": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4344,
        4358
      ],
      "op": "AND",
      "path": "2"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1085": {
      "op": "SHL"
    },
    "1086": {
      "op": "SUB"
    },
    "1087": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4344,
        4358
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1088": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4344,
        4358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1089": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4344,
        4358
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1090": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4344,
        4358
      ],
      "op": "AND",
      "path": "2"
    },
    "1091": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4344,
        4358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1092": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4344,
        4358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1093": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4344,
        4358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1094": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4344,
        4358
      ],
      "op": "OR",
      "path": "2"
    },
    "1095": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4344,
        4358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1096": {
      "fn": "ArbV1.changeOwner",
      "offset": [
        4344,
        4358
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1097": {
      "fn": "ArbV1.changeOwner",
      "jump": "o",
      "offset": [
        4275,
        4365
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1098": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4371,
        4480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1099": {
      "offset": [
        930,
        935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1101": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        930,
        935
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1108": {
      "op": "SHL"
    },
    "1109": {
      "op": "SUB"
    },
    "1110": {
      "offset": [
        930,
        935
      ],
      "op": "AND",
      "path": "2"
    },
    "1111": {
      "offset": [
        939,
        949
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1112": {
      "offset": [
        930,
        949
      ],
      "op": "EQ",
      "path": "2"
    },
    "1113": {
      "offset": [
        922,
        950
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x461"
    },
    "1116": {
      "offset": [
        922,
        950
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1117": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        922,
        950
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1119": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        922,
        950
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1120": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        922,
        950
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1121": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        922,
        950
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1122": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4454
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 7,
      "value": "0x1"
    },
    "1124": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4464
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1125": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4464
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1126": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4464
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1127": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4464
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1128": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4464
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1133": {
      "op": "SHL"
    },
    "1134": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4464
      ],
      "op": "MUL",
      "path": "2"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1139": {
      "op": "SHL"
    },
    "1140": {
      "op": "NOT"
    },
    "1141": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4464
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1142": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4464
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1143": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4464
      ],
      "op": "AND",
      "path": "2"
    },
    "1144": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4464
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1145": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4464
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1146": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4464
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1147": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4464
      ],
      "op": "OR",
      "path": "2"
    },
    "1148": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4464
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1149": {
      "fn": "ArbV1.changeCashout",
      "offset": [
        4440,
        4464
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1150": {
      "fn": "ArbV1.changeCashout",
      "jump": "o",
      "offset": [
        4371,
        4480
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1151": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1152": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x40"
    },
    "1154": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1155": {
      "op": "PUSH4",
      "value": "0xBC25CF77"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1162": {
      "op": "SHL"
    },
    "1163": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1164": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1165": {
      "fn": "ArbV1.skim",
      "offset": [
        4557,
        4567
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1166": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1168": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1169": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "ADD",
      "path": "2"
    },
    "1170": {
      "op": "MSTORE"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1177": {
      "op": "SHL"
    },
    "1178": {
      "op": "SUB"
    },
    "1179": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4556
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1180": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4556
      ],
      "op": "AND",
      "path": "2"
    },
    "1181": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4556
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1182": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4556
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBC25CF77"
    },
    "1187": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4556
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1190": {
      "op": "ADD"
    },
    "1191": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1193": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1195": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1196": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1197": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1198": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "SUB",
      "path": "2"
    },
    "1199": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1200": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1202": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1203": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1204": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1205": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1206": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1207": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1208": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C0"
    },
    "1211": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1212": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1214": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1215": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1216": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1217": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "POP",
      "path": "2"
    },
    "1218": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "GAS",
      "path": "2"
    },
    "1219": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "CALL",
      "path": "2"
    },
    "1220": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1221": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1222": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1223": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D4"
    },
    "1226": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1227": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1228": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1230": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1231": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1232": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1233": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1235": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1236": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1237": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "POP",
      "path": "2"
    },
    "1238": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "POP",
      "path": "2"
    },
    "1239": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "POP",
      "path": "2"
    },
    "1240": {
      "fn": "ArbV1.skim",
      "offset": [
        4536,
        4568
      ],
      "op": "POP",
      "path": "2"
    },
    "1241": {
      "fn": "ArbV1.skim",
      "offset": [
        4485,
        4575
      ],
      "op": "POP",
      "path": "2"
    },
    "1242": {
      "fn": "ArbV1.skim",
      "jump": "o",
      "offset": [
        4485,
        4575
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1243": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3838,
        4119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1244": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x40"
    },
    "1246": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1247": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1254": {
      "op": "SHL"
    },
    "1255": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1256": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1257": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3970,
        3974
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "1258": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1260": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1261": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "ADD",
      "path": "2"
    },
    "1262": {
      "op": "MSTORE"
    },
    "1263": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3980,
        3986
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1264": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3980,
        3986
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1271": {
      "op": "SHL"
    },
    "1272": {
      "op": "SUB"
    },
    "1273": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3961
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1274": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3961
      ],
      "op": "AND",
      "path": "2"
    },
    "1275": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3961
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1276": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3961
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "1281": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3961
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1284": {
      "op": "ADD"
    },
    "1285": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1287": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1289": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1290": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1291": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1292": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "SUB",
      "path": "2"
    },
    "1293": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1294": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1295": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "GAS",
      "path": "2"
    },
    "1296": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "1297": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1298": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1299": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1300": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x521"
    },
    "1303": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1304": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1305": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1307": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1308": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1309": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1310": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1312": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1313": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1314": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "POP",
      "path": "2"
    },
    "1315": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "POP",
      "path": "2"
    },
    "1316": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "POP",
      "path": "2"
    },
    "1317": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "POP",
      "path": "2"
    },
    "1318": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1320": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1321": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1322": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1324": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "NOT",
      "path": "2"
    },
    "1325": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1327": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1328": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "ADD",
      "path": "2"
    },
    "1329": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "AND",
      "path": "2"
    },
    "1330": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1331": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "ADD",
      "path": "2"
    },
    "1332": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1333": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1335": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1336": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "POP",
      "path": "2"
    },
    "1337": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1338": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "ADD",
      "path": "2"
    },
    "1339": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1340": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x545"
    },
    "1343": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1344": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1345": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCAC"
    },
    "1348": {
      "fn": "ArbV1._sendToken",
      "jump": "i",
      "offset": [
        3935,
        3976
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1349": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3976
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1350": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3986
      ],
      "op": "LT",
      "path": "2"
    },
    "1351": {
      "branch": 16,
      "fn": "ArbV1._sendToken",
      "offset": [
        3935,
        3986
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1352": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3927,
        4008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x588"
    },
    "1355": {
      "branch": 16,
      "fn": "ArbV1._sendToken",
      "offset": [
        3927,
        4008
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1356": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3927,
        4008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1358": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3927,
        4008
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1359": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1365": {
      "op": "SHL"
    },
    "1366": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3927,
        4008
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1367": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3927,
        4008
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1370": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3927,
        4008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1372": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3927,
        4008
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1373": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3927,
        4008
      ],
      "op": "ADD",
      "path": "2"
    },
    "1374": {
      "op": "MSTORE"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1379": {
      "op": "DUP3"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "op": "MSTORE"
    },
    "1382": {
      "op": "PUSH18",
      "value": "0x496E73756666696369656E742046756E6473"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1403": {
      "op": "SHL"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1406": {
      "op": "DUP3"
    },
    "1407": {
      "op": "ADD"
    },
    "1408": {
      "op": "MSTORE"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1411": {
      "op": "ADD"
    },
    "1412": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3927,
        4008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x338"
    },
    "1415": {
      "op": "JUMP"
    },
    "1416": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3927,
        4008
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1417": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 10,
      "value": "0x40"
    },
    "1419": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1420": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1427": {
      "op": "SHL"
    },
    "1428": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1429": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1436": {
      "op": "SHL"
    },
    "1437": {
      "op": "SUB"
    },
    "1438": {
      "op": "DUP4"
    },
    "1439": {
      "op": "DUP2"
    },
    "1440": {
      "op": "AND"
    },
    "1441": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1443": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1444": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "ADD",
      "path": "2"
    },
    "1445": {
      "op": "MSTORE"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1448": {
      "op": "DUP3"
    },
    "1449": {
      "op": "ADD"
    },
    "1450": {
      "op": "DUP4"
    },
    "1451": {
      "op": "SWAP1"
    },
    "1452": {
      "op": "MSTORE"
    },
    "1453": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4043
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1454": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4043
      ],
      "op": "AND",
      "path": "2"
    },
    "1455": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4043
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1456": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4043
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "1461": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4043
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1464": {
      "op": "ADD"
    },
    "1465": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1467": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1469": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1470": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1471": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1472": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "SUB",
      "path": "2"
    },
    "1473": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1474": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1476": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1477": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "GAS",
      "path": "2"
    },
    "1478": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "CALL",
      "path": "2"
    },
    "1479": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1480": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1481": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1482": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D7"
    },
    "1485": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1486": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1487": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1489": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1490": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1491": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1492": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1494": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1495": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1496": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "POP",
      "path": "2"
    },
    "1497": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "POP",
      "path": "2"
    },
    "1498": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "POP",
      "path": "2"
    },
    "1499": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "POP",
      "path": "2"
    },
    "1500": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1502": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1503": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1504": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1506": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "NOT",
      "path": "2"
    },
    "1507": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1509": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1510": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "ADD",
      "path": "2"
    },
    "1511": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "AND",
      "path": "2"
    },
    "1512": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1513": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "ADD",
      "path": "2"
    },
    "1514": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1515": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1517": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1518": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "POP",
      "path": "2"
    },
    "1519": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1520": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "ADD",
      "path": "2"
    },
    "1521": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1522": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FB"
    },
    "1525": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1526": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1527": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC5"
    },
    "1530": {
      "fn": "ArbV1._sendToken",
      "jump": "i",
      "offset": [
        4018,
        4063
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1531": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4018,
        4063
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1532": {
      "op": "POP"
    },
    "1533": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4078,
        4112
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0x40"
    },
    "1535": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4078,
        4112
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1536": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4078,
        4112
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1543": {
      "op": "SHL"
    },
    "1544": {
      "op": "SUB"
    },
    "1545": {
      "op": "DUP1"
    },
    "1546": {
      "op": "DUP7"
    },
    "1547": {
      "op": "AND"
    },
    "1548": {
      "op": "DUP3"
    },
    "1549": {
      "op": "MSTORE"
    },
    "1550": {
      "op": "DUP5"
    },
    "1551": {
      "op": "AND"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1554": {
      "op": "DUP3"
    },
    "1555": {
      "op": "ADD"
    },
    "1556": {
      "op": "MSTORE"
    },
    "1557": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4078,
        4112
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x81FF37C0A846F0FA29FD65BC885AC344052231414004D0E16A59678C4018B3A3"
    },
    "1590": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4078,
        4112
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1591": {
      "op": "ADD"
    },
    "1592": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4078,
        4112
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1593": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4078,
        4112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1595": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4078,
        4112
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1596": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4078,
        4112
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1597": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4078,
        4112
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1598": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4078,
        4112
      ],
      "op": "SUB",
      "path": "2"
    },
    "1599": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4078,
        4112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1600": {
      "fn": "ArbV1._sendToken",
      "offset": [
        4078,
        4112
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1601": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3838,
        4119
      ],
      "op": "POP",
      "path": "2"
    },
    "1602": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3838,
        4119
      ],
      "op": "POP",
      "path": "2"
    },
    "1603": {
      "fn": "ArbV1._sendToken",
      "offset": [
        3838,
        4119
      ],
      "op": "POP",
      "path": "2"
    },
    "1604": {
      "fn": "ArbV1._sendToken",
      "jump": "o",
      "offset": [
        3838,
        4119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1605": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3470,
        3699
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1606": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3548,
        3557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1608": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3572
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1615": {
      "op": "SHL"
    },
    "1616": {
      "op": "SUB"
    },
    "1617": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3577
      ],
      "op": "AND",
      "path": "2"
    },
    "1618": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3585,
        3591
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1619": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1621": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1622": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1624": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1626": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1627": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1628": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1629": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "SUB",
      "path": "2"
    },
    "1630": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1631": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1632": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1633": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "GAS",
      "path": "2"
    },
    "1634": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "CALL",
      "path": "2"
    },
    "1635": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1636": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "POP",
      "path": "2"
    },
    "1637": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "POP",
      "path": "2"
    },
    "1638": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "POP",
      "path": "2"
    },
    "1639": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1640": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1641": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1643": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1644": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "EQ",
      "path": "2"
    },
    "1645": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x692"
    },
    "1648": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1649": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1651": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1652": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1653": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "POP",
      "path": "2"
    },
    "1654": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1656": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "NOT",
      "path": "2"
    },
    "1657": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "1659": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1660": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "ADD",
      "path": "2"
    },
    "1661": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "AND",
      "path": "2"
    },
    "1662": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1663": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "ADD",
      "path": "2"
    },
    "1664": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1666": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1667": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1668": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1669": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1670": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1671": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1673": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1675": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1676": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "ADD",
      "path": "2"
    },
    "1677": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1678": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x697"
    },
    "1681": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1682": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1683": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1685": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1686": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "POP",
      "path": "2"
    },
    "1687": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1688": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3563,
        3596
      ],
      "op": "POP",
      "path": "2"
    },
    "1689": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3547,
        3596
      ],
      "op": "POP",
      "path": "2"
    },
    "1690": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3547,
        3596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1691": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3547,
        3596
      ],
      "op": "POP",
      "path": "2"
    },
    "1692": {
      "branch": 17,
      "fn": "ArbV1._sendCoin",
      "offset": [
        3614,
        3618
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 12
    },
    "1693": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3606,
        3643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6DF"
    },
    "1696": {
      "branch": 17,
      "fn": "ArbV1._sendCoin",
      "offset": [
        3606,
        3643
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1697": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3606,
        3643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1699": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3606,
        3643
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1700": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1706": {
      "op": "SHL"
    },
    "1707": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3606,
        3643
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1708": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3606,
        3643
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1711": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3606,
        3643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1713": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3606,
        3643
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1714": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3606,
        3643
      ],
      "op": "ADD",
      "path": "2"
    },
    "1715": {
      "op": "MSTORE"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1720": {
      "op": "DUP3"
    },
    "1721": {
      "op": "ADD"
    },
    "1722": {
      "op": "MSTORE"
    },
    "1723": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "1746": {
      "op": "SHL"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1749": {
      "op": "DUP3"
    },
    "1750": {
      "op": "ADD"
    },
    "1751": {
      "op": "MSTORE"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1754": {
      "op": "ADD"
    },
    "1755": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3606,
        3643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x338"
    },
    "1758": {
      "op": "JUMP"
    },
    "1759": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3606,
        3643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1760": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3658,
        3692
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x40"
    },
    "1762": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3658,
        3692
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1763": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3658,
        3692
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1764": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3679,
        3680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1766": {
      "op": "DUP2"
    },
    "1767": {
      "op": "MSTORE"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1774": {
      "op": "SHL"
    },
    "1775": {
      "op": "SUB"
    },
    "1776": {
      "op": "DUP6"
    },
    "1777": {
      "op": "AND"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1780": {
      "op": "DUP3"
    },
    "1781": {
      "op": "ADD"
    },
    "1782": {
      "op": "MSTORE"
    },
    "1783": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3658,
        3692
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x81FF37C0A846F0FA29FD65BC885AC344052231414004D0E16A59678C4018B3A3"
    },
    "1816": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3658,
        3692
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1817": {
      "op": "ADD"
    },
    "1818": {
      "fn": "ArbV1._sendCoin",
      "offset": [
        3658,
        3692
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x638"
    },
    "1821": {
      "op": "JUMP"
    },
    "1822": {
      "op": "JUMPDEST"
    },
    "1823": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1830": {
      "op": "SHL"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1833": {
      "op": "MSTORE"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1838": {
      "op": "MSTORE"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1843": {
      "op": "REVERT"
    },
    "1844": {
      "op": "JUMPDEST"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1847": {
      "op": "MLOAD"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1850": {
      "op": "DUP3"
    },
    "1851": {
      "op": "ADD"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1854": {
      "op": "NOT"
    },
    "1855": {
      "op": "AND"
    },
    "1856": {
      "op": "DUP2"
    },
    "1857": {
      "op": "ADD"
    },
    "1858": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1867": {
      "op": "DUP2"
    },
    "1868": {
      "op": "GT"
    },
    "1869": {
      "op": "DUP3"
    },
    "1870": {
      "op": "DUP3"
    },
    "1871": {
      "op": "LT"
    },
    "1872": {
      "op": "OR"
    },
    "1873": {
      "op": "ISZERO"
    },
    "1874": {
      "op": "PUSH2",
      "value": "0x75D"
    },
    "1877": {
      "op": "JUMPI"
    },
    "1878": {
      "op": "PUSH2",
      "value": "0x75D"
    },
    "1881": {
      "op": "PUSH2",
      "value": "0x71E"
    },
    "1884": {
      "jump": "i",
      "op": "JUMP"
    },
    "1885": {
      "op": "JUMPDEST"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1888": {
      "op": "MSTORE"
    },
    "1889": {
      "op": "SWAP2"
    },
    "1890": {
      "op": "SWAP1"
    },
    "1891": {
      "op": "POP"
    },
    "1892": {
      "jump": "o",
      "op": "JUMP"
    },
    "1893": {
      "op": "JUMPDEST"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1896": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1905": {
      "op": "DUP3"
    },
    "1906": {
      "op": "GT"
    },
    "1907": {
      "op": "ISZERO"
    },
    "1908": {
      "op": "PUSH2",
      "value": "0x77F"
    },
    "1911": {
      "op": "JUMPI"
    },
    "1912": {
      "op": "PUSH2",
      "value": "0x77F"
    },
    "1915": {
      "op": "PUSH2",
      "value": "0x71E"
    },
    "1918": {
      "jump": "i",
      "op": "JUMP"
    },
    "1919": {
      "op": "JUMPDEST"
    },
    "1920": {
      "op": "POP"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1923": {
      "op": "ADD"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1926": {
      "op": "NOT"
    },
    "1927": {
      "op": "AND"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1930": {
      "op": "ADD"
    },
    "1931": {
      "op": "SWAP1"
    },
    "1932": {
      "jump": "o",
      "op": "JUMP"
    },
    "1933": {
      "op": "JUMPDEST"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1936": {
      "op": "DUP3"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1939": {
      "op": "DUP4"
    },
    "1940": {
      "op": "ADD"
    },
    "1941": {
      "op": "SLT"
    },
    "1942": {
      "op": "PUSH2",
      "value": "0x79E"
    },
    "1945": {
      "op": "JUMPI"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1948": {
      "op": "DUP1"
    },
    "1949": {
      "op": "REVERT"
    },
    "1950": {
      "op": "JUMPDEST"
    },
    "1951": {
      "op": "DUP2"
    },
    "1952": {
      "op": "CALLDATALOAD"
    },
    "1953": {
      "op": "PUSH2",
      "value": "0x7B1"
    },
    "1956": {
      "op": "PUSH2",
      "value": "0x7AC"
    },
    "1959": {
      "op": "DUP3"
    },
    "1960": {
      "op": "PUSH2",
      "value": "0x765"
    },
    "1963": {
      "jump": "i",
      "op": "JUMP"
    },
    "1964": {
      "op": "JUMPDEST"
    },
    "1965": {
      "op": "PUSH2",
      "value": "0x734"
    },
    "1968": {
      "jump": "i",
      "op": "JUMP"
    },
    "1969": {
      "op": "JUMPDEST"
    },
    "1970": {
      "op": "DUP2"
    },
    "1971": {
      "op": "DUP2"
    },
    "1972": {
      "op": "MSTORE"
    },
    "1973": {
      "op": "DUP5"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1976": {
      "op": "DUP4"
    },
    "1977": {
      "op": "DUP7"
    },
    "1978": {
      "op": "ADD"
    },
    "1979": {
      "op": "ADD"
    },
    "1980": {
      "op": "GT"
    },
    "1981": {
      "op": "ISZERO"
    },
    "1982": {
      "op": "PUSH2",
      "value": "0x7C6"
    },
    "1985": {
      "op": "JUMPI"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1988": {
      "op": "DUP1"
    },
    "1989": {
      "op": "REVERT"
    },
    "1990": {
      "op": "JUMPDEST"
    },
    "1991": {
      "op": "DUP2"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1994": {
      "op": "DUP6"
    },
    "1995": {
      "op": "ADD"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1998": {
      "op": "DUP4"
    },
    "1999": {
      "op": "ADD"
    },
    "2000": {
      "op": "CALLDATACOPY"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2003": {
      "op": "SWAP2"
    },
    "2004": {
      "op": "DUP2"
    },
    "2005": {
      "op": "ADD"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2008": {
      "op": "ADD"
    },
    "2009": {
      "op": "SWAP2"
    },
    "2010": {
      "op": "SWAP1"
    },
    "2011": {
      "op": "SWAP2"
    },
    "2012": {
      "op": "MSTORE"
    },
    "2013": {
      "op": "SWAP4"
    },
    "2014": {
      "op": "SWAP3"
    },
    "2015": {
      "op": "POP"
    },
    "2016": {
      "op": "POP"
    },
    "2017": {
      "op": "POP"
    },
    "2018": {
      "jump": "o",
      "op": "JUMP"
    },
    "2019": {
      "op": "JUMPDEST"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2024": {
      "op": "DUP3"
    },
    "2025": {
      "op": "DUP5"
    },
    "2026": {
      "op": "SUB"
    },
    "2027": {
      "op": "SLT"
    },
    "2028": {
      "op": "ISZERO"
    },
    "2029": {
      "op": "PUSH2",
      "value": "0x7F5"
    },
    "2032": {
      "op": "JUMPI"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2035": {
      "op": "DUP1"
    },
    "2036": {
      "op": "REVERT"
    },
    "2037": {
      "op": "JUMPDEST"
    },
    "2038": {
      "op": "DUP2"
    },
    "2039": {
      "op": "CALLDATALOAD"
    },
    "2040": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2049": {
      "op": "DUP2"
    },
    "2050": {
      "op": "GT"
    },
    "2051": {
      "op": "ISZERO"
    },
    "2052": {
      "op": "PUSH2",
      "value": "0x80C"
    },
    "2055": {
      "op": "JUMPI"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2058": {
      "op": "DUP1"
    },
    "2059": {
      "op": "REVERT"
    },
    "2060": {
      "op": "JUMPDEST"
    },
    "2061": {
      "op": "PUSH2",
      "value": "0x818"
    },
    "2064": {
      "op": "DUP5"
    },
    "2065": {
      "op": "DUP3"
    },
    "2066": {
      "op": "DUP6"
    },
    "2067": {
      "op": "ADD"
    },
    "2068": {
      "op": "PUSH2",
      "value": "0x78D"
    },
    "2071": {
      "jump": "i",
      "op": "JUMP"
    },
    "2072": {
      "op": "JUMPDEST"
    },
    "2073": {
      "op": "SWAP5"
    },
    "2074": {
      "op": "SWAP4"
    },
    "2075": {
      "op": "POP"
    },
    "2076": {
      "op": "POP"
    },
    "2077": {
      "op": "POP"
    },
    "2078": {
      "op": "POP"
    },
    "2079": {
      "jump": "o",
      "op": "JUMP"
    },
    "2080": {
      "op": "JUMPDEST"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2083": {
      "op": "JUMPDEST"
    },
    "2084": {
      "op": "DUP4"
    },
    "2085": {
      "op": "DUP2"
    },
    "2086": {
      "op": "LT"
    },
    "2087": {
      "op": "ISZERO"
    },
    "2088": {
      "op": "PUSH2",
      "value": "0x83B"
    },
    "2091": {
      "op": "JUMPI"
    },
    "2092": {
      "op": "DUP2"
    },
    "2093": {
      "op": "DUP2"
    },
    "2094": {
      "op": "ADD"
    },
    "2095": {
      "op": "MLOAD"
    },
    "2096": {
      "op": "DUP4"
    },
    "2097": {
      "op": "DUP3"
    },
    "2098": {
      "op": "ADD"
    },
    "2099": {
      "op": "MSTORE"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2102": {
      "op": "ADD"
    },
    "2103": {
      "op": "PUSH2",
      "value": "0x823"
    },
    "2106": {
      "op": "JUMP"
    },
    "2107": {
      "op": "JUMPDEST"
    },
    "2108": {
      "op": "DUP4"
    },
    "2109": {
      "op": "DUP2"
    },
    "2110": {
      "op": "GT"
    },
    "2111": {
      "op": "ISZERO"
    },
    "2112": {
      "op": "PUSH2",
      "value": "0x84A"
    },
    "2115": {
      "op": "JUMPI"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2118": {
      "op": "DUP5"
    },
    "2119": {
      "op": "DUP5"
    },
    "2120": {
      "op": "ADD"
    },
    "2121": {
      "op": "MSTORE"
    },
    "2122": {
      "op": "JUMPDEST"
    },
    "2123": {
      "op": "POP"
    },
    "2124": {
      "op": "POP"
    },
    "2125": {
      "op": "POP"
    },
    "2126": {
      "op": "POP"
    },
    "2127": {
      "jump": "o",
      "op": "JUMP"
    },
    "2128": {
      "op": "JUMPDEST"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2131": {
      "op": "DUP2"
    },
    "2132": {
      "op": "MLOAD"
    },
    "2133": {
      "op": "DUP1"
    },
    "2134": {
      "op": "DUP5"
    },
    "2135": {
      "op": "MSTORE"
    },
    "2136": {
      "op": "PUSH2",
      "value": "0x868"
    },
    "2139": {
      "op": "DUP2"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2142": {
      "op": "DUP7"
    },
    "2143": {
      "op": "ADD"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2146": {
      "op": "DUP7"
    },
    "2147": {
      "op": "ADD"
    },
    "2148": {
      "op": "PUSH2",
      "value": "0x820"
    },
    "2151": {
      "jump": "i",
      "op": "JUMP"
    },
    "2152": {
      "op": "JUMPDEST"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2155": {
      "op": "ADD"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2158": {
      "op": "NOT"
    },
    "2159": {
      "op": "AND"
    },
    "2160": {
      "op": "SWAP3"
    },
    "2161": {
      "op": "SWAP1"
    },
    "2162": {
      "op": "SWAP3"
    },
    "2163": {
      "op": "ADD"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2166": {
      "op": "ADD"
    },
    "2167": {
      "op": "SWAP3"
    },
    "2168": {
      "op": "SWAP2"
    },
    "2169": {
      "op": "POP"
    },
    "2170": {
      "op": "POP"
    },
    "2171": {
      "jump": "o",
      "op": "JUMP"
    },
    "2172": {
      "op": "JUMPDEST"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2175": {
      "op": "DUP1"
    },
    "2176": {
      "op": "DUP3"
    },
    "2177": {
      "op": "MSTORE"
    },
    "2178": {
      "op": "DUP7"
    },
    "2179": {
      "op": "MLOAD"
    },
    "2180": {
      "op": "SWAP1"
    },
    "2181": {
      "op": "DUP3"
    },
    "2182": {
      "op": "ADD"
    },
    "2183": {
      "op": "DUP2"
    },
    "2184": {
      "op": "SWAP1"
    },
    "2185": {
      "op": "MSTORE"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2188": {
      "op": "SWAP1"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2191": {
      "op": "SWAP1"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2194": {
      "op": "DUP5"
    },
    "2195": {
      "op": "ADD"
    },
    "2196": {
      "op": "SWAP1"
    },
    "2197": {
      "op": "DUP3"
    },
    "2198": {
      "op": "DUP11"
    },
    "2199": {
      "op": "ADD"
    },
    "2200": {
      "op": "DUP5"
    },
    "2201": {
      "op": "JUMPDEST"
    },
    "2202": {
      "op": "DUP3"
    },
    "2203": {
      "op": "DUP2"
    },
    "2204": {
      "op": "LT"
    },
    "2205": {
      "op": "ISZERO"
    },
    "2206": {
      "op": "PUSH2",
      "value": "0x8BE"
    },
    "2209": {
      "op": "JUMPI"
    },
    "2210": {
      "op": "DUP2"
    },
    "2211": {
      "op": "MLOAD"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2218": {
      "op": "SHL"
    },
    "2219": {
      "op": "SUB"
    },
    "2220": {
      "op": "AND"
    },
    "2221": {
      "op": "DUP5"
    },
    "2222": {
      "op": "MSTORE"
    },
    "2223": {
      "op": "SWAP3"
    },
    "2224": {
      "op": "DUP5"
    },
    "2225": {
      "op": "ADD"
    },
    "2226": {
      "op": "SWAP3"
    },
    "2227": {
      "op": "SWAP1"
    },
    "2228": {
      "op": "DUP5"
    },
    "2229": {
      "op": "ADD"
    },
    "2230": {
      "op": "SWAP1"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2233": {
      "op": "ADD"
    },
    "2234": {
      "op": "PUSH2",
      "value": "0x899"
    },
    "2237": {
      "op": "JUMP"
    },
    "2238": {
      "op": "JUMPDEST"
    },
    "2239": {
      "op": "POP"
    },
    "2240": {
      "op": "POP"
    },
    "2241": {
      "op": "POP"
    },
    "2242": {
      "op": "DUP4"
    },
    "2243": {
      "op": "DUP2"
    },
    "2244": {
      "op": "SUB"
    },
    "2245": {
      "op": "DUP3"
    },
    "2246": {
      "op": "DUP6"
    },
    "2247": {
      "op": "ADD"
    },
    "2248": {
      "op": "MSTORE"
    },
    "2249": {
      "op": "DUP8"
    },
    "2250": {
      "op": "MLOAD"
    },
    "2251": {
      "op": "DUP1"
    },
    "2252": {
      "op": "DUP3"
    },
    "2253": {
      "op": "MSTORE"
    },
    "2254": {
      "op": "DUP3"
    },
    "2255": {
      "op": "DUP3"
    },
    "2256": {
      "op": "ADD"
    },
    "2257": {
      "op": "SWAP1"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2260": {
      "op": "DUP2"
    },
    "2261": {
      "op": "SWAP1"
    },
    "2262": {
      "op": "SHL"
    },
    "2263": {
      "op": "DUP4"
    },
    "2264": {
      "op": "ADD"
    },
    "2265": {
      "op": "DUP5"
    },
    "2266": {
      "op": "ADD"
    },
    "2267": {
      "op": "DUP11"
    },
    "2268": {
      "op": "DUP6"
    },
    "2269": {
      "op": "ADD"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2272": {
      "op": "JUMPDEST"
    },
    "2273": {
      "op": "DUP4"
    },
    "2274": {
      "op": "DUP2"
    },
    "2275": {
      "op": "LT"
    },
    "2276": {
      "op": "ISZERO"
    },
    "2277": {
      "op": "PUSH2",
      "value": "0x90E"
    },
    "2280": {
      "op": "JUMPI"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2283": {
      "op": "NOT"
    },
    "2284": {
      "op": "DUP7"
    },
    "2285": {
      "op": "DUP5"
    },
    "2286": {
      "op": "SUB"
    },
    "2287": {
      "op": "ADD"
    },
    "2288": {
      "op": "DUP6"
    },
    "2289": {
      "op": "MSTORE"
    },
    "2290": {
      "op": "PUSH2",
      "value": "0x8FC"
    },
    "2293": {
      "op": "DUP4"
    },
    "2294": {
      "op": "DUP4"
    },
    "2295": {
      "op": "MLOAD"
    },
    "2296": {
      "op": "PUSH2",
      "value": "0x850"
    },
    "2299": {
      "jump": "i",
      "op": "JUMP"
    },
    "2300": {
      "op": "JUMPDEST"
    },
    "2301": {
      "op": "SWAP5"
    },
    "2302": {
      "op": "DUP8"
    },
    "2303": {
      "op": "ADD"
    },
    "2304": {
      "op": "SWAP5"
    },
    "2305": {
      "op": "SWAP3"
    },
    "2306": {
      "op": "POP"
    },
    "2307": {
      "op": "SWAP1"
    },
    "2308": {
      "op": "DUP7"
    },
    "2309": {
      "op": "ADD"
    },
    "2310": {
      "op": "SWAP1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2313": {
      "op": "ADD"
    },
    "2314": {
      "op": "PUSH2",
      "value": "0x8E0"
    },
    "2317": {
      "op": "JUMP"
    },
    "2318": {
      "op": "JUMPDEST"
    },
    "2319": {
      "op": "POP"
    },
    "2320": {
      "op": "POP"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2327": {
      "op": "SHL"
    },
    "2328": {
      "op": "SUB"
    },
    "2329": {
      "op": "DUP11"
    },
    "2330": {
      "op": "AND"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2333": {
      "op": "DUP9"
    },
    "2334": {
      "op": "ADD"
    },
    "2335": {
      "op": "MSTORE"
    },
    "2336": {
      "op": "SWAP5"
    },
    "2337": {
      "op": "POP"
    },
    "2338": {
      "op": "PUSH2",
      "value": "0x92B"
    },
    "2341": {
      "op": "SWAP4"
    },
    "2342": {
      "op": "POP"
    },
    "2343": {
      "op": "POP"
    },
    "2344": {
      "op": "POP"
    },
    "2345": {
      "op": "POP"
    },
    "2346": {
      "op": "JUMP"
    },
    "2347": {
      "op": "JUMPDEST"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2350": {
      "op": "DUP3"
    },
    "2351": {
      "op": "ADD"
    },
    "2352": {
      "op": "SWAP4"
    },
    "2353": {
      "op": "SWAP1"
    },
    "2354": {
      "op": "SWAP4"
    },
    "2355": {
      "op": "MSTORE"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2358": {
      "op": "ADD"
    },
    "2359": {
      "op": "MSTORE"
    },
    "2360": {
      "op": "SWAP4"
    },
    "2361": {
      "op": "SWAP3"
    },
    "2362": {
      "op": "POP"
    },
    "2363": {
      "op": "POP"
    },
    "2364": {
      "op": "POP"
    },
    "2365": {
      "jump": "o",
      "op": "JUMP"
    },
    "2366": {
      "op": "JUMPDEST"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2373": {
      "op": "SHL"
    },
    "2374": {
      "op": "SUB"
    },
    "2375": {
      "op": "DUP2"
    },
    "2376": {
      "op": "AND"
    },
    "2377": {
      "op": "DUP2"
    },
    "2378": {
      "op": "EQ"
    },
    "2379": {
      "op": "PUSH2",
      "value": "0x953"
    },
    "2382": {
      "op": "JUMPI"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2385": {
      "op": "DUP1"
    },
    "2386": {
      "op": "REVERT"
    },
    "2387": {
      "op": "JUMPDEST"
    },
    "2388": {
      "op": "POP"
    },
    "2389": {
      "jump": "o",
      "op": "JUMP"
    },
    "2390": {
      "op": "JUMPDEST"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2393": {
      "op": "DUP1"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2396": {
      "op": "DUP1"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2399": {
      "op": "DUP6"
    },
    "2400": {
      "op": "DUP8"
    },
    "2401": {
      "op": "SUB"
    },
    "2402": {
      "op": "SLT"
    },
    "2403": {
      "op": "ISZERO"
    },
    "2404": {
      "op": "PUSH2",
      "value": "0x96C"
    },
    "2407": {
      "op": "JUMPI"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2410": {
      "op": "DUP1"
    },
    "2411": {
      "op": "REVERT"
    },
    "2412": {
      "op": "JUMPDEST"
    },
    "2413": {
      "op": "DUP5"
    },
    "2414": {
      "op": "CALLDATALOAD"
    },
    "2415": {
      "op": "SWAP4"
    },
    "2416": {
      "op": "POP"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2419": {
      "op": "DUP6"
    },
    "2420": {
      "op": "ADD"
    },
    "2421": {
      "op": "CALLDATALOAD"
    },
    "2422": {
      "op": "SWAP3"
    },
    "2423": {
      "op": "POP"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2426": {
      "op": "DUP6"
    },
    "2427": {
      "op": "ADD"
    },
    "2428": {
      "op": "CALLDATALOAD"
    },
    "2429": {
      "op": "PUSH2",
      "value": "0x985"
    },
    "2432": {
      "op": "DUP2"
    },
    "2433": {
      "op": "PUSH2",
      "value": "0x93E"
    },
    "2436": {
      "jump": "i",
      "op": "JUMP"
    },
    "2437": {
      "op": "JUMPDEST"
    },
    "2438": {
      "op": "SWAP2"
    },
    "2439": {
      "op": "POP"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2442": {
      "op": "DUP6"
    },
    "2443": {
      "op": "ADD"
    },
    "2444": {
      "op": "CALLDATALOAD"
    },
    "2445": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2454": {
      "op": "DUP2"
    },
    "2455": {
      "op": "GT"
    },
    "2456": {
      "op": "ISZERO"
    },
    "2457": {
      "op": "PUSH2",
      "value": "0x9A1"
    },
    "2460": {
      "op": "JUMPI"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2463": {
      "op": "DUP1"
    },
    "2464": {
      "op": "REVERT"
    },
    "2465": {
      "op": "JUMPDEST"
    },
    "2466": {
      "op": "PUSH2",
      "value": "0x9AD"
    },
    "2469": {
      "op": "DUP8"
    },
    "2470": {
      "op": "DUP3"
    },
    "2471": {
      "op": "DUP9"
    },
    "2472": {
      "op": "ADD"
    },
    "2473": {
      "op": "PUSH2",
      "value": "0x78D"
    },
    "2476": {
      "jump": "i",
      "op": "JUMP"
    },
    "2477": {
      "op": "JUMPDEST"
    },
    "2478": {
      "op": "SWAP2"
    },
    "2479": {
      "op": "POP"
    },
    "2480": {
      "op": "POP"
    },
    "2481": {
      "op": "SWAP3"
    },
    "2482": {
      "op": "SWAP6"
    },
    "2483": {
      "op": "SWAP2"
    },
    "2484": {
      "op": "SWAP5"
    },
    "2485": {
      "op": "POP"
    },
    "2486": {
      "op": "SWAP3"
    },
    "2487": {
      "op": "POP"
    },
    "2488": {
      "jump": "o",
      "op": "JUMP"
    },
    "2489": {
      "op": "JUMPDEST"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2492": {
      "op": "DUP1"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2497": {
      "op": "DUP5"
    },
    "2498": {
      "op": "DUP7"
    },
    "2499": {
      "op": "SUB"
    },
    "2500": {
      "op": "SLT"
    },
    "2501": {
      "op": "ISZERO"
    },
    "2502": {
      "op": "PUSH2",
      "value": "0x9CE"
    },
    "2505": {
      "op": "JUMPI"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2508": {
      "op": "DUP1"
    },
    "2509": {
      "op": "REVERT"
    },
    "2510": {
      "op": "JUMPDEST"
    },
    "2511": {
      "op": "DUP4"
    },
    "2512": {
      "op": "CALLDATALOAD"
    },
    "2513": {
      "op": "PUSH2",
      "value": "0x9D9"
    },
    "2516": {
      "op": "DUP2"
    },
    "2517": {
      "op": "PUSH2",
      "value": "0x93E"
    },
    "2520": {
      "jump": "i",
      "op": "JUMP"
    },
    "2521": {
      "op": "JUMPDEST"
    },
    "2522": {
      "op": "SWAP3"
    },
    "2523": {
      "op": "POP"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2526": {
      "op": "DUP5"
    },
    "2527": {
      "op": "ADD"
    },
    "2528": {
      "op": "CALLDATALOAD"
    },
    "2529": {
      "op": "PUSH2",
      "value": "0x9E9"
    },
    "2532": {
      "op": "DUP2"
    },
    "2533": {
      "op": "PUSH2",
      "value": "0x93E"
    },
    "2536": {
      "jump": "i",
      "op": "JUMP"
    },
    "2537": {
      "op": "JUMPDEST"
    },
    "2538": {
      "op": "SWAP3"
    },
    "2539": {
      "op": "SWAP6"
    },
    "2540": {
      "op": "SWAP3"
    },
    "2541": {
      "op": "SWAP5"
    },
    "2542": {
      "op": "POP"
    },
    "2543": {
      "op": "POP"
    },
    "2544": {
      "op": "POP"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2547": {
      "op": "SWAP2"
    },
    "2548": {
      "op": "SWAP1"
    },
    "2549": {
      "op": "SWAP2"
    },
    "2550": {
      "op": "ADD"
    },
    "2551": {
      "op": "CALLDATALOAD"
    },
    "2552": {
      "op": "SWAP1"
    },
    "2553": {
      "jump": "o",
      "op": "JUMP"
    },
    "2554": {
      "op": "JUMPDEST"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2557": {
      "op": "DUP1"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2560": {
      "op": "DUP4"
    },
    "2561": {
      "op": "DUP6"
    },
    "2562": {
      "op": "SUB"
    },
    "2563": {
      "op": "SLT"
    },
    "2564": {
      "op": "ISZERO"
    },
    "2565": {
      "op": "PUSH2",
      "value": "0xA0D"
    },
    "2568": {
      "op": "JUMPI"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2571": {
      "op": "DUP1"
    },
    "2572": {
      "op": "REVERT"
    },
    "2573": {
      "op": "JUMPDEST"
    },
    "2574": {
      "op": "DUP3"
    },
    "2575": {
      "op": "CALLDATALOAD"
    },
    "2576": {
      "op": "PUSH2",
      "value": "0xA18"
    },
    "2579": {
      "op": "DUP2"
    },
    "2580": {
      "op": "PUSH2",
      "value": "0x93E"
    },
    "2583": {
      "jump": "i",
      "op": "JUMP"
    },
    "2584": {
      "op": "JUMPDEST"
    },
    "2585": {
      "op": "SWAP5"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2588": {
      "op": "SWAP4"
    },
    "2589": {
      "op": "SWAP1"
    },
    "2590": {
      "op": "SWAP4"
    },
    "2591": {
      "op": "ADD"
    },
    "2592": {
      "op": "CALLDATALOAD"
    },
    "2593": {
      "op": "SWAP4"
    },
    "2594": {
      "op": "POP"
    },
    "2595": {
      "op": "POP"
    },
    "2596": {
      "op": "POP"
    },
    "2597": {
      "jump": "o",
      "op": "JUMP"
    },
    "2598": {
      "op": "JUMPDEST"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2603": {
      "op": "DUP3"
    },
    "2604": {
      "op": "DUP5"
    },
    "2605": {
      "op": "SUB"
    },
    "2606": {
      "op": "SLT"
    },
    "2607": {
      "op": "ISZERO"
    },
    "2608": {
      "op": "PUSH2",
      "value": "0xA38"
    },
    "2611": {
      "op": "JUMPI"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2614": {
      "op": "DUP1"
    },
    "2615": {
      "op": "REVERT"
    },
    "2616": {
      "op": "JUMPDEST"
    },
    "2617": {
      "op": "DUP2"
    },
    "2618": {
      "op": "CALLDATALOAD"
    },
    "2619": {
      "op": "PUSH2",
      "value": "0xA43"
    },
    "2622": {
      "op": "DUP2"
    },
    "2623": {
      "op": "PUSH2",
      "value": "0x93E"
    },
    "2626": {
      "jump": "i",
      "op": "JUMP"
    },
    "2627": {
      "op": "JUMPDEST"
    },
    "2628": {
      "op": "SWAP4"
    },
    "2629": {
      "op": "SWAP3"
    },
    "2630": {
      "op": "POP"
    },
    "2631": {
      "op": "POP"
    },
    "2632": {
      "op": "POP"
    },
    "2633": {
      "jump": "o",
      "op": "JUMP"
    },
    "2634": {
      "op": "JUMPDEST"
    },
    "2635": {
      "op": "DUP1"
    },
    "2636": {
      "op": "ISZERO"
    },
    "2637": {
      "op": "ISZERO"
    },
    "2638": {
      "op": "DUP2"
    },
    "2639": {
      "op": "EQ"
    },
    "2640": {
      "op": "PUSH2",
      "value": "0x953"
    },
    "2643": {
      "op": "JUMPI"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2646": {
      "op": "DUP1"
    },
    "2647": {
      "op": "REVERT"
    },
    "2648": {
      "op": "JUMPDEST"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2653": {
      "op": "DUP3"
    },
    "2654": {
      "op": "DUP5"
    },
    "2655": {
      "op": "SUB"
    },
    "2656": {
      "op": "SLT"
    },
    "2657": {
      "op": "ISZERO"
    },
    "2658": {
      "op": "PUSH2",
      "value": "0xA6A"
    },
    "2661": {
      "op": "JUMPI"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2664": {
      "op": "DUP1"
    },
    "2665": {
      "op": "REVERT"
    },
    "2666": {
      "op": "JUMPDEST"
    },
    "2667": {
      "op": "DUP2"
    },
    "2668": {
      "op": "CALLDATALOAD"
    },
    "2669": {
      "op": "PUSH2",
      "value": "0xA43"
    },
    "2672": {
      "op": "DUP2"
    },
    "2673": {
      "op": "PUSH2",
      "value": "0xA4A"
    },
    "2676": {
      "jump": "i",
      "op": "JUMP"
    },
    "2677": {
      "op": "JUMPDEST"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2680": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2689": {
      "op": "DUP3"
    },
    "2690": {
      "op": "GT"
    },
    "2691": {
      "op": "ISZERO"
    },
    "2692": {
      "op": "PUSH2",
      "value": "0xA8F"
    },
    "2695": {
      "op": "JUMPI"
    },
    "2696": {
      "op": "PUSH2",
      "value": "0xA8F"
    },
    "2699": {
      "op": "PUSH2",
      "value": "0x71E"
    },
    "2702": {
      "jump": "i",
      "op": "JUMP"
    },
    "2703": {
      "op": "JUMPDEST"
    },
    "2704": {
      "op": "POP"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2707": {
      "op": "SHL"
    },
    "2708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2710": {
      "op": "ADD"
    },
    "2711": {
      "op": "SWAP1"
    },
    "2712": {
      "jump": "o",
      "op": "JUMP"
    },
    "2713": {
      "op": "JUMPDEST"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2716": {
      "op": "DUP3"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2719": {
      "op": "DUP4"
    },
    "2720": {
      "op": "ADD"
    },
    "2721": {
      "op": "SLT"
    },
    "2722": {
      "op": "PUSH2",
      "value": "0xAAA"
    },
    "2725": {
      "op": "JUMPI"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2728": {
      "op": "DUP1"
    },
    "2729": {
      "op": "REVERT"
    },
    "2730": {
      "op": "JUMPDEST"
    },
    "2731": {
      "op": "DUP2"
    },
    "2732": {
      "op": "MLOAD"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2735": {
      "op": "PUSH2",
      "value": "0xABA"
    },
    "2738": {
      "op": "PUSH2",
      "value": "0x7AC"
    },
    "2741": {
      "op": "DUP4"
    },
    "2742": {
      "op": "PUSH2",
      "value": "0xA75"
    },
    "2745": {
      "jump": "i",
      "op": "JUMP"
    },
    "2746": {
      "op": "JUMPDEST"
    },
    "2747": {
      "op": "DUP3"
    },
    "2748": {
      "op": "DUP2"
    },
    "2749": {
      "op": "MSTORE"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2752": {
      "op": "SWAP3"
    },
    "2753": {
      "op": "SWAP1"
    },
    "2754": {
      "op": "SWAP3"
    },
    "2755": {
      "op": "SHL"
    },
    "2756": {
      "op": "DUP5"
    },
    "2757": {
      "op": "ADD"
    },
    "2758": {
      "op": "DUP2"
    },
    "2759": {
      "op": "ADD"
    },
    "2760": {
      "op": "SWAP2"
    },
    "2761": {
      "op": "DUP2"
    },
    "2762": {
      "op": "DUP2"
    },
    "2763": {
      "op": "ADD"
    },
    "2764": {
      "op": "SWAP1"
    },
    "2765": {
      "op": "DUP7"
    },
    "2766": {
      "op": "DUP5"
    },
    "2767": {
      "op": "GT"
    },
    "2768": {
      "op": "ISZERO"
    },
    "2769": {
      "op": "PUSH2",
      "value": "0xAD9"
    },
    "2772": {
      "op": "JUMPI"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2775": {
      "op": "DUP1"
    },
    "2776": {
      "op": "REVERT"
    },
    "2777": {
      "op": "JUMPDEST"
    },
    "2778": {
      "op": "DUP3"
    },
    "2779": {
      "op": "DUP7"
    },
    "2780": {
      "op": "ADD"
    },
    "2781": {
      "op": "JUMPDEST"
    },
    "2782": {
      "op": "DUP5"
    },
    "2783": {
      "op": "DUP2"
    },
    "2784": {
      "op": "LT"
    },
    "2785": {
      "op": "ISZERO"
    },
    "2786": {
      "op": "PUSH2",
      "value": "0xB55"
    },
    "2789": {
      "op": "JUMPI"
    },
    "2790": {
      "op": "DUP1"
    },
    "2791": {
      "op": "MLOAD"
    },
    "2792": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2801": {
      "op": "DUP2"
    },
    "2802": {
      "op": "GT"
    },
    "2803": {
      "op": "ISZERO"
    },
    "2804": {
      "op": "PUSH2",
      "value": "0xAFD"
    },
    "2807": {
      "op": "JUMPI"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2810": {
      "op": "DUP1"
    },
    "2811": {
      "op": "DUP2"
    },
    "2812": {
      "op": "REVERT"
    },
    "2813": {
      "op": "JUMPDEST"
    },
    "2814": {
      "op": "DUP8"
    },
    "2815": {
      "op": "ADD"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2818": {
      "op": "DUP2"
    },
    "2819": {
      "op": "ADD"
    },
    "2820": {
      "op": "DUP10"
    },
    "2821": {
      "op": "SGT"
    },
    "2822": {
      "op": "PUSH2",
      "value": "0xB0F"
    },
    "2825": {
      "op": "JUMPI"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2828": {
      "op": "DUP1"
    },
    "2829": {
      "op": "DUP2"
    },
    "2830": {
      "op": "REVERT"
    },
    "2831": {
      "op": "JUMPDEST"
    },
    "2832": {
      "op": "DUP5"
    },
    "2833": {
      "op": "DUP2"
    },
    "2834": {
      "op": "ADD"
    },
    "2835": {
      "op": "MLOAD"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2838": {
      "op": "PUSH2",
      "value": "0xB21"
    },
    "2841": {
      "op": "PUSH2",
      "value": "0x7AC"
    },
    "2844": {
      "op": "DUP4"
    },
    "2845": {
      "op": "PUSH2",
      "value": "0x765"
    },
    "2848": {
      "jump": "i",
      "op": "JUMP"
    },
    "2849": {
      "op": "JUMPDEST"
    },
    "2850": {
      "op": "DUP3"
    },
    "2851": {
      "op": "DUP2"
    },
    "2852": {
      "op": "MSTORE"
    },
    "2853": {
      "op": "DUP12"
    },
    "2854": {
      "op": "DUP3"
    },
    "2855": {
      "op": "DUP5"
    },
    "2856": {
      "op": "DUP7"
    },
    "2857": {
      "op": "ADD"
    },
    "2858": {
      "op": "ADD"
    },
    "2859": {
      "op": "GT"
    },
    "2860": {
      "op": "ISZERO"
    },
    "2861": {
      "op": "PUSH2",
      "value": "0xB36"
    },
    "2864": {
      "op": "JUMPI"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2867": {
      "op": "DUP1"
    },
    "2868": {
      "op": "DUP2"
    },
    "2869": {
      "op": "REVERT"
    },
    "2870": {
      "op": "JUMPDEST"
    },
    "2871": {
      "op": "PUSH2",
      "value": "0xB45"
    },
    "2874": {
      "op": "DUP4"
    },
    "2875": {
      "op": "DUP10"
    },
    "2876": {
      "op": "DUP4"
    },
    "2877": {
      "op": "ADD"
    },
    "2878": {
      "op": "DUP5"
    },
    "2879": {
      "op": "DUP8"
    },
    "2880": {
      "op": "ADD"
    },
    "2881": {
      "op": "PUSH2",
      "value": "0x820"
    },
    "2884": {
      "jump": "i",
      "op": "JUMP"
    },
    "2885": {
      "op": "JUMPDEST"
    },
    "2886": {
      "op": "DUP7"
    },
    "2887": {
      "op": "MSTORE"
    },
    "2888": {
      "op": "POP"
    },
    "2889": {
      "op": "POP"
    },
    "2890": {
      "op": "POP"
    },
    "2891": {
      "op": "SWAP2"
    },
    "2892": {
      "op": "DUP4"
    },
    "2893": {
      "op": "ADD"
    },
    "2894": {
      "op": "SWAP2"
    },
    "2895": {
      "op": "DUP4"
    },
    "2896": {
      "op": "ADD"
    },
    "2897": {
      "op": "PUSH2",
      "value": "0xADD"
    },
    "2900": {
      "op": "JUMP"
    },
    "2901": {
      "op": "JUMPDEST"
    },
    "2902": {
      "op": "POP"
    },
    "2903": {
      "op": "SWAP7"
    },
    "2904": {
      "op": "SWAP6"
    },
    "2905": {
      "op": "POP"
    },
    "2906": {
      "op": "POP"
    },
    "2907": {
      "op": "POP"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "op": "POP"
    },
    "2910": {
      "op": "POP"
    },
    "2911": {
      "jump": "o",
      "op": "JUMP"
    },
    "2912": {
      "op": "JUMPDEST"
    },
    "2913": {
      "op": "DUP1"
    },
    "2914": {
      "op": "MLOAD"
    },
    "2915": {
      "op": "PUSH2",
      "value": "0xB6B"
    },
    "2918": {
      "op": "DUP2"
    },
    "2919": {
      "op": "PUSH2",
      "value": "0x93E"
    },
    "2922": {
      "jump": "i",
      "op": "JUMP"
    },
    "2923": {
      "op": "JUMPDEST"
    },
    "2924": {
      "op": "SWAP2"
    },
    "2925": {
      "op": "SWAP1"
    },
    "2926": {
      "op": "POP"
    },
    "2927": {
      "jump": "o",
      "op": "JUMP"
    },
    "2928": {
      "op": "JUMPDEST"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2931": {
      "op": "DUP1"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2934": {
      "op": "DUP1"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2939": {
      "op": "DUP7"
    },
    "2940": {
      "op": "DUP9"
    },
    "2941": {
      "op": "SUB"
    },
    "2942": {
      "op": "SLT"
    },
    "2943": {
      "op": "ISZERO"
    },
    "2944": {
      "op": "PUSH2",
      "value": "0xB88"
    },
    "2947": {
      "op": "JUMPI"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2950": {
      "op": "DUP1"
    },
    "2951": {
      "op": "REVERT"
    },
    "2952": {
      "op": "JUMPDEST"
    },
    "2953": {
      "op": "DUP6"
    },
    "2954": {
      "op": "MLOAD"
    },
    "2955": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2964": {
      "op": "DUP1"
    },
    "2965": {
      "op": "DUP3"
    },
    "2966": {
      "op": "GT"
    },
    "2967": {
      "op": "ISZERO"
    },
    "2968": {
      "op": "PUSH2",
      "value": "0xBA0"
    },
    "2971": {
      "op": "JUMPI"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2974": {
      "op": "DUP1"
    },
    "2975": {
      "op": "REVERT"
    },
    "2976": {
      "op": "JUMPDEST"
    },
    "2977": {
      "op": "DUP2"
    },
    "2978": {
      "op": "DUP9"
    },
    "2979": {
      "op": "ADD"
    },
    "2980": {
      "op": "SWAP2"
    },
    "2981": {
      "op": "POP"
    },
    "2982": {
      "op": "DUP9"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2985": {
      "op": "DUP4"
    },
    "2986": {
      "op": "ADD"
    },
    "2987": {
      "op": "SLT"
    },
    "2988": {
      "op": "PUSH2",
      "value": "0xBB4"
    },
    "2991": {
      "op": "JUMPI"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2994": {
      "op": "DUP1"
    },
    "2995": {
      "op": "REVERT"
    },
    "2996": {
      "op": "JUMPDEST"
    },
    "2997": {
      "op": "DUP2"
    },
    "2998": {
      "op": "MLOAD"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3001": {
      "op": "PUSH2",
      "value": "0xBC4"
    },
    "3004": {
      "op": "PUSH2",
      "value": "0x7AC"
    },
    "3007": {
      "op": "DUP4"
    },
    "3008": {
      "op": "PUSH2",
      "value": "0xA75"
    },
    "3011": {
      "jump": "i",
      "op": "JUMP"
    },
    "3012": {
      "op": "JUMPDEST"
    },
    "3013": {
      "op": "DUP3"
    },
    "3014": {
      "op": "DUP2"
    },
    "3015": {
      "op": "MSTORE"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3018": {
      "op": "SWAP3"
    },
    "3019": {
      "op": "SWAP1"
    },
    "3020": {
      "op": "SWAP3"
    },
    "3021": {
      "op": "SHL"
    },
    "3022": {
      "op": "DUP5"
    },
    "3023": {
      "op": "ADD"
    },
    "3024": {
      "op": "DUP2"
    },
    "3025": {
      "op": "ADD"
    },
    "3026": {
      "op": "SWAP2"
    },
    "3027": {
      "op": "DUP2"
    },
    "3028": {
      "op": "DUP2"
    },
    "3029": {
      "op": "ADD"
    },
    "3030": {
      "op": "SWAP1"
    },
    "3031": {
      "op": "DUP13"
    },
    "3032": {
      "op": "DUP5"
    },
    "3033": {
      "op": "GT"
    },
    "3034": {
      "op": "ISZERO"
    },
    "3035": {
      "op": "PUSH2",
      "value": "0xBE3"
    },
    "3038": {
      "op": "JUMPI"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3041": {
      "op": "DUP1"
    },
    "3042": {
      "op": "REVERT"
    },
    "3043": {
      "op": "JUMPDEST"
    },
    "3044": {
      "op": "SWAP5"
    },
    "3045": {
      "op": "DUP3"
    },
    "3046": {
      "op": "ADD"
    },
    "3047": {
      "op": "SWAP5"
    },
    "3048": {
      "op": "JUMPDEST"
    },
    "3049": {
      "op": "DUP4"
    },
    "3050": {
      "op": "DUP7"
    },
    "3051": {
      "op": "LT"
    },
    "3052": {
      "op": "ISZERO"
    },
    "3053": {
      "op": "PUSH2",
      "value": "0xC0A"
    },
    "3056": {
      "op": "JUMPI"
    },
    "3057": {
      "op": "DUP6"
    },
    "3058": {
      "op": "MLOAD"
    },
    "3059": {
      "op": "PUSH2",
      "value": "0xBFB"
    },
    "3062": {
      "op": "DUP2"
    },
    "3063": {
      "op": "PUSH2",
      "value": "0x93E"
    },
    "3066": {
      "jump": "i",
      "op": "JUMP"
    },
    "3067": {
      "op": "JUMPDEST"
    },
    "3068": {
      "op": "DUP3"
    },
    "3069": {
      "op": "MSTORE"
    },
    "3070": {
      "op": "SWAP5"
    },
    "3071": {
      "op": "DUP3"
    },
    "3072": {
      "op": "ADD"
    },
    "3073": {
      "op": "SWAP5"
    },
    "3074": {
      "op": "SWAP1"
    },
    "3075": {
      "op": "DUP3"
    },
    "3076": {
      "op": "ADD"
    },
    "3077": {
      "op": "SWAP1"
    },
    "3078": {
      "op": "PUSH2",
      "value": "0xBE8"
    },
    "3081": {
      "op": "JUMP"
    },
    "3082": {
      "op": "JUMPDEST"
    },
    "3083": {
      "op": "SWAP2"
    },
    "3084": {
      "op": "DUP12"
    },
    "3085": {
      "op": "ADD"
    },
    "3086": {
      "op": "MLOAD"
    },
    "3087": {
      "op": "SWAP2"
    },
    "3088": {
      "op": "SWAP10"
    },
    "3089": {
      "op": "POP"
    },
    "3090": {
      "op": "SWAP1"
    },
    "3091": {
      "op": "SWAP4"
    },
    "3092": {
      "op": "POP"
    },
    "3093": {
      "op": "POP"
    },
    "3094": {
      "op": "POP"
    },
    "3095": {
      "op": "DUP1"
    },
    "3096": {
      "op": "DUP3"
    },
    "3097": {
      "op": "GT"
    },
    "3098": {
      "op": "ISZERO"
    },
    "3099": {
      "op": "PUSH2",
      "value": "0xC23"
    },
    "3102": {
      "op": "JUMPI"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3105": {
      "op": "DUP1"
    },
    "3106": {
      "op": "REVERT"
    },
    "3107": {
      "op": "JUMPDEST"
    },
    "3108": {
      "op": "POP"
    },
    "3109": {
      "op": "PUSH2",
      "value": "0xC30"
    },
    "3112": {
      "op": "DUP9"
    },
    "3113": {
      "op": "DUP3"
    },
    "3114": {
      "op": "DUP10"
    },
    "3115": {
      "op": "ADD"
    },
    "3116": {
      "op": "PUSH2",
      "value": "0xA99"
    },
    "3119": {
      "jump": "i",
      "op": "JUMP"
    },
    "3120": {
      "op": "JUMPDEST"
    },
    "3121": {
      "op": "SWAP5"
    },
    "3122": {
      "op": "POP"
    },
    "3123": {
      "op": "POP"
    },
    "3124": {
      "op": "PUSH2",
      "value": "0xC3F"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3129": {
      "op": "DUP8"
    },
    "3130": {
      "op": "ADD"
    },
    "3131": {
      "op": "PUSH2",
      "value": "0xB60"
    },
    "3134": {
      "jump": "i",
      "op": "JUMP"
    },
    "3135": {
      "op": "JUMPDEST"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3138": {
      "op": "DUP8"
    },
    "3139": {
      "op": "ADD"
    },
    "3140": {
      "op": "MLOAD"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3143": {
      "op": "SWAP1"
    },
    "3144": {
      "op": "SWAP8"
    },
    "3145": {
      "op": "ADD"
    },
    "3146": {
      "op": "MLOAD"
    },
    "3147": {
      "op": "SWAP6"
    },
    "3148": {
      "op": "SWAP9"
    },
    "3149": {
      "op": "SWAP5"
    },
    "3150": {
      "op": "SWAP8"
    },
    "3151": {
      "op": "POP"
    },
    "3152": {
      "op": "SWAP6"
    },
    "3153": {
      "op": "SWAP5"
    },
    "3154": {
      "op": "SWAP4"
    },
    "3155": {
      "op": "SWAP3"
    },
    "3156": {
      "op": "POP"
    },
    "3157": {
      "op": "POP"
    },
    "3158": {
      "op": "POP"
    },
    "3159": {
      "jump": "o",
      "op": "JUMP"
    },
    "3160": {
      "op": "JUMPDEST"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3165": {
      "op": "DUP3"
    },
    "3166": {
      "op": "DUP5"
    },
    "3167": {
      "op": "SUB"
    },
    "3168": {
      "op": "SLT"
    },
    "3169": {
      "op": "ISZERO"
    },
    "3170": {
      "op": "PUSH2",
      "value": "0xC6A"
    },
    "3173": {
      "op": "JUMPI"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3176": {
      "op": "DUP1"
    },
    "3177": {
      "op": "REVERT"
    },
    "3178": {
      "op": "JUMPDEST"
    },
    "3179": {
      "op": "DUP2"
    },
    "3180": {
      "op": "MLOAD"
    },
    "3181": {
      "op": "PUSH2",
      "value": "0xA43"
    },
    "3184": {
      "op": "DUP2"
    },
    "3185": {
      "op": "PUSH2",
      "value": "0x93E"
    },
    "3188": {
      "jump": "i",
      "op": "JUMP"
    },
    "3189": {
      "op": "JUMPDEST"
    },
    "3190": {
      "op": "DUP5"
    },
    "3191": {
      "op": "DUP2"
    },
    "3192": {
      "op": "MSTORE"
    },
    "3193": {
      "op": "DUP4"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3196": {
      "op": "DUP3"
    },
    "3197": {
      "op": "ADD"
    },
    "3198": {
      "op": "MSTORE"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3201": {
      "op": "DUP1"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3204": {
      "op": "SHL"
    },
    "3205": {
      "op": "SUB"
    },
    "3206": {
      "op": "DUP4"
    },
    "3207": {
      "op": "AND"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3210": {
      "op": "DUP3"
    },
    "3211": {
      "op": "ADD"
    },
    "3212": {
      "op": "MSTORE"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3217": {
      "op": "DUP3"
    },
    "3218": {
      "op": "ADD"
    },
    "3219": {
      "op": "MSTORE"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3222": {
      "op": "PUSH2",
      "value": "0xCA2"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3227": {
      "op": "DUP4"
    },
    "3228": {
      "op": "ADD"
    },
    "3229": {
      "op": "DUP5"
    },
    "3230": {
      "op": "PUSH2",
      "value": "0x850"
    },
    "3233": {
      "jump": "i",
      "op": "JUMP"
    },
    "3234": {
      "op": "JUMPDEST"
    },
    "3235": {
      "op": "SWAP7"
    },
    "3236": {
      "op": "SWAP6"
    },
    "3237": {
      "op": "POP"
    },
    "3238": {
      "op": "POP"
    },
    "3239": {
      "op": "POP"
    },
    "3240": {
      "op": "POP"
    },
    "3241": {
      "op": "POP"
    },
    "3242": {
      "op": "POP"
    },
    "3243": {
      "jump": "o",
      "op": "JUMP"
    },
    "3244": {
      "op": "JUMPDEST"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3249": {
      "op": "DUP3"
    },
    "3250": {
      "op": "DUP5"
    },
    "3251": {
      "op": "SUB"
    },
    "3252": {
      "op": "SLT"
    },
    "3253": {
      "op": "ISZERO"
    },
    "3254": {
      "op": "PUSH2",
      "value": "0xCBE"
    },
    "3257": {
      "op": "JUMPI"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3260": {
      "op": "DUP1"
    },
    "3261": {
      "op": "REVERT"
    },
    "3262": {
      "op": "JUMPDEST"
    },
    "3263": {
      "op": "POP"
    },
    "3264": {
      "op": "MLOAD"
    },
    "3265": {
      "op": "SWAP2"
    },
    "3266": {
      "op": "SWAP1"
    },
    "3267": {
      "op": "POP"
    },
    "3268": {
      "jump": "o",
      "op": "JUMP"
    },
    "3269": {
      "op": "JUMPDEST"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3274": {
      "op": "DUP3"
    },
    "3275": {
      "op": "DUP5"
    },
    "3276": {
      "op": "SUB"
    },
    "3277": {
      "op": "SLT"
    },
    "3278": {
      "op": "ISZERO"
    },
    "3279": {
      "op": "PUSH2",
      "value": "0xCD7"
    },
    "3282": {
      "op": "JUMPI"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3285": {
      "op": "DUP1"
    },
    "3286": {
      "op": "REVERT"
    },
    "3287": {
      "op": "JUMPDEST"
    },
    "3288": {
      "op": "DUP2"
    },
    "3289": {
      "op": "MLOAD"
    },
    "3290": {
      "op": "PUSH2",
      "value": "0xA43"
    },
    "3293": {
      "op": "DUP2"
    },
    "3294": {
      "op": "PUSH2",
      "value": "0xA4A"
    },
    "3297": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "1b8d996d3d61126419a9c13962556fcdfa167d1c",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\n\nimport '../interfaces/IPair.sol';\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n\ncontract ArbV1 {\n    \n    using SafeMath for uint;\n\n    bytes4 constant swapFuncSelector = bytes4(keccak256(bytes('swapExactTokensForTokens(uint256,uint256,address[],address,uint256)')));\n    bytes4 constant approveFuncSelector = bytes4(keccak256(bytes('approve(address,uint256)')));\n\n    address public owner;\n    address internal token;\n    bool internal instantCashout;\n\n    event arbSuccesful (uint gain, address token, address initiator);\n    event ownerChanged (address oldOwner, address newOwner);\n    event cashoutChanged (address owner, bool cashOut);\n    event transferSent (address token, address to);\n    event CaleeResponse (uint amount, address exchange);\n\n    modifier OnlyOwner() {\n        require(owner == msg.sender);\n        _;\n    }\n\n    constructor () {\n        owner = msg.sender;\n        instantCashout = true;\n    }\n\n    function start (\n        uint amount0,\n        uint amount1,\n        address _token,\n        bytes memory data) public {\n            ( , , address tokensPair, , ) = unpack(data);\n\n            require(_token == IPair(tokensPair).token0() || _token == IPair(tokensPair).token1(), \n                \"Incorrect Pair for token\");\n\n            token = _token;\n            IPair(tokensPair).swap(amount0,amount1,address(this),data);\n        }\n\n    function unpack (bytes memory data) public pure returns (\n        address[] memory routers, bytes[] memory bytesList,\n        address pairAddress,uint amount,uint fee) {\n            \n        (routers, bytesList, pairAddress, amount, fee) = abi.decode(\n            data, (address[],bytes[],address,uint,uint));\n    }\n\n\n    function _execute (address[] memory routers, bytes[] memory data, uint amount, uint fee) private {\n        \n        uint256 swapAmount;\n        address[] memory path;\n        bool success;\n\n        require(routers.length == data.length,\"incongruent arrays!\");\n        emit CaleeResponse(amount, msg.sender);\n\n        for (uint i; i < routers.length; i++) {\n            path = abi.decode(data[i],(address[]));\n            swapAmount = IERC20(path[0]).balanceOf(address(this));\n            (success,) = path[0].call(abi.encodeWithSelector(approveFuncSelector,routers[i],swapAmount));\n            require(success,\"Failed to approve\");\n\n            (success,) = routers[i].call(abi.encodeWithSelector(\n                swapFuncSelector, swapAmount,0,path,address(this),block.timestamp + 60));\n            require(success,\"Failed to swap\");\n        }\n\n        uint amountGot = IERC20(token).balanceOf(address(this));\n        uint amountExpected = amount.mul(fee).div(100000);\n        require (amountGot > amountExpected,\"Unsuccesful Arb!\");\n        uint gain = amountGot.sub(amountExpected);\n        \n        _sendToken(token, msg.sender, amountExpected);\n        if (instantCashout) {\n            _sendToken(token, tx.origin, gain);\n        } else {\n            _sendToken(token, owner, gain);\n        }\n        emit arbSuccesful(gain,token,tx.origin);\n    }\n\n    function _respond(bytes calldata data) internal {\n        (address[] memory addresses, bytes[] memory Data, address pairAddress, uint amount, uint fee) = unpack(data);\n\n        require(msg.sender == pairAddress,\"Forbidden Caller\");\n        _execute(addresses,Data,amount,fee);\n    }\n\n    function _sendCoin(address payable recipient, uint amount) private {\n        (bool sent, ) = recipient.call{value: amount}(\"\");\n        require(sent, \"Failed to send Ether\");\n        emit transferSent(address(0),recipient);\n    }\n    \n    function sendCoin(address payable recipient, uint amount) external OnlyOwner() {\n        _sendCoin(recipient,amount);\n    }\n\n    function _sendToken(address tokenAdd, address reciepient, uint amount) private {\n        require(IERC20(tokenAdd).balanceOf(address(this)) >= amount,\"Insufficient Funds\");\n        IERC20(tokenAdd).transfer(reciepient, amount);\n        emit transferSent(tokenAdd, reciepient);\n    }\n    function sendToken(address tokenAdd, address reciepient,uint amount) external OnlyOwner() {\n        _sendToken(tokenAdd,reciepient,amount);\n    }\n\n    function changeOwner (address _owner) external OnlyOwner() {\n        owner = _owner;\n    }\n\n    function changeCashout (bool _method) external OnlyOwner() {\n        instantCashout = _method;\n        \n    }\n    function skim(address skimPair) external {\n        IPair(skimPair).skim(msg.sender);\n    }\n\n    receive() external payable {}\n}\n\n",
  "sourceMap": "216:4396:2:-:0;;;974:81;;;;;;;;;-1:-1:-1;999:5:2;:18;;-1:-1:-1;;;;;;999:18:2;1007:10;999:18;;;;1027:21;;-1:-1:-1;;;;1027:21:2;-1:-1:-1;;;1027:21:2;;;216:4396;;;;;;",
  "sourcePath": "contracts/ArbV1.sol",
  "type": "contract"
}